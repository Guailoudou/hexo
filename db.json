{"meta":{"version":1,"warehouse":"5.0.1"},"models":{"Asset":[{"_id":"themes/hexo-theme-aircloud-master/source/css/aircloud.css","path":"css/aircloud.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-aircloud-master/source/css/aircloud.css.map","path":"css/aircloud.css.map","modified":0,"renderable":1},{"_id":"themes/hexo-theme-aircloud-master/source/css/aircloud.less","path":"css/aircloud.less","modified":0,"renderable":1},{"_id":"themes/hexo-theme-aircloud-master/source/css/gitment.css","path":"css/gitment.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-aircloud-master/source/img/favicon.ico","path":"img/favicon.ico","modified":0,"renderable":1},{"_id":"themes/hexo-theme-aircloud-master/source/js/gitment.js","path":"js/gitment.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-aircloud-master/source/js/index.js","path":"js/index.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-aircloud-master/source/img/gld_skm.png","path":"img/gld_skm.png","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/Openp2p-Launcher-MC帮助文档.md","hash":"22372c7ac9d7c9e73fee14aa066c1455f2a244d9","modified":1713188997136},{"_id":"source/_posts/UUIDMigrator.md","hash":"c8cf450e2dfa24766eef9ffa813b71689abb221e","modified":1709198736961},{"_id":"source/_posts/hexo.md","hash":"a2a0fe24620d05605afae76e2c883deb1094400d","modified":1709204612975},{"_id":"source/_posts/mcping.md","hash":"66e9c086529cc5f68c8c506d42c1e08db8e57e9b","modified":1709198456671},{"_id":"source/about/index.md","hash":"ad4b43b153f315ff08e03c04a3e65093c7da927e","modified":1709291598389},{"_id":"source/tags/index.md","hash":"ffd17390d1bc2c7945f30912cf489fcd57d8fb71","modified":1709204061846},{"_id":"source/_posts/测试文档.md","hash":"644c87b31d0d800ac1429f89a2c1a94c0f2cb957","modified":1709103734713},{"_id":"source/_posts/mcwiki.md","hash":"7bde0df66a55e48b73f6d515c94b98bbe1d20a2e","modified":1709198466532},{"_id":"source/_posts/UUIDMigrator/40fd3918e4985fcc126a54d3f75abc8f496960407.png","hash":"83ee6f42f4acde5563dc9a636433beb318a1938a","modified":1709122423219},{"_id":"source/_posts/UUIDMigrator/UUIDMigrator.bat","hash":"ee92880f207b560456732ce4ba42fe04fd514632","modified":1707808782194},{"_id":"source/_posts/mcwiki/e584cbe3b84c2c5613e45a3f049b887f496960407.png","hash":"502dc317c3752b54cd9534751214000561575dd6","modified":1709122295884},{"_id":"themes/hexo-theme-aircloud-master/layout/catagory.ejs","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1675360670000},{"_id":"themes/hexo-theme-aircloud-master/source/_less/about.less","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1675360670000},{"_id":"themes/hexo-theme-aircloud-master/source/_less/diff.less","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1675360670000},{"_id":"themes/hexo-theme-aircloud-master/source/_less/page.less","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1675360670000},{"_id":"themes/hexo-theme-aircloud-master/source/_less/theme.less","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1675360670000},{"_id":"themes/hexo-theme-aircloud-master/.gitignore","hash":"84a048e1a1c7dd770ada920581d096f3179e76cc","modified":1675360670000},{"_id":"themes/hexo-theme-aircloud-master/_config.yml","hash":"63f4d9090becbab41ed47f62edb52e9a741d586c","modified":1709110068368},{"_id":"themes/hexo-theme-aircloud-master/languages/en.yml","hash":"7c91738afbd01239098aec8e09c7e27f014b64de","modified":1675360670000},{"_id":"themes/hexo-theme-aircloud-master/languages/ko.yml","hash":"d729b314c03294b4ce2116a697b289955a429483","modified":1675360670000},{"_id":"themes/hexo-theme-aircloud-master/languages/zh.yml","hash":"110c91155a704a6fc61fbd12253fdfef2a514444","modified":1675360670000},{"_id":"themes/hexo-theme-aircloud-master/layout/404.ejs","hash":"8a30233a7b99831bd771121b5f450aaba412e8d5","modified":1675360670000},{"_id":"themes/hexo-theme-aircloud-master/layout/archive.ejs","hash":"0f8a062f4f2f0648b23bd8c4a21945a6ca60dc1f","modified":1675360670000},{"_id":"themes/hexo-theme-aircloud-master/layout/about.ejs","hash":"75d459dea8a2216105727638e97862fa4ef08d38","modified":1675360670000},{"_id":"themes/hexo-theme-aircloud-master/layout/collect.ejs","hash":"bb5b31ba1c7389b0920d5dc5257fa19b67024106","modified":1675360670000},{"_id":"themes/hexo-theme-aircloud-master/layout/index.ejs","hash":"e5243033bc75f30e954010581025d3cb62fbaff0","modified":1675360670000},{"_id":"themes/hexo-theme-aircloud-master/layout/layout.ejs","hash":"96d72550e22ecaa72905e0df65f3b7f35f57b5a5","modified":1675360670000},{"_id":"themes/hexo-theme-aircloud-master/layout/page.ejs","hash":"75d459dea8a2216105727638e97862fa4ef08d38","modified":1675360670000},{"_id":"themes/hexo-theme-aircloud-master/layout/post.ejs","hash":"cbdb70171d855e57b302c2a282009515d922b5c6","modified":1675360670000},{"_id":"themes/hexo-theme-aircloud-master/layout/tags.ejs","hash":"72c01211afcb8f9e53500dc8c6ea23bc96fe1b96","modified":1675360670000},{"_id":"themes/hexo-theme-aircloud-master/layout/_partial/analytics.ejs","hash":"7108768a4c16df7f5c73a2a85a05c1defe6590a8","modified":1675360670000},{"_id":"themes/hexo-theme-aircloud-master/layout/_partial/donate.ejs","hash":"81c976a3b7fa5c47ef61181d537220eaf1d55eac","modified":1675360670000},{"_id":"themes/hexo-theme-aircloud-master/layout/_partial/footer.ejs","hash":"33db88f1b03548c5181c04d44387dc68a9c4cdf6","modified":1675360670000},{"_id":"themes/hexo-theme-aircloud-master/layout/_partial/head.ejs","hash":"b3ecc34d59996891ec6446c225c1b5f4ccc0d2b9","modified":1675360670000},{"_id":"themes/hexo-theme-aircloud-master/layout/_partial/nav.ejs","hash":"a3c0d5352dfaa7840a8e8fa5ea20b08bfa6d8681","modified":1709110305363},{"_id":"themes/hexo-theme-aircloud-master/layout/_partial/toc.ejs","hash":"41d11d159011466f0b6272aca9a74df8642b693f","modified":1675360670000},{"_id":"themes/hexo-theme-aircloud-master/LICENSE","hash":"218b4bf797149a2751a015812a9adefe368185c1","modified":1675360670000},{"_id":"themes/hexo-theme-aircloud-master/readme-en.md","hash":"26ea5c998b0c1f1947fbae5313b722bcf57ea7fe","modified":1675360670000},{"_id":"themes/hexo-theme-aircloud-master/readme.md","hash":"149fce55a0f51e01596d0b63b438190fff132346","modified":1675360670000},{"_id":"themes/hexo-theme-aircloud-master/source/_less/archive.less","hash":"5538d38614960e69b97a7f80f38b5933851212b8","modified":1675360670000},{"_id":"themes/hexo-theme-aircloud-master/source/_less/common.less","hash":"0c1e4c32a50eac8602f97a1110adc409059b2b40","modified":1675360670000},{"_id":"themes/hexo-theme-aircloud-master/source/_less/gitment.less","hash":"916deb8ecdee798d7a9b43b544e31dfd5bbd6de4","modified":1675360670000},{"_id":"themes/hexo-theme-aircloud-master/source/_less/hightlight.less","hash":"cb4cad2f034bd369a858349cec2da3df6ba08e6a","modified":1675360670000},{"_id":"themes/hexo-theme-aircloud-master/source/_less/index.less","hash":"9363ed3f24e82b6b772e1a30a6aef86845821819","modified":1675360670000},{"_id":"themes/hexo-theme-aircloud-master/source/_less/donate.less","hash":"d63139f4aa148bf894afa5c1007a4398696a0e4c","modified":1675360670000},{"_id":"themes/hexo-theme-aircloud-master/source/_less/layout.less","hash":"194ac7db2eeee7307fcb7470302f8172100181fb","modified":1675360670000},{"_id":"themes/hexo-theme-aircloud-master/source/_less/post.less","hash":"64b85a733a38e23cd5d246edd4c4c30c4379a826","modified":1675360670000},{"_id":"themes/hexo-theme-aircloud-master/source/_less/tag.less","hash":"a4c11708a60f5f550a8bc62babeb851048bbbf5d","modified":1675360670000},{"_id":"themes/hexo-theme-aircloud-master/source/css/aircloud.css.map","hash":"50db34961d11f6f461e23912609d25141068a6fc","modified":1675360670000},{"_id":"themes/hexo-theme-aircloud-master/source/_less/nav.less","hash":"534a6e48b3972fbac20027c1823eb89ecb2d893d","modified":1675360670000},{"_id":"themes/hexo-theme-aircloud-master/source/css/aircloud.less","hash":"5a78ae97d259f271fcdee707dc7753adb6b48ac9","modified":1675360670000},{"_id":"themes/hexo-theme-aircloud-master/source/css/aircloud.css","hash":"d84ebc41c0e6f40af20de3ddec19d5418672233f","modified":1675360670000},{"_id":"themes/hexo-theme-aircloud-master/source/css/gitment.css","hash":"926b553be983d6dd90bcb60c5d6d4ee215d268a6","modified":1675360670000},{"_id":"themes/hexo-theme-aircloud-master/source/img/favicon.ico","hash":"4e40fdce244723b61a4e83804a64e98d1873342e","modified":1709105986863},{"_id":"themes/hexo-theme-aircloud-master/source/_less/variables.less","hash":"0f0fcb50e821d4c102307d613a40314eeee6f7ef","modified":1675360670000},{"_id":"themes/hexo-theme-aircloud-master/source/js/index.js","hash":"35cb5c8db6452386503171bd8bd80a5298f943ce","modified":1675360670000},{"_id":"themes/hexo-theme-aircloud-master/source/_less/toc.less","hash":"d3df8520da83c06414c75f31fd2bd333a7517c1f","modified":1675360670000},{"_id":"themes/hexo-theme-aircloud-master/source/_less/_partial/footer.css","hash":"e00d722211b4695449d72850340ac0dd701d6ede","modified":1675360670000},{"_id":"themes/hexo-theme-aircloud-master/source/_less/_partial/footer.css.map","hash":"9e8d4df5d08425de5a8b247d0dd8b805c6edc661","modified":1675360670000},{"_id":"themes/hexo-theme-aircloud-master/source/_less/_partial/footer.less","hash":"d1469f97daf750f3e4be18c4d640772780c32a75","modified":1675360670000},{"_id":"themes/hexo-theme-aircloud-master/source/js/gitment.js","hash":"89687f8fffe1125e08323fd6635ca4e53771c05e","modified":1675360670000},{"_id":"source/_posts/mcwiki/24da33d6b7033c8fd97619ebd0047548496960407.gif","hash":"2ad4809895e9c1c37220cd0781740fde29a70ee4","modified":1709122305256},{"_id":"public/about/index.html","hash":"1bfa9e7230297aa9ca875b27b0e182336b4cf3b5","modified":1712585298731},{"_id":"public/tags/index.html","hash":"07daeff3df3fbe46e77b18a4849732e002d994e1","modified":1713859196243},{"_id":"public/2024/02/29/mcping/index.html","hash":"aaf6ccdcd99e0e4d59a77efb7b768a82dcea9b3c","modified":1712585298731},{"_id":"public/2024/02/28/UUIDMigrator/index.html","hash":"1c597cd909a6b120ac7ecab02f677b41e7f2b8a0","modified":1712585298731},{"_id":"public/2024/02/28/mcwiki/index.html","hash":"966a85bda8f305f0a5870f691411c943c1a1c6e2","modified":1712585298731},{"_id":"public/2024/02/28/Openp2p-Launcher-MC帮助文档/index.html","hash":"068d734e649e4a244067722a2ce86e5fa43afc1f","modified":1713189124406},{"_id":"public/2024/02/28/测试文档/index.html","hash":"31ab00c6a9bf14e085f2dbaf7fcc57d0ba13291b","modified":1712585298731},{"_id":"public/2022/03/02/hexo/index.html","hash":"c5fd3b841eccb82e9f8f5c260ee3d41559e8ff14","modified":1712585298731},{"_id":"public/archives/index.html","hash":"699637edd3ce641798bec146922e2dde7e3a19a7","modified":1713859196243},{"_id":"public/archives/2022/index.html","hash":"699637edd3ce641798bec146922e2dde7e3a19a7","modified":1713859196243},{"_id":"public/archives/2022/03/index.html","hash":"699637edd3ce641798bec146922e2dde7e3a19a7","modified":1713859196243},{"_id":"public/archives/2024/index.html","hash":"699637edd3ce641798bec146922e2dde7e3a19a7","modified":1713859196243},{"_id":"public/archives/2024/02/index.html","hash":"699637edd3ce641798bec146922e2dde7e3a19a7","modified":1713859196243},{"_id":"public/tags/工具/index.html","hash":"8f240ad451030ff02ce07f49f344beb5c7c2bc4a","modified":1713859196243},{"_id":"public/tags/教程/index.html","hash":"8f240ad451030ff02ce07f49f344beb5c7c2bc4a","modified":1713859196243},{"_id":"public/tags/日志/index.html","hash":"8f240ad451030ff02ce07f49f344beb5c7c2bc4a","modified":1713859196243},{"_id":"public/index.html","hash":"2ab9d87944b4042e709c6b442f0a7c1cede91e27","modified":1713859196243},{"_id":"public/css/aircloud.less","hash":"5a78ae97d259f271fcdee707dc7753adb6b48ac9","modified":1709198931444},{"_id":"public/css/aircloud.css.map","hash":"50db34961d11f6f461e23912609d25141068a6fc","modified":1709198931444},{"_id":"public/img/favicon.ico","hash":"4e40fdce244723b61a4e83804a64e98d1873342e","modified":1709198931444},{"_id":"public/2024/02/28/UUIDMigrator/40fd3918e4985fcc126a54d3f75abc8f496960407.png","hash":"83ee6f42f4acde5563dc9a636433beb318a1938a","modified":1709198931444},{"_id":"public/2024/02/28/UUIDMigrator/UUIDMigrator.bat","hash":"ee92880f207b560456732ce4ba42fe04fd514632","modified":1709198931444},{"_id":"public/2024/02/28/mcwiki/e584cbe3b84c2c5613e45a3f049b887f496960407.png","hash":"502dc317c3752b54cd9534751214000561575dd6","modified":1709198931444},{"_id":"public/css/gitment.css","hash":"926b553be983d6dd90bcb60c5d6d4ee215d268a6","modified":1709198931444},{"_id":"public/css/aircloud.css","hash":"d84ebc41c0e6f40af20de3ddec19d5418672233f","modified":1709198931444},{"_id":"public/js/index.js","hash":"35cb5c8db6452386503171bd8bd80a5298f943ce","modified":1709198931444},{"_id":"public/js/gitment.js","hash":"89687f8fffe1125e08323fd6635ca4e53771c05e","modified":1709198931444},{"_id":"public/2024/02/28/mcwiki/24da33d6b7033c8fd97619ebd0047548496960407.gif","hash":"2ad4809895e9c1c37220cd0781740fde29a70ee4","modified":1709198931444},{"_id":"source/collect/index.md","hash":"055fd34d2bab184c87fec505186a72b560370496","modified":1709204046102},{"_id":"public/collect/index.html","hash":"09842dfe7bc86271a212cf8d746175d3f7bc2646","modified":1712585298731},{"_id":"themes/hexo-theme-aircloud-master/source/img/gld_skm.png","hash":"16bee9f6ea30d08d855d275f76e29698f418b38c","modified":1703065607839},{"_id":"public/img/gld_skm.png","hash":"16bee9f6ea30d08d855d275f76e29698f418b38c","modified":1709224842997},{"_id":"source/_posts/ys3-5.md","hash":"93bece67169869762b3511015cdee16187d34f19","modified":1709301139619},{"_id":"public/2024/03/01/ys3-5/index.html","hash":"9d6d706dfd33fa1ced310e01fdbb1406359e9fd8","modified":1712585298731},{"_id":"public/archives/2024/03/index.html","hash":"699637edd3ce641798bec146922e2dde7e3a19a7","modified":1713859196243},{"_id":"public/tags/前瞻/index.html","hash":"8f240ad451030ff02ce07f49f344beb5c7c2bc4a","modified":1713859196243},{"_id":"public/tags/原神/index.html","hash":"8f240ad451030ff02ce07f49f344beb5c7c2bc4a","modified":1713859196243},{"_id":"source/_posts/jss.md","hash":"9c24d190823e49ecec83b9ba817463fdb22f99a9","modified":1709307451201},{"_id":"public/2024/03/01/jss/index.html","hash":"2f94043f06eedc0916a3785940759bf73d9a99d8","modified":1712585298731},{"_id":"public/tags/学习/index.html","hash":"8f240ad451030ff02ce07f49f344beb5c7c2bc4a","modified":1713859196243},{"_id":"source/_posts/googlere.md","hash":"1dd2bd1d8709f2c307e1e50a7da1d2b5bac4e6c7","modified":1709390983156},{"_id":"source/_posts/googlere/HE_2024-03-02T14-48-14Z_未分组.txt","hash":"1113c13f7986745e83fe9917c9414c5c44125d30","modified":1709390897809},{"_id":"public/2024/03/02/googlere/index.html","hash":"34e51c4cca370df5d93efb7ce62bcc38903dabdf","modified":1709390996942},{"_id":"public/2024/03/02/googlere/HE_2024-03-02T14-48-14Z_未分组.txt","hash":"1113c13f7986745e83fe9917c9414c5c44125d30","modified":1709390996942},{"_id":"source/_posts/hhh.md","hash":"c229b4ce492d37ad08425a646b824cfab917047b","modified":1709459407301},{"_id":"public/2024/03/03/hhh/index.html","hash":"65a9b2677ebc3d9e5b2b156cf828f4d9d9958ea3","modified":1709459424065},{"_id":"source/_posts/stl.md","hash":"c6ab4269cde1560d482ab8fe85489a83df1c1efa","modified":1711549944699},{"_id":"public/2024/03/11/stl/index.html","hash":"a397827115b0478cad4467ec386f4874a6e007ae","modified":1712585298731},{"_id":"source/_posts/linux.md","hash":"8b31af73460956e4a61dfc1eba4f4e4183e4d9a4","modified":1711534286776},{"_id":"public/2024/03/27/linux/index.html","hash":"0cf4be3fc247297314cae6fe3bbc2b8fed9b9f6a","modified":1712585298731},{"_id":"source/_posts/sql.md","hash":"9c5fdada4b8b2763a1566d96b213d4884a387e4c","modified":1712062347376},{"_id":"public/2024/04/02/sql/index.html","hash":"62e2b1f2e81bad3bd0a9b1bae6fa8a9531334290","modified":1712585298731},{"_id":"public/archives/page/2/index.html","hash":"699637edd3ce641798bec146922e2dde7e3a19a7","modified":1713859196243},{"_id":"public/page/2/index.html","hash":"d2da96d3d7426db942d8bb0edd36853a1d50b3da","modified":1713859196243},{"_id":"public/archives/2024/04/index.html","hash":"699637edd3ce641798bec146922e2dde7e3a19a7","modified":1713859196243},{"_id":"public/tags/笔记/index.html","hash":"8f240ad451030ff02ce07f49f344beb5c7c2bc4a","modified":1713859196243},{"_id":"source/_posts/sf4-1work.md","hash":"4ea76d6535e9ae58ba16c02e3c6e61bb75933901","modified":1712457021708},{"_id":"source/_posts/sf4-1work/tm.jpg","hash":"72c18690c17d17659cdb47c713c0aef52ab888c6","modified":1712448446424},{"_id":"public/2024/04/07/sf4-1work/index.html","hash":"ac3109954579919847e9b2d8feda07c699037082","modified":1712585298731},{"_id":"public/archives/2024/page/2/index.html","hash":"699637edd3ce641798bec146922e2dde7e3a19a7","modified":1713859196243},{"_id":"public/tags/作业/index.html","hash":"8f240ad451030ff02ce07f49f344beb5c7c2bc4a","modified":1713859196243},{"_id":"public/2024/04/07/sf4-1work/tm.jpg","hash":"72c18690c17d17659cdb47c713c0aef52ab888c6","modified":1712448601530},{"_id":"source/_posts/sf4-1work/tm.png","hash":"a6cf3961ba7d4b845f57d85ba100fdbc4f724e20","modified":1712455786140},{"_id":"public/2024/04/07/sf4-1work/tm.png","hash":"a6cf3961ba7d4b845f57d85ba100fdbc4f724e20","modified":1712456411162},{"_id":"source/_posts/sql4-11.md","hash":"9784ab42f5bbac01a327c6e79ed82ee48308274d","modified":1712828713710},{"_id":"public/2024/04/11/sql4-11/index.html","hash":"d264bdb7babed0b336325e5066f166e79cb13cbd","modified":1712828736582},{"_id":"source/_posts/opl_help.md","hash":"f3730dae0d8ad2f513b46e6ef9e6d4a49c946779","modified":1713584480766},{"_id":"public/2024/04/15/opl_help/index.html","hash":"107bf4f17beef53634f2c372173a0b8ef5d91ad9","modified":1713584503794},{"_id":"source/_posts/opl_help/OPL联机工具_wpf架构测试.zip","hash":"5817bab6c1311ad91abec537189d1ff48ff5f8eb","modified":1713362008651},{"_id":"public/2024/04/15/opl_help/OPL联机工具_wpf架构测试.zip","hash":"5817bab6c1311ad91abec537189d1ff48ff5f8eb","modified":1713362581443},{"_id":"source/_posts/opl_ui.md","hash":"d2055d434eb1ad770dc99e022544d455ff92feec","modified":1713610338085},{"_id":"public/2024/04/19/opl_ui/index.html","hash":"51a9fc0f0118cd613dcb35be19de2248d672364a","modified":1713610353252},{"_id":"source/_posts/opl_mc/tp2.png","hash":"109039f73dd49a5e95ef0c45eb1b93b37309a545","modified":1713793331968},{"_id":"source/_posts/opl_mc.md","hash":"c6332fcb38a75fdccaa23b2189807c0e6cf64173","modified":1713859181148},{"_id":"source/_posts/opl_mc/tp3.png","hash":"2b803798a244b42d804a67a79d6dec53f46376d7","modified":1713793566791},{"_id":"source/_posts/opl_mc/tp1.png","hash":"ed7b463814136cff41e35414e2236fbcde009bab","modified":1713793067709},{"_id":"public/2024/04/22/opl_mc/index.html","hash":"11e85f5bd504da3535d189421dfefb81b705729b","modified":1713859196243},{"_id":"public/2024/04/22/opl_mc/tp2.png","hash":"109039f73dd49a5e95ef0c45eb1b93b37309a545","modified":1713859196243},{"_id":"public/2024/04/22/opl_mc/tp3.png","hash":"2b803798a244b42d804a67a79d6dec53f46376d7","modified":1713859196243},{"_id":"public/2024/04/22/opl_mc/tp1.png","hash":"ed7b463814136cff41e35414e2236fbcde009bab","modified":1713859196243}],"Category":[],"Data":[],"Page":[{"layout":"about","title":"About","date":"2024-02-28T08:22:32.000Z","comments":0,"_content":"### 关于\n一个喜欢无聊捣鼓电脑的家伙，喜欢写代码来实现自动化解决问题\n公开的社交账号：\n- [B站](https://space.bilibili.com/496960407)\n- QQ：`1241593334`\n### 赞助我\n<img src=\"/img/gld_skm.png\" width=\"100%\">\n\n**（你赞助我不会得到任何东西）**","source":"about/index.md","raw":"---\nlayout: \"about\"\ntitle: About\ndate: 2024-02-28 16:22:32\ncomments: false\n---\n### 关于\n一个喜欢无聊捣鼓电脑的家伙，喜欢写代码来实现自动化解决问题\n公开的社交账号：\n- [B站](https://space.bilibili.com/496960407)\n- QQ：`1241593334`\n### 赞助我\n<img src=\"/img/gld_skm.png\" width=\"100%\">\n\n**（你赞助我不会得到任何东西）**","updated":"2024-03-01T11:13:18.389Z","path":"about/index.html","_id":"clt70ww8l0000tockdoa0dbjc","content":"<h3 id=\"关于\"><a href=\"#关于\" class=\"headerlink\" title=\"关于\"></a>关于</h3><p>一个喜欢无聊捣鼓电脑的家伙，喜欢写代码来实现自动化解决问题<br>公开的社交账号：</p>\n<ul>\n<li><a href=\"https://space.bilibili.com/496960407\">B站</a></li>\n<li>QQ：<code>1241593334</code></li>\n</ul>\n<h3 id=\"赞助我\"><a href=\"#赞助我\" class=\"headerlink\" title=\"赞助我\"></a>赞助我</h3><img src=\"/img/gld_skm.png\" width=\"100%\">\n\n<p><strong>（你赞助我不会得到任何东西）</strong></p>\n","excerpt":"","more":"<h3 id=\"关于\"><a href=\"#关于\" class=\"headerlink\" title=\"关于\"></a>关于</h3><p>一个喜欢无聊捣鼓电脑的家伙，喜欢写代码来实现自动化解决问题<br>公开的社交账号：</p>\n<ul>\n<li><a href=\"https://space.bilibili.com/496960407\">B站</a></li>\n<li>QQ：<code>1241593334</code></li>\n</ul>\n<h3 id=\"赞助我\"><a href=\"#赞助我\" class=\"headerlink\" title=\"赞助我\"></a>赞助我</h3><img src=\"/img/gld_skm.png\" width=\"100%\">\n\n<p><strong>（你赞助我不会得到任何东西）</strong></p>\n"},{"layout":"tags","title":"Tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\nlayout: \"tags\"\ntitle: Tags\ncomments: false\n---","date":"2024-02-29T10:54:21.846Z","updated":"2024-02-29T10:54:21.846Z","path":"tags/index.html","_id":"clt70ww8p0002tockbfw23eql","content":"","excerpt":"","more":""},{"layout":"collect","title":"我的收藏","date":"2024-02-29T10:53:11.000Z","comments":0,"_content":"就暂时示没东西~","source":"collect/index.md","raw":"---\nlayout: \"collect\"\ntitle: 我的收藏\ndate: 2024-02-29 18:53:11\ncomments: false\n---\n就暂时示没东西~","updated":"2024-02-29T10:54:06.102Z","path":"collect/index.html","_id":"clt73zi9y0000y4ckhu5p3mmv","content":"<p>就暂时示没东西~</p>\n","excerpt":"","more":"<p>就暂时示没东西~</p>\n"}],"Post":[{"title":"MC存档玩家uuid自动迁移脚本以及一个MC服务器状态查询工具","date":"2024-02-28T12:01:15.000Z","_content":"### 详细\n多人游戏中更换登录方式后会导致玩家UUID发生变化，从而导致玩家的物品，成就等数据丢失，通过将用来存储的UUID替换为新的UUID的方式可以实现物品成就的迁移，此脚本旨在简化操作\n\nUUID可以通过查看之前的日志获取，玩家进入服务器或世界的时候，日志会记录其当前UUID\n更多提示注释有写\n\n很简单的一个脚本，就是对原来uuid的文件进行了复制，将其放入想要替换数据的存档文件夹再运行即可，下为完整代码,可直接复制保存在bat文件使用\n\n![img](40fd3918e4985fcc126a54d3f75abc8f496960407.png)\n### 下载\n- [下载](UUIDMigrator.bat)","source":"_posts/UUIDMigrator.md","raw":"---\ntitle: MC存档玩家uuid自动迁移脚本以及一个MC服务器状态查询工具\ndate: 2024-02-28 20:01:15\ntags: \n- 教程\n- 工具\n---\n### 详细\n多人游戏中更换登录方式后会导致玩家UUID发生变化，从而导致玩家的物品，成就等数据丢失，通过将用来存储的UUID替换为新的UUID的方式可以实现物品成就的迁移，此脚本旨在简化操作\n\nUUID可以通过查看之前的日志获取，玩家进入服务器或世界的时候，日志会记录其当前UUID\n更多提示注释有写\n\n很简单的一个脚本，就是对原来uuid的文件进行了复制，将其放入想要替换数据的存档文件夹再运行即可，下为完整代码,可直接复制保存在bat文件使用\n\n![img](40fd3918e4985fcc126a54d3f75abc8f496960407.png)\n### 下载\n- [下载](UUIDMigrator.bat)","slug":"UUIDMigrator","published":1,"updated":"2024-02-29T09:25:36.961Z","comments":1,"layout":"post","photos":[],"_id":"clt70ww8n0001tocke81i8qa0","content":"<h3 id=\"详细\"><a href=\"#详细\" class=\"headerlink\" title=\"详细\"></a>详细</h3><p>多人游戏中更换登录方式后会导致玩家UUID发生变化，从而导致玩家的物品，成就等数据丢失，通过将用来存储的UUID替换为新的UUID的方式可以实现物品成就的迁移，此脚本旨在简化操作</p>\n<p>UUID可以通过查看之前的日志获取，玩家进入服务器或世界的时候，日志会记录其当前UUID<br>更多提示注释有写</p>\n<p>很简单的一个脚本，就是对原来uuid的文件进行了复制，将其放入想要替换数据的存档文件夹再运行即可，下为完整代码,可直接复制保存在bat文件使用</p>\n<p><img src=\"/2024/02/28/UUIDMigrator/40fd3918e4985fcc126a54d3f75abc8f496960407.png\" alt=\"img\"></p>\n<h3 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h3><ul>\n<li><a href=\"UUIDMigrator.bat\">下载</a></li>\n</ul>\n","excerpt":"","more":"<h3 id=\"详细\"><a href=\"#详细\" class=\"headerlink\" title=\"详细\"></a>详细</h3><p>多人游戏中更换登录方式后会导致玩家UUID发生变化，从而导致玩家的物品，成就等数据丢失，通过将用来存储的UUID替换为新的UUID的方式可以实现物品成就的迁移，此脚本旨在简化操作</p>\n<p>UUID可以通过查看之前的日志获取，玩家进入服务器或世界的时候，日志会记录其当前UUID<br>更多提示注释有写</p>\n<p>很简单的一个脚本，就是对原来uuid的文件进行了复制，将其放入想要替换数据的存档文件夹再运行即可，下为完整代码,可直接复制保存在bat文件使用</p>\n<p><img src=\"/2024/02/28/UUIDMigrator/40fd3918e4985fcc126a54d3f75abc8f496960407.png\" alt=\"img\"></p>\n<h3 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h3><ul>\n<li><a href=\"UUIDMigrator.bat\">下载</a></li>\n</ul>\n"},{"title":"hexo使用指令记录","date":"2022-03-02T09:13:27.000Z","comments":0,"_content":"这是本人使用日志，仅供本人参考使用 日期的假的\n\n使用cmd在根目录运行：`D:\\web\\pages`\n\n- 构建网页 构建到`public`\n```\nhexo g \n```\n\n- 新建md 到`source`\n```\nhexo new -p <文件名> \"<标题>\"\n```\n\n- 本地服务端映射 `7000`端口\n```\nhexo s\n```\n\n- 清理数据（使用后需要重新构建，需要提前备份git数据）\n```\nhexo clean\n```","source":"_posts/hexo.md","raw":"---\ntitle: hexo使用指令记录\ndate: 2022-02-30 17:13:27\ntags: 日志\ncomments: false\n---\n这是本人使用日志，仅供本人参考使用 日期的假的\n\n使用cmd在根目录运行：`D:\\web\\pages`\n\n- 构建网页 构建到`public`\n```\nhexo g \n```\n\n- 新建md 到`source`\n```\nhexo new -p <文件名> \"<标题>\"\n```\n\n- 本地服务端映射 `7000`端口\n```\nhexo s\n```\n\n- 清理数据（使用后需要重新构建，需要提前备份git数据）\n```\nhexo clean\n```","slug":"hexo","published":1,"updated":"2024-02-29T11:03:32.975Z","_id":"clt70ww8t0008tock7zrj11h1","layout":"post","photos":[],"content":"<p>这是本人使用日志，仅供本人参考使用 日期的假的</p>\n<p>使用cmd在根目录运行：<code>D:\\web\\pages</code></p>\n<ul>\n<li><p>构建网页 构建到<code>public</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g </span><br></pre></td></tr></table></figure>\n</li>\n<li><p>新建md 到<code>source</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new -p &lt;文件名&gt; &quot;&lt;标题&gt;&quot;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>本地服务端映射 <code>7000</code>端口</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>清理数据（使用后需要重新构建，需要提前备份git数据）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br></pre></td></tr></table></figure></li>\n</ul>\n","excerpt":"","more":"<p>这是本人使用日志，仅供本人参考使用 日期的假的</p>\n<p>使用cmd在根目录运行：<code>D:\\web\\pages</code></p>\n<ul>\n<li><p>构建网页 构建到<code>public</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g </span><br></pre></td></tr></table></figure>\n</li>\n<li><p>新建md 到<code>source</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new -p &lt;文件名&gt; &quot;&lt;标题&gt;&quot;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>本地服务端映射 <code>7000</code>端口</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>清理数据（使用后需要重新构建，需要提前备份git数据）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br></pre></td></tr></table></figure></li>\n</ul>\n"},{"title":"MC服务器信息查询-PHP","date":"2024-02-29T09:12:41.000Z","_content":"体验地址：`https://47.115.207.37/mc/mcping/`","source":"_posts/mcping.md","raw":"---\ntitle: MC服务器信息查询-PHP\ndate: 2024-02-29 17:12:41\ntags: 教程\n---\n体验地址：`https://47.115.207.37/mc/mcping/`","slug":"mcping","published":1,"updated":"2024-02-29T09:20:56.671Z","comments":1,"layout":"post","photos":[],"_id":"clt70ww8t000atocke8w46hgc","content":"<p>体验地址：<code>https://47.115.207.37/mc/mcping/</code></p>\n","excerpt":"","more":"<p>体验地址：<code>https://47.115.207.37/mc/mcping/</code></p>\n"},{"title":"mcwiki从fandom自动跳转到新wiki的Header Editor规则","date":"2024-02-28T11:53:33.000Z","_content":"mcwiki进行了迁移，但是部分搜索引擎搜索出来依然是fandom的地址，使用如下规则可以访问fandom的地址后自动跳转到行站的地址\n\n- 下载Header Editor扩展之后新建规则，安装如下填写\n![img](e584cbe3b84c2c5613e45a3f049b887f496960407.png)\n```\n^http(s?)://(?:minecraft\\.|)fandom\\.com(.*)/wiki/(.*)\n```\n```\nhttps://zh.minecraft.wiki/w/$3\n```\n\n- 效果演示：\n![gif](24da33d6b7033c8fd97619ebd0047548496960407.gif)\n\n","source":"_posts/mcwiki.md","raw":"---\ntitle: mcwiki从fandom自动跳转到新wiki的Header Editor规则\ndate: 2024-02-28 19:53:33\ntags: 教程\n---\nmcwiki进行了迁移，但是部分搜索引擎搜索出来依然是fandom的地址，使用如下规则可以访问fandom的地址后自动跳转到行站的地址\n\n- 下载Header Editor扩展之后新建规则，安装如下填写\n![img](e584cbe3b84c2c5613e45a3f049b887f496960407.png)\n```\n^http(s?)://(?:minecraft\\.|)fandom\\.com(.*)/wiki/(.*)\n```\n```\nhttps://zh.minecraft.wiki/w/$3\n```\n\n- 效果演示：\n![gif](24da33d6b7033c8fd97619ebd0047548496960407.gif)\n\n","slug":"mcwiki","published":1,"updated":"2024-02-29T09:21:06.532Z","comments":1,"layout":"post","photos":[],"_id":"clt70ww8u000dtockc9riczda","content":"<p>mcwiki进行了迁移，但是部分搜索引擎搜索出来依然是fandom的地址，使用如下规则可以访问fandom的地址后自动跳转到行站的地址</p>\n<ul>\n<li><p>下载Header Editor扩展之后新建规则，安装如下填写<br><img src=\"/2024/02/28/mcwiki/e584cbe3b84c2c5613e45a3f049b887f496960407.png\" alt=\"img\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">^http(s?)://(?:minecraft\\.|)fandom\\.com(.*)/wiki/(.*)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://zh.minecraft.wiki/w/$3</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>效果演示：<br><img src=\"/2024/02/28/mcwiki/24da33d6b7033c8fd97619ebd0047548496960407.gif\" alt=\"gif\"></p>\n</li>\n</ul>\n","excerpt":"","more":"<p>mcwiki进行了迁移，但是部分搜索引擎搜索出来依然是fandom的地址，使用如下规则可以访问fandom的地址后自动跳转到行站的地址</p>\n<ul>\n<li><p>下载Header Editor扩展之后新建规则，安装如下填写<br><img src=\"/2024/02/28/mcwiki/e584cbe3b84c2c5613e45a3f049b887f496960407.png\" alt=\"img\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">^http(s?)://(?:minecraft\\.|)fandom\\.com(.*)/wiki/(.*)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://zh.minecraft.wiki/w/$3</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>效果演示：<br><img src=\"/2024/02/28/mcwiki/24da33d6b7033c8fd97619ebd0047548496960407.gif\" alt=\"gif\"></p>\n</li>\n</ul>\n"},{"title":"测试文档","date":"2024-02-28T07:00:50.000Z","_content":"欢迎来到这里，这里是测试的\n欢迎来到这里，这里是测试的欢迎来到这里，这里是测试的\n~~欢迎来到这里，这里是测试的欢迎来到这里，这里是测试的~~\n**阿达**\n\n","source":"_posts/测试文档.md","raw":"---\ntitle: 测试文档\ndate: 2024-02-28 15:00:50\ntags:\n---\n欢迎来到这里，这里是测试的\n欢迎来到这里，这里是测试的欢迎来到这里，这里是测试的\n~~欢迎来到这里，这里是测试的欢迎来到这里，这里是测试的~~\n**阿达**\n\n","slug":"测试文档","published":1,"updated":"2024-02-28T07:02:14.713Z","comments":1,"layout":"post","photos":[],"_id":"clt70ww8v000ftockgsa172w9","content":"<p>欢迎来到这里，这里是测试的<br>欢迎来到这里，这里是测试的欢迎来到这里，这里是测试的<br><del>欢迎来到这里，这里是测试的欢迎来到这里，这里是测试的</del><br><strong>阿达</strong></p>\n","excerpt":"","more":"<p>欢迎来到这里，这里是测试的<br>欢迎来到这里，这里是测试的欢迎来到这里，这里是测试的<br><del>欢迎来到这里，这里是测试的欢迎来到这里，这里是测试的</del><br><strong>阿达</strong></p>\n"},{"title":"原神4.5-铓锋锦间裁","date":"2024-03-01T12:33:59.000Z","_content":"## 4.5前瞻·铓锋锦间裁\n\n主持人千织，琳妮特，绮良良，迪奥娜的cv\n### 兑换码\n* KW2BZ9WHTU8A\n* RXJAG9FGBD9E\n* 3E3SY8FGACQJ\n### 内容\n1. 新五星岩单手剑千织，定位为协同副c，具有被岩造物强化的能力。\n2. 上半千织一斗，下半万叶那维莱特\n对应武器廉切赤角，苍古万世\n3. 特殊混池，本版本为可莉，阿贝多，优菈，琴，迪卢克，莫娜。\n对应武器四风，松籁，狼末，天空全家桶，猎径，风鹰，信标\n（注：进入此池的角色至少要复刻三次，可定轨；角色国家与武器对应，且包括猎径和信标）\n4. 风花节III\n5. 送一把四星长枪沙中伟贤的对答\n6. 琳妮特邀约\n7. 千织传说任务·丝切铗之章I\n8. 撸猫活动，茸茸城堡大喵险\n9. 更新优化 提升指南\n10.  射击活动，圆圆巧巧…\n11.  弘辩的溢神效应，拍照打怪活动\n12.  地脉移涌\n13.  七圣召唤新卡，那维莱特，夏洛蒂等\n14.  沉玉谷OST","source":"_posts/ys3-5.md","raw":"---\ntitle: 原神4.5-铓锋锦间裁\ndate: 2024-03-01 20:33:59\ntags:\n- 前瞻\n- 原神\n---\n## 4.5前瞻·铓锋锦间裁\n\n主持人千织，琳妮特，绮良良，迪奥娜的cv\n### 兑换码\n* KW2BZ9WHTU8A\n* RXJAG9FGBD9E\n* 3E3SY8FGACQJ\n### 内容\n1. 新五星岩单手剑千织，定位为协同副c，具有被岩造物强化的能力。\n2. 上半千织一斗，下半万叶那维莱特\n对应武器廉切赤角，苍古万世\n3. 特殊混池，本版本为可莉，阿贝多，优菈，琴，迪卢克，莫娜。\n对应武器四风，松籁，狼末，天空全家桶，猎径，风鹰，信标\n（注：进入此池的角色至少要复刻三次，可定轨；角色国家与武器对应，且包括猎径和信标）\n4. 风花节III\n5. 送一把四星长枪沙中伟贤的对答\n6. 琳妮特邀约\n7. 千织传说任务·丝切铗之章I\n8. 撸猫活动，茸茸城堡大喵险\n9. 更新优化 提升指南\n10.  射击活动，圆圆巧巧…\n11.  弘辩的溢神效应，拍照打怪活动\n12.  地脉移涌\n13.  七圣召唤新卡，那维莱特，夏洛蒂等\n14.  沉玉谷OST","slug":"ys3-5","published":1,"updated":"2024-03-01T13:52:19.619Z","_id":"clt8n39wh0000s0ckf9xr5c0b","comments":1,"layout":"post","photos":[],"content":"<h2 id=\"4-5前瞻·铓锋锦间裁\"><a href=\"#4-5前瞻·铓锋锦间裁\" class=\"headerlink\" title=\"4.5前瞻·铓锋锦间裁\"></a>4.5前瞻·铓锋锦间裁</h2><p>主持人千织，琳妮特，绮良良，迪奥娜的cv</p>\n<h3 id=\"兑换码\"><a href=\"#兑换码\" class=\"headerlink\" title=\"兑换码\"></a>兑换码</h3><ul>\n<li>KW2BZ9WHTU8A</li>\n<li>RXJAG9FGBD9E</li>\n<li>3E3SY8FGACQJ</li>\n</ul>\n<h3 id=\"内容\"><a href=\"#内容\" class=\"headerlink\" title=\"内容\"></a>内容</h3><ol>\n<li>新五星岩单手剑千织，定位为协同副c，具有被岩造物强化的能力。</li>\n<li>上半千织一斗，下半万叶那维莱特<br>对应武器廉切赤角，苍古万世</li>\n<li>特殊混池，本版本为可莉，阿贝多，优菈，琴，迪卢克，莫娜。<br>对应武器四风，松籁，狼末，天空全家桶，猎径，风鹰，信标<br>（注：进入此池的角色至少要复刻三次，可定轨；角色国家与武器对应，且包括猎径和信标）</li>\n<li>风花节III</li>\n<li>送一把四星长枪沙中伟贤的对答</li>\n<li>琳妮特邀约</li>\n<li>千织传说任务·丝切铗之章I</li>\n<li>撸猫活动，茸茸城堡大喵险</li>\n<li>更新优化 提升指南</li>\n<li>射击活动，圆圆巧巧…</li>\n<li>弘辩的溢神效应，拍照打怪活动</li>\n<li>地脉移涌</li>\n<li>七圣召唤新卡，那维莱特，夏洛蒂等</li>\n<li>沉玉谷OST</li>\n</ol>\n","excerpt":"","more":"<h2 id=\"4-5前瞻·铓锋锦间裁\"><a href=\"#4-5前瞻·铓锋锦间裁\" class=\"headerlink\" title=\"4.5前瞻·铓锋锦间裁\"></a>4.5前瞻·铓锋锦间裁</h2><p>主持人千织，琳妮特，绮良良，迪奥娜的cv</p>\n<h3 id=\"兑换码\"><a href=\"#兑换码\" class=\"headerlink\" title=\"兑换码\"></a>兑换码</h3><ul>\n<li>KW2BZ9WHTU8A</li>\n<li>RXJAG9FGBD9E</li>\n<li>3E3SY8FGACQJ</li>\n</ul>\n<h3 id=\"内容\"><a href=\"#内容\" class=\"headerlink\" title=\"内容\"></a>内容</h3><ol>\n<li>新五星岩单手剑千织，定位为协同副c，具有被岩造物强化的能力。</li>\n<li>上半千织一斗，下半万叶那维莱特<br>对应武器廉切赤角，苍古万世</li>\n<li>特殊混池，本版本为可莉，阿贝多，优菈，琴，迪卢克，莫娜。<br>对应武器四风，松籁，狼末，天空全家桶，猎径，风鹰，信标<br>（注：进入此池的角色至少要复刻三次，可定轨；角色国家与武器对应，且包括猎径和信标）</li>\n<li>风花节III</li>\n<li>送一把四星长枪沙中伟贤的对答</li>\n<li>琳妮特邀约</li>\n<li>千织传说任务·丝切铗之章I</li>\n<li>撸猫活动，茸茸城堡大喵险</li>\n<li>更新优化 提升指南</li>\n<li>射击活动，圆圆巧巧…</li>\n<li>弘辩的溢神效应，拍照打怪活动</li>\n<li>地脉移涌</li>\n<li>七圣召唤新卡，那维莱特，夏洛蒂等</li>\n<li>沉玉谷OST</li>\n</ol>\n"},{"title":"js笔记","date":"2024-03-01T15:15:21.000Z","_content":"- 网页在全屏之间切换\n```JavaScript\nfunction toggleFullScreen() {\n    if (document.fullscreenElement) {\n        document.exitFullscreen();\n    } else {\n        document.documentElement.requestFullscreen();\n    }\n}\n```\n\n\n\n### js事件\n\n`addEventListener('事件',函数)`为添加页面事件监听\n\n```JavaScript\nwindow.onload = function(){\n    //页面加载完毕后执行\n}\n```\n\n```JavaScript\nwindow.addEventListener('resize', function() {\n    console.log('窗口大小已改变');\n});\n\nconst width = window.innerWidth;\nconst height = window.innerHeight;\nconsole.log(`页面宽度: ${width}px`);\nconsole.log(`页面高度: ${height}px`);\n\nconst totalWidth = document.documentElement.clientWidth;\nconst totalHeight = document.documentElement.clientHeight;\nconsole.log(`文档总宽度: ${totalWidth}px`);\nconsole.log(`文档总高度: ${totalHeight}px`);\n```\n\n\n- click：当用户点击某个元素时触发。\n```javascript\nelement.addEventListener('click', function() {\n  // 事件处理代码\n});\n```\n- dblclick：当用户双击某个元素时触发。\n```javascript\nelement.addEventListener('dblclick', function() {\n  // 事件处理代码\n});\n```\n- mouseover：当鼠标指针移动到某个元素上方时触发。\n```javascript\nelement.addEventListener('mouseover', function() {\n  // 事件处理代码\n});\n```\n- mouseout：当鼠标指针离开某个元素时触发。\n```javascript\nelement.addEventListener('mouseout', function() {\n  // 事件处理代码\n});\n```\n- mousemove：当鼠标指针在元素上移动时触发。\n```javascript\nelement.addEventListener('mousemove', function(event) {\n  // event.clientX 和 event.clientY 可以获取鼠标的位置\n});\n```\n- mousedown：当鼠标按钮被按下时触发。\n```javascript\nelement.addEventListener('mousedown', function(event) {\n  // event.button 可以获取被按下的鼠标按钮\n});\n```\n- mouseup：当鼠标按钮被释放时触发。\n```javascript\nelement.addEventListener('mouseup', function(event) {\n  // event.button 可以获取被释放的鼠标按钮\n});\n```\n- keypress：当键盘上的键被按下并释放时触发。\n```javascript\nelement.addEventListener('keypress', function(event) {\n  // event.key 可以获取被按下的键\n});\n```\n- keydown：当键盘上的键被按下时触发。\n```javascript\nelement.addEventListener('keydown', function(event) {\n  // event.key 可以获取被按下的键\n});\n```\n- keyup：当键盘上的键被释放时触发。\n```javascript\nelement.addEventListener('keyup', function(event) {\n  // event.key 可以获取被释放的键\n});\n```\n- change：当元素的值发生变化时触发，如 `<input>`, `<textarea>`, 和 `<select>` 元素。\n```javascript\nelement.addEventListener('change', function() {\n  // 事件处理代码\n});\n```\n- focus：当元素获得焦点时触发，如用户点击输入框或使用Tab键导航到元素。\n```javascript\nelement.addEventListener('focus', function() {\n  // 事件处理代码\n});\n```\n- blur：当元素失去焦点时触发。\n```javascript\nelement.addEventListener('blur', function() {\n  // 事件处理代码\n});\n```\n\n- submit：当表单提交时触发。\n```javascript\nformElement.addEventListener('submit', function(event) {\n  event.preventDefault(); // 阻止表单的默认提交行为\n  // 事件处理代码\n});\n```\n","source":"_posts/jss.md","raw":"---\ntitle: js笔记\ndate: 2024-03-01 23:15:21\ntags:\n- 日志\n- 学习\n---\n- 网页在全屏之间切换\n```JavaScript\nfunction toggleFullScreen() {\n    if (document.fullscreenElement) {\n        document.exitFullscreen();\n    } else {\n        document.documentElement.requestFullscreen();\n    }\n}\n```\n\n\n\n### js事件\n\n`addEventListener('事件',函数)`为添加页面事件监听\n\n```JavaScript\nwindow.onload = function(){\n    //页面加载完毕后执行\n}\n```\n\n```JavaScript\nwindow.addEventListener('resize', function() {\n    console.log('窗口大小已改变');\n});\n\nconst width = window.innerWidth;\nconst height = window.innerHeight;\nconsole.log(`页面宽度: ${width}px`);\nconsole.log(`页面高度: ${height}px`);\n\nconst totalWidth = document.documentElement.clientWidth;\nconst totalHeight = document.documentElement.clientHeight;\nconsole.log(`文档总宽度: ${totalWidth}px`);\nconsole.log(`文档总高度: ${totalHeight}px`);\n```\n\n\n- click：当用户点击某个元素时触发。\n```javascript\nelement.addEventListener('click', function() {\n  // 事件处理代码\n});\n```\n- dblclick：当用户双击某个元素时触发。\n```javascript\nelement.addEventListener('dblclick', function() {\n  // 事件处理代码\n});\n```\n- mouseover：当鼠标指针移动到某个元素上方时触发。\n```javascript\nelement.addEventListener('mouseover', function() {\n  // 事件处理代码\n});\n```\n- mouseout：当鼠标指针离开某个元素时触发。\n```javascript\nelement.addEventListener('mouseout', function() {\n  // 事件处理代码\n});\n```\n- mousemove：当鼠标指针在元素上移动时触发。\n```javascript\nelement.addEventListener('mousemove', function(event) {\n  // event.clientX 和 event.clientY 可以获取鼠标的位置\n});\n```\n- mousedown：当鼠标按钮被按下时触发。\n```javascript\nelement.addEventListener('mousedown', function(event) {\n  // event.button 可以获取被按下的鼠标按钮\n});\n```\n- mouseup：当鼠标按钮被释放时触发。\n```javascript\nelement.addEventListener('mouseup', function(event) {\n  // event.button 可以获取被释放的鼠标按钮\n});\n```\n- keypress：当键盘上的键被按下并释放时触发。\n```javascript\nelement.addEventListener('keypress', function(event) {\n  // event.key 可以获取被按下的键\n});\n```\n- keydown：当键盘上的键被按下时触发。\n```javascript\nelement.addEventListener('keydown', function(event) {\n  // event.key 可以获取被按下的键\n});\n```\n- keyup：当键盘上的键被释放时触发。\n```javascript\nelement.addEventListener('keyup', function(event) {\n  // event.key 可以获取被释放的键\n});\n```\n- change：当元素的值发生变化时触发，如 `<input>`, `<textarea>`, 和 `<select>` 元素。\n```javascript\nelement.addEventListener('change', function() {\n  // 事件处理代码\n});\n```\n- focus：当元素获得焦点时触发，如用户点击输入框或使用Tab键导航到元素。\n```javascript\nelement.addEventListener('focus', function() {\n  // 事件处理代码\n});\n```\n- blur：当元素失去焦点时触发。\n```javascript\nelement.addEventListener('blur', function() {\n  // 事件处理代码\n});\n```\n\n- submit：当表单提交时触发。\n```javascript\nformElement.addEventListener('submit', function(event) {\n  event.preventDefault(); // 阻止表单的默认提交行为\n  // 事件处理代码\n});\n```\n","slug":"jss","published":1,"updated":"2024-03-01T15:37:31.201Z","comments":1,"layout":"post","photos":[],"_id":"clt8tj55d0000asckbd2m046u","content":"<ul>\n<li>网页在全屏之间切换<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">toggleFullScreen</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable language_\">document</span>.<span class=\"property\">fullscreenElement</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">document</span>.<span class=\"title function_\">exitFullscreen</span>();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"title function_\">requestFullscreen</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"js事件\"><a href=\"#js事件\" class=\"headerlink\" title=\"js事件\"></a>js事件</h3><p><code>addEventListener(&#39;事件&#39;,函数)</code>为添加页面事件监听</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"property\">onload</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"comment\">//页面加载完毕后执行</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;resize&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;窗口大小已改变&#x27;</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> width = <span class=\"variable language_\">window</span>.<span class=\"property\">innerWidth</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> height = <span class=\"variable language_\">window</span>.<span class=\"property\">innerHeight</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`页面宽度: <span class=\"subst\">$&#123;width&#125;</span>px`</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`页面高度: <span class=\"subst\">$&#123;height&#125;</span>px`</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> totalWidth = <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">clientWidth</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> totalHeight = <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">clientHeight</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`文档总宽度: <span class=\"subst\">$&#123;totalWidth&#125;</span>px`</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`文档总高度: <span class=\"subst\">$&#123;totalHeight&#125;</span>px`</span>);</span><br></pre></td></tr></table></figure>\n\n\n<ul>\n<li><p>click：当用户点击某个元素时触发。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">element.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 事件处理代码</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></li>\n<li><p>dblclick：当用户双击某个元素时触发。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">element.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;dblclick&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 事件处理代码</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></li>\n<li><p>mouseover：当鼠标指针移动到某个元素上方时触发。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">element.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;mouseover&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 事件处理代码</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></li>\n<li><p>mouseout：当鼠标指针离开某个元素时触发。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">element.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;mouseout&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 事件处理代码</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></li>\n<li><p>mousemove：当鼠标指针在元素上移动时触发。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">element.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;mousemove&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">event</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// event.clientX 和 event.clientY 可以获取鼠标的位置</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></li>\n<li><p>mousedown：当鼠标按钮被按下时触发。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">element.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;mousedown&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">event</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// event.button 可以获取被按下的鼠标按钮</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></li>\n<li><p>mouseup：当鼠标按钮被释放时触发。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">element.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;mouseup&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">event</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// event.button 可以获取被释放的鼠标按钮</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></li>\n<li><p>keypress：当键盘上的键被按下并释放时触发。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">element.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;keypress&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">event</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// event.key 可以获取被按下的键</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></li>\n<li><p>keydown：当键盘上的键被按下时触发。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">element.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;keydown&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">event</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// event.key 可以获取被按下的键</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></li>\n<li><p>keyup：当键盘上的键被释放时触发。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">element.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;keyup&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">event</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// event.key 可以获取被释放的键</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></li>\n<li><p>change：当元素的值发生变化时触发，如 <code>&lt;input&gt;</code>, <code>&lt;textarea&gt;</code>, 和 <code>&lt;select&gt;</code> 元素。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">element.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;change&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 事件处理代码</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></li>\n<li><p>focus：当元素获得焦点时触发，如用户点击输入框或使用Tab键导航到元素。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">element.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;focus&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 事件处理代码</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></li>\n<li><p>blur：当元素失去焦点时触发。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">element.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;blur&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 事件处理代码</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>submit：当表单提交时触发。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">formElement.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;submit&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">event</span>) &#123;</span><br><span class=\"line\">  event.<span class=\"title function_\">preventDefault</span>(); <span class=\"comment\">// 阻止表单的默认提交行为</span></span><br><span class=\"line\">  <span class=\"comment\">// 事件处理代码</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></li>\n</ul>\n","excerpt":"","more":"<ul>\n<li>网页在全屏之间切换<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">toggleFullScreen</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable language_\">document</span>.<span class=\"property\">fullscreenElement</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">document</span>.<span class=\"title function_\">exitFullscreen</span>();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"title function_\">requestFullscreen</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"js事件\"><a href=\"#js事件\" class=\"headerlink\" title=\"js事件\"></a>js事件</h3><p><code>addEventListener(&#39;事件&#39;,函数)</code>为添加页面事件监听</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"property\">onload</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"comment\">//页面加载完毕后执行</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;resize&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;窗口大小已改变&#x27;</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> width = <span class=\"variable language_\">window</span>.<span class=\"property\">innerWidth</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> height = <span class=\"variable language_\">window</span>.<span class=\"property\">innerHeight</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`页面宽度: <span class=\"subst\">$&#123;width&#125;</span>px`</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`页面高度: <span class=\"subst\">$&#123;height&#125;</span>px`</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> totalWidth = <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">clientWidth</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> totalHeight = <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">clientHeight</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`文档总宽度: <span class=\"subst\">$&#123;totalWidth&#125;</span>px`</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`文档总高度: <span class=\"subst\">$&#123;totalHeight&#125;</span>px`</span>);</span><br></pre></td></tr></table></figure>\n\n\n<ul>\n<li><p>click：当用户点击某个元素时触发。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">element.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 事件处理代码</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></li>\n<li><p>dblclick：当用户双击某个元素时触发。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">element.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;dblclick&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 事件处理代码</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></li>\n<li><p>mouseover：当鼠标指针移动到某个元素上方时触发。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">element.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;mouseover&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 事件处理代码</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></li>\n<li><p>mouseout：当鼠标指针离开某个元素时触发。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">element.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;mouseout&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 事件处理代码</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></li>\n<li><p>mousemove：当鼠标指针在元素上移动时触发。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">element.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;mousemove&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">event</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// event.clientX 和 event.clientY 可以获取鼠标的位置</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></li>\n<li><p>mousedown：当鼠标按钮被按下时触发。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">element.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;mousedown&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">event</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// event.button 可以获取被按下的鼠标按钮</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></li>\n<li><p>mouseup：当鼠标按钮被释放时触发。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">element.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;mouseup&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">event</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// event.button 可以获取被释放的鼠标按钮</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></li>\n<li><p>keypress：当键盘上的键被按下并释放时触发。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">element.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;keypress&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">event</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// event.key 可以获取被按下的键</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></li>\n<li><p>keydown：当键盘上的键被按下时触发。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">element.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;keydown&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">event</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// event.key 可以获取被按下的键</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></li>\n<li><p>keyup：当键盘上的键被释放时触发。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">element.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;keyup&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">event</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// event.key 可以获取被释放的键</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></li>\n<li><p>change：当元素的值发生变化时触发，如 <code>&lt;input&gt;</code>, <code>&lt;textarea&gt;</code>, 和 <code>&lt;select&gt;</code> 元素。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">element.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;change&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 事件处理代码</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></li>\n<li><p>focus：当元素获得焦点时触发，如用户点击输入框或使用Tab键导航到元素。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">element.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;focus&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 事件处理代码</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></li>\n<li><p>blur：当元素失去焦点时触发。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">element.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;blur&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 事件处理代码</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>submit：当表单提交时触发。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">formElement.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;submit&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">event</span>) &#123;</span><br><span class=\"line\">  event.<span class=\"title function_\">preventDefault</span>(); <span class=\"comment\">// 阻止表单的默认提交行为</span></span><br><span class=\"line\">  <span class=\"comment\">// 事件处理代码</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></li>\n</ul>\n"},{"title":"C++ stl学习笔记","date":"2024-03-11T12:03:35.000Z","_content":"万用头文件：`#include<bits/stdc++.h>` ~~（不知道能不能用）~~\n\n公用的：\n- 查询长度（大小） `.size()`\n- 清空 `.clear()`\n- 判空 `.empty()`\n### vector 普通数组的替代\n头文件：`#include<vector>`\n\n构造：`vector<类型> arr(长度,[初值])`\n\n示例：`vector<int> arr(10,1)`\n\n插入：`arr.push_back(元素)` 在 vector 尾接一个元素，数组长度 +1\n\n删除：`arr.pop_back()` 删除 vector 尾部的一个元素，数组长度 −1\n\n改变长度：`arr.resize(长度),[默认值]`\n\n修改：`arr[索引]=元素`\n\n### stack 栈\n头文件：`#include<stack>`\n\n构造：`stack<类型> 栈名`\n\n示例：`stack<int> s`\n\n进栈：`栈名.push(元素)`\n \n出栈：`栈名.pop()` （不可直接访问内部）\n\n获取栈顶:`栈名.top()`\n\n### queue 队列\n头文件：`#include<queue>`\n\n构造：`queue<类型> 队列名`\n\n示例：`queue<int> q`\n\n进队：`队列名.push(元素)`\n\n出队：`队列名.pop()` （不可直接访问内部）\n\n取队头:`队列名.front()`\n\n取队尾：`队列名.back()`\n\n### set 集合 (内部元素不可重复,不可用下标访问)\n头文件：`#include<set>`\n\n构造：`set<类型, 比较器> 集合名`\n\n示例：\n```c++\nset<int> st1;               // 储存int的集合（从小到大）\nset<int, greater<int>> st2; // 储存int的集合（从大到小）\n```\n\n插入：`集合名.insert(元素)`\n\n删除：`集合名.erase(元素)`\n\n查找：`集合名.find(元素)` 返回指向元素位置的迭代器，如果元素不存在，返回指向集合尾的迭代器\n\n判断存在：`集合名.count(元素)` 返回 1 表示存在，返回 0 表示不存在\n\n遍历:\n```c++\nfor (set<int>::iterator it = st.begin(); it != st.end(); ++it)\n    cout << *it << endl;\n```\n\n### map 映射\n头文件：`#include<map>`\n\n构造：`map<键类型, 值类型,比较器> 映射名` (比较器可省，默认从小到大`greater<int>`为从大到小)\n\n示例：`map<int, string> mp`\n\n增删查改：`mp[1] = 2;`(使用中括号)\n\n插入：`映射名.insert(pair<类型, 类型>(键, 值))`\n\n删除：`映射名.erase(键)`\n\n查找：`映射名.find(键)` 返回指向键位置的迭代器，如果键不存在，返回指向映射尾的迭代器\n\n判断存在：`映射名.count(键)` 返回 1 表示存在，返回 0 表示不存在\n\n遍历:\n```c++\nfor (map<int, string>::iterator it = mp.begin(); it != mp.end(); ++it)\n    cout << it->first << \" \" << it->second << endl;\n```\n### string 字符串\n头文件：`#include<string>`\n\n构造：`string 字符串名`\n\n示例：`string s1 = \"hello\";`\n\n`int / long long / float / double / long double`转`string`:to_string(变量)\n\n数值与字符串互转:\n|源\t|目的|函数|\n|---|---|---|\n|int/long long/float/double/long double|string|to_string()|\n|string\t|int\t|stoi()|\n|string\t|long long\t|stoll()|\n|string\t|float\t|stof()|\n|string\t|double\t|stod()|\n|string\t|long double\t|stold()|\n\n### 常用函数\n\n`swap(a, b)` 交换 a 和 b 的值\n\n`max(a, b)` 返回 a 和 b 中的最大值\n\n`min(a, b)` 返回 a 和 b 中的最小值\n\n`abs(a)` 返回 a 的绝对值\n\n`pow(a, b)` 返回 a 的 b 次方\n\n`sqrt(a)` 返回 a 的平方根\n\n`ceil(a)` 返回大于或等于 a 的最小整数(向上取整)\n\n`floor(a)` 返回小于或等于 a 的最大整数（向下取整）\n\n`sort()` 排序\n\n`gcd(a, b)` 最大公约数\n\n`lcm(a, b)` 最小公倍数\n\n### 常见头文件\n`#include <iostream>`  `using namespace std;`\n`#include<algorithm>` - 排序sort max min...的头文件\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n    return 0;\n}\n```\npair：`pair<类型1, 类型2> 变量名(元素1, 元素2)`(可以用来储存两个元素，~~把map塞进去~~ ) pair头文件为`#include<utility>`\n\n塞入vector中：`vector< pair<string,double> > v(maps.begin(),maps.end());`(然后可以直接用迭代器了)\n```\n//实现对map的排序\nbool cmp(pair<string,double> a,pair<string,double> b){\n\treturn a.second>b.second; //>降序 <升序  自定义排序规则\n}\nvector< pair<string,double> > v(map.begin(),map.end());\nsort(v.begin(),v.end(),cmp); \n```\n\n\n\n\n\n","source":"_posts/stl.md","raw":"---\ntitle: C++ stl学习笔记\ndate: 2024-03-11 20:03:35\ntags: 日志\n---\n万用头文件：`#include<bits/stdc++.h>` ~~（不知道能不能用）~~\n\n公用的：\n- 查询长度（大小） `.size()`\n- 清空 `.clear()`\n- 判空 `.empty()`\n### vector 普通数组的替代\n头文件：`#include<vector>`\n\n构造：`vector<类型> arr(长度,[初值])`\n\n示例：`vector<int> arr(10,1)`\n\n插入：`arr.push_back(元素)` 在 vector 尾接一个元素，数组长度 +1\n\n删除：`arr.pop_back()` 删除 vector 尾部的一个元素，数组长度 −1\n\n改变长度：`arr.resize(长度),[默认值]`\n\n修改：`arr[索引]=元素`\n\n### stack 栈\n头文件：`#include<stack>`\n\n构造：`stack<类型> 栈名`\n\n示例：`stack<int> s`\n\n进栈：`栈名.push(元素)`\n \n出栈：`栈名.pop()` （不可直接访问内部）\n\n获取栈顶:`栈名.top()`\n\n### queue 队列\n头文件：`#include<queue>`\n\n构造：`queue<类型> 队列名`\n\n示例：`queue<int> q`\n\n进队：`队列名.push(元素)`\n\n出队：`队列名.pop()` （不可直接访问内部）\n\n取队头:`队列名.front()`\n\n取队尾：`队列名.back()`\n\n### set 集合 (内部元素不可重复,不可用下标访问)\n头文件：`#include<set>`\n\n构造：`set<类型, 比较器> 集合名`\n\n示例：\n```c++\nset<int> st1;               // 储存int的集合（从小到大）\nset<int, greater<int>> st2; // 储存int的集合（从大到小）\n```\n\n插入：`集合名.insert(元素)`\n\n删除：`集合名.erase(元素)`\n\n查找：`集合名.find(元素)` 返回指向元素位置的迭代器，如果元素不存在，返回指向集合尾的迭代器\n\n判断存在：`集合名.count(元素)` 返回 1 表示存在，返回 0 表示不存在\n\n遍历:\n```c++\nfor (set<int>::iterator it = st.begin(); it != st.end(); ++it)\n    cout << *it << endl;\n```\n\n### map 映射\n头文件：`#include<map>`\n\n构造：`map<键类型, 值类型,比较器> 映射名` (比较器可省，默认从小到大`greater<int>`为从大到小)\n\n示例：`map<int, string> mp`\n\n增删查改：`mp[1] = 2;`(使用中括号)\n\n插入：`映射名.insert(pair<类型, 类型>(键, 值))`\n\n删除：`映射名.erase(键)`\n\n查找：`映射名.find(键)` 返回指向键位置的迭代器，如果键不存在，返回指向映射尾的迭代器\n\n判断存在：`映射名.count(键)` 返回 1 表示存在，返回 0 表示不存在\n\n遍历:\n```c++\nfor (map<int, string>::iterator it = mp.begin(); it != mp.end(); ++it)\n    cout << it->first << \" \" << it->second << endl;\n```\n### string 字符串\n头文件：`#include<string>`\n\n构造：`string 字符串名`\n\n示例：`string s1 = \"hello\";`\n\n`int / long long / float / double / long double`转`string`:to_string(变量)\n\n数值与字符串互转:\n|源\t|目的|函数|\n|---|---|---|\n|int/long long/float/double/long double|string|to_string()|\n|string\t|int\t|stoi()|\n|string\t|long long\t|stoll()|\n|string\t|float\t|stof()|\n|string\t|double\t|stod()|\n|string\t|long double\t|stold()|\n\n### 常用函数\n\n`swap(a, b)` 交换 a 和 b 的值\n\n`max(a, b)` 返回 a 和 b 中的最大值\n\n`min(a, b)` 返回 a 和 b 中的最小值\n\n`abs(a)` 返回 a 的绝对值\n\n`pow(a, b)` 返回 a 的 b 次方\n\n`sqrt(a)` 返回 a 的平方根\n\n`ceil(a)` 返回大于或等于 a 的最小整数(向上取整)\n\n`floor(a)` 返回小于或等于 a 的最大整数（向下取整）\n\n`sort()` 排序\n\n`gcd(a, b)` 最大公约数\n\n`lcm(a, b)` 最小公倍数\n\n### 常见头文件\n`#include <iostream>`  `using namespace std;`\n`#include<algorithm>` - 排序sort max min...的头文件\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n    return 0;\n}\n```\npair：`pair<类型1, 类型2> 变量名(元素1, 元素2)`(可以用来储存两个元素，~~把map塞进去~~ ) pair头文件为`#include<utility>`\n\n塞入vector中：`vector< pair<string,double> > v(maps.begin(),maps.end());`(然后可以直接用迭代器了)\n```\n//实现对map的排序\nbool cmp(pair<string,double> a,pair<string,double> b){\n\treturn a.second>b.second; //>降序 <升序  自定义排序规则\n}\nvector< pair<string,double> > v(map.begin(),map.end());\nsort(v.begin(),v.end(),cmp); \n```\n\n\n\n\n\n","slug":"stl","published":1,"updated":"2024-03-27T14:32:24.699Z","_id":"cltmz0uou0000g8ckdulicyhz","comments":1,"layout":"post","photos":[],"content":"<p>万用头文件：<code>#include&lt;bits/stdc++.h&gt;</code> <del>（不知道能不能用）</del></p>\n<p>公用的：</p>\n<ul>\n<li>查询长度（大小） <code>.size()</code></li>\n<li>清空 <code>.clear()</code></li>\n<li>判空 <code>.empty()</code></li>\n</ul>\n<h3 id=\"vector-普通数组的替代\"><a href=\"#vector-普通数组的替代\" class=\"headerlink\" title=\"vector 普通数组的替代\"></a>vector 普通数组的替代</h3><p>头文件：<code>#include&lt;vector&gt;</code></p>\n<p>构造：<code>vector&lt;类型&gt; arr(长度,[初值])</code></p>\n<p>示例：<code>vector&lt;int&gt; arr(10,1)</code></p>\n<p>插入：<code>arr.push_back(元素)</code> 在 vector 尾接一个元素，数组长度 +1</p>\n<p>删除：<code>arr.pop_back()</code> 删除 vector 尾部的一个元素，数组长度 −1</p>\n<p>改变长度：<code>arr.resize(长度),[默认值]</code></p>\n<p>修改：<code>arr[索引]=元素</code></p>\n<h3 id=\"stack-栈\"><a href=\"#stack-栈\" class=\"headerlink\" title=\"stack 栈\"></a>stack 栈</h3><p>头文件：<code>#include&lt;stack&gt;</code></p>\n<p>构造：<code>stack&lt;类型&gt; 栈名</code></p>\n<p>示例：<code>stack&lt;int&gt; s</code></p>\n<p>进栈：<code>栈名.push(元素)</code></p>\n<p>出栈：<code>栈名.pop()</code> （不可直接访问内部）</p>\n<p>获取栈顶:<code>栈名.top()</code></p>\n<h3 id=\"queue-队列\"><a href=\"#queue-队列\" class=\"headerlink\" title=\"queue 队列\"></a>queue 队列</h3><p>头文件：<code>#include&lt;queue&gt;</code></p>\n<p>构造：<code>queue&lt;类型&gt; 队列名</code></p>\n<p>示例：<code>queue&lt;int&gt; q</code></p>\n<p>进队：<code>队列名.push(元素)</code></p>\n<p>出队：<code>队列名.pop()</code> （不可直接访问内部）</p>\n<p>取队头:<code>队列名.front()</code></p>\n<p>取队尾：<code>队列名.back()</code></p>\n<h3 id=\"set-集合-内部元素不可重复-不可用下标访问\"><a href=\"#set-集合-内部元素不可重复-不可用下标访问\" class=\"headerlink\" title=\"set 集合 (内部元素不可重复,不可用下标访问)\"></a>set 集合 (内部元素不可重复,不可用下标访问)</h3><p>头文件：<code>#include&lt;set&gt;</code></p>\n<p>构造：<code>set&lt;类型, 比较器&gt; 集合名</code></p>\n<p>示例：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set&lt;<span class=\"type\">int</span>&gt; st1;               <span class=\"comment\">// 储存int的集合（从小到大）</span></span><br><span class=\"line\">set&lt;<span class=\"type\">int</span>, greater&lt;<span class=\"type\">int</span>&gt;&gt; st2; <span class=\"comment\">// 储存int的集合（从大到小）</span></span><br></pre></td></tr></table></figure>\n\n<p>插入：<code>集合名.insert(元素)</code></p>\n<p>删除：<code>集合名.erase(元素)</code></p>\n<p>查找：<code>集合名.find(元素)</code> 返回指向元素位置的迭代器，如果元素不存在，返回指向集合尾的迭代器</p>\n<p>判断存在：<code>集合名.count(元素)</code> 返回 1 表示存在，返回 0 表示不存在</p>\n<p>遍历:</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (set&lt;<span class=\"type\">int</span>&gt;::iterator it = st.<span class=\"built_in\">begin</span>(); it != st.<span class=\"built_in\">end</span>(); ++it)</span><br><span class=\"line\">    cout &lt;&lt; *it &lt;&lt; endl;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"map-映射\"><a href=\"#map-映射\" class=\"headerlink\" title=\"map 映射\"></a>map 映射</h3><p>头文件：<code>#include&lt;map&gt;</code></p>\n<p>构造：<code>map&lt;键类型, 值类型,比较器&gt; 映射名</code> (比较器可省，默认从小到大<code>greater&lt;int&gt;</code>为从大到小)</p>\n<p>示例：<code>map&lt;int, string&gt; mp</code></p>\n<p>增删查改：<code>mp[1] = 2;</code>(使用中括号)</p>\n<p>插入：<code>映射名.insert(pair&lt;类型, 类型&gt;(键, 值))</code></p>\n<p>删除：<code>映射名.erase(键)</code></p>\n<p>查找：<code>映射名.find(键)</code> 返回指向键位置的迭代器，如果键不存在，返回指向映射尾的迭代器</p>\n<p>判断存在：<code>映射名.count(键)</code> 返回 1 表示存在，返回 0 表示不存在</p>\n<p>遍历:</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (map&lt;<span class=\"type\">int</span>, string&gt;::iterator it = mp.<span class=\"built_in\">begin</span>(); it != mp.<span class=\"built_in\">end</span>(); ++it)</span><br><span class=\"line\">    cout &lt;&lt; it-&gt;first &lt;&lt; <span class=\"string\">&quot; &quot;</span> &lt;&lt; it-&gt;second &lt;&lt; endl;</span><br></pre></td></tr></table></figure>\n<h3 id=\"string-字符串\"><a href=\"#string-字符串\" class=\"headerlink\" title=\"string 字符串\"></a>string 字符串</h3><p>头文件：<code>#include&lt;string&gt;</code></p>\n<p>构造：<code>string 字符串名</code></p>\n<p>示例：<code>string s1 = &quot;hello&quot;;</code></p>\n<p><code>int / long long / float / double / long double</code>转<code>string</code>:to_string(变量)</p>\n<p>数值与字符串互转:</p>\n<table>\n<thead>\n<tr>\n<th>源</th>\n<th>目的</th>\n<th>函数</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>int&#x2F;long long&#x2F;float&#x2F;double&#x2F;long double</td>\n<td>string</td>\n<td>to_string()</td>\n</tr>\n<tr>\n<td>string</td>\n<td>int</td>\n<td>stoi()</td>\n</tr>\n<tr>\n<td>string</td>\n<td>long long</td>\n<td>stoll()</td>\n</tr>\n<tr>\n<td>string</td>\n<td>float</td>\n<td>stof()</td>\n</tr>\n<tr>\n<td>string</td>\n<td>double</td>\n<td>stod()</td>\n</tr>\n<tr>\n<td>string</td>\n<td>long double</td>\n<td>stold()</td>\n</tr>\n</tbody></table>\n<h3 id=\"常用函数\"><a href=\"#常用函数\" class=\"headerlink\" title=\"常用函数\"></a>常用函数</h3><p><code>swap(a, b)</code> 交换 a 和 b 的值</p>\n<p><code>max(a, b)</code> 返回 a 和 b 中的最大值</p>\n<p><code>min(a, b)</code> 返回 a 和 b 中的最小值</p>\n<p><code>abs(a)</code> 返回 a 的绝对值</p>\n<p><code>pow(a, b)</code> 返回 a 的 b 次方</p>\n<p><code>sqrt(a)</code> 返回 a 的平方根</p>\n<p><code>ceil(a)</code> 返回大于或等于 a 的最小整数(向上取整)</p>\n<p><code>floor(a)</code> 返回小于或等于 a 的最大整数（向下取整）</p>\n<p><code>sort()</code> 排序</p>\n<p><code>gcd(a, b)</code> 最大公约数</p>\n<p><code>lcm(a, b)</code> 最小公倍数</p>\n<h3 id=\"常见头文件\"><a href=\"#常见头文件\" class=\"headerlink\" title=\"常见头文件\"></a>常见头文件</h3><p><code>#include &lt;iostream&gt;</code>  <code>using namespace std;</code><br><code>#include&lt;algorithm&gt;</code> - 排序sort max min…的头文件</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>pair：<code>pair&lt;类型1, 类型2&gt; 变量名(元素1, 元素2)</code>(可以用来储存两个元素，<del>把map塞进去</del> ) pair头文件为<code>#include&lt;utility&gt;</code></p>\n<p>塞入vector中：<code>vector&lt; pair&lt;string,double&gt; &gt; v(maps.begin(),maps.end());</code>(然后可以直接用迭代器了)</p>\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//实现对map的排序</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">cmp</span><span class=\"params\">(pair&lt;string,<span class=\"type\">double</span>&gt; a,pair&lt;string,<span class=\"type\">double</span>&gt; b)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> a.second&gt;b.second; <span class=\"comment\">//&gt;降序 &lt;升序  自定义排序规则</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">vector&lt; pair&lt;string,<span class=\"type\">double</span>&gt; &gt; <span class=\"built_in\">v</span>(map.<span class=\"built_in\">begin</span>(),map.<span class=\"built_in\">end</span>());</span><br><span class=\"line\"><span class=\"built_in\">sort</span>(v.<span class=\"built_in\">begin</span>(),v.<span class=\"built_in\">end</span>(),cmp); </span><br></pre></td></tr></table></figure>\n\n\n\n\n\n","excerpt":"","more":"<p>万用头文件：<code>#include&lt;bits/stdc++.h&gt;</code> <del>（不知道能不能用）</del></p>\n<p>公用的：</p>\n<ul>\n<li>查询长度（大小） <code>.size()</code></li>\n<li>清空 <code>.clear()</code></li>\n<li>判空 <code>.empty()</code></li>\n</ul>\n<h3 id=\"vector-普通数组的替代\"><a href=\"#vector-普通数组的替代\" class=\"headerlink\" title=\"vector 普通数组的替代\"></a>vector 普通数组的替代</h3><p>头文件：<code>#include&lt;vector&gt;</code></p>\n<p>构造：<code>vector&lt;类型&gt; arr(长度,[初值])</code></p>\n<p>示例：<code>vector&lt;int&gt; arr(10,1)</code></p>\n<p>插入：<code>arr.push_back(元素)</code> 在 vector 尾接一个元素，数组长度 +1</p>\n<p>删除：<code>arr.pop_back()</code> 删除 vector 尾部的一个元素，数组长度 −1</p>\n<p>改变长度：<code>arr.resize(长度),[默认值]</code></p>\n<p>修改：<code>arr[索引]=元素</code></p>\n<h3 id=\"stack-栈\"><a href=\"#stack-栈\" class=\"headerlink\" title=\"stack 栈\"></a>stack 栈</h3><p>头文件：<code>#include&lt;stack&gt;</code></p>\n<p>构造：<code>stack&lt;类型&gt; 栈名</code></p>\n<p>示例：<code>stack&lt;int&gt; s</code></p>\n<p>进栈：<code>栈名.push(元素)</code></p>\n<p>出栈：<code>栈名.pop()</code> （不可直接访问内部）</p>\n<p>获取栈顶:<code>栈名.top()</code></p>\n<h3 id=\"queue-队列\"><a href=\"#queue-队列\" class=\"headerlink\" title=\"queue 队列\"></a>queue 队列</h3><p>头文件：<code>#include&lt;queue&gt;</code></p>\n<p>构造：<code>queue&lt;类型&gt; 队列名</code></p>\n<p>示例：<code>queue&lt;int&gt; q</code></p>\n<p>进队：<code>队列名.push(元素)</code></p>\n<p>出队：<code>队列名.pop()</code> （不可直接访问内部）</p>\n<p>取队头:<code>队列名.front()</code></p>\n<p>取队尾：<code>队列名.back()</code></p>\n<h3 id=\"set-集合-内部元素不可重复-不可用下标访问\"><a href=\"#set-集合-内部元素不可重复-不可用下标访问\" class=\"headerlink\" title=\"set 集合 (内部元素不可重复,不可用下标访问)\"></a>set 集合 (内部元素不可重复,不可用下标访问)</h3><p>头文件：<code>#include&lt;set&gt;</code></p>\n<p>构造：<code>set&lt;类型, 比较器&gt; 集合名</code></p>\n<p>示例：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set&lt;<span class=\"type\">int</span>&gt; st1;               <span class=\"comment\">// 储存int的集合（从小到大）</span></span><br><span class=\"line\">set&lt;<span class=\"type\">int</span>, greater&lt;<span class=\"type\">int</span>&gt;&gt; st2; <span class=\"comment\">// 储存int的集合（从大到小）</span></span><br></pre></td></tr></table></figure>\n\n<p>插入：<code>集合名.insert(元素)</code></p>\n<p>删除：<code>集合名.erase(元素)</code></p>\n<p>查找：<code>集合名.find(元素)</code> 返回指向元素位置的迭代器，如果元素不存在，返回指向集合尾的迭代器</p>\n<p>判断存在：<code>集合名.count(元素)</code> 返回 1 表示存在，返回 0 表示不存在</p>\n<p>遍历:</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (set&lt;<span class=\"type\">int</span>&gt;::iterator it = st.<span class=\"built_in\">begin</span>(); it != st.<span class=\"built_in\">end</span>(); ++it)</span><br><span class=\"line\">    cout &lt;&lt; *it &lt;&lt; endl;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"map-映射\"><a href=\"#map-映射\" class=\"headerlink\" title=\"map 映射\"></a>map 映射</h3><p>头文件：<code>#include&lt;map&gt;</code></p>\n<p>构造：<code>map&lt;键类型, 值类型,比较器&gt; 映射名</code> (比较器可省，默认从小到大<code>greater&lt;int&gt;</code>为从大到小)</p>\n<p>示例：<code>map&lt;int, string&gt; mp</code></p>\n<p>增删查改：<code>mp[1] = 2;</code>(使用中括号)</p>\n<p>插入：<code>映射名.insert(pair&lt;类型, 类型&gt;(键, 值))</code></p>\n<p>删除：<code>映射名.erase(键)</code></p>\n<p>查找：<code>映射名.find(键)</code> 返回指向键位置的迭代器，如果键不存在，返回指向映射尾的迭代器</p>\n<p>判断存在：<code>映射名.count(键)</code> 返回 1 表示存在，返回 0 表示不存在</p>\n<p>遍历:</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (map&lt;<span class=\"type\">int</span>, string&gt;::iterator it = mp.<span class=\"built_in\">begin</span>(); it != mp.<span class=\"built_in\">end</span>(); ++it)</span><br><span class=\"line\">    cout &lt;&lt; it-&gt;first &lt;&lt; <span class=\"string\">&quot; &quot;</span> &lt;&lt; it-&gt;second &lt;&lt; endl;</span><br></pre></td></tr></table></figure>\n<h3 id=\"string-字符串\"><a href=\"#string-字符串\" class=\"headerlink\" title=\"string 字符串\"></a>string 字符串</h3><p>头文件：<code>#include&lt;string&gt;</code></p>\n<p>构造：<code>string 字符串名</code></p>\n<p>示例：<code>string s1 = &quot;hello&quot;;</code></p>\n<p><code>int / long long / float / double / long double</code>转<code>string</code>:to_string(变量)</p>\n<p>数值与字符串互转:</p>\n<table>\n<thead>\n<tr>\n<th>源</th>\n<th>目的</th>\n<th>函数</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>int&#x2F;long long&#x2F;float&#x2F;double&#x2F;long double</td>\n<td>string</td>\n<td>to_string()</td>\n</tr>\n<tr>\n<td>string</td>\n<td>int</td>\n<td>stoi()</td>\n</tr>\n<tr>\n<td>string</td>\n<td>long long</td>\n<td>stoll()</td>\n</tr>\n<tr>\n<td>string</td>\n<td>float</td>\n<td>stof()</td>\n</tr>\n<tr>\n<td>string</td>\n<td>double</td>\n<td>stod()</td>\n</tr>\n<tr>\n<td>string</td>\n<td>long double</td>\n<td>stold()</td>\n</tr>\n</tbody></table>\n<h3 id=\"常用函数\"><a href=\"#常用函数\" class=\"headerlink\" title=\"常用函数\"></a>常用函数</h3><p><code>swap(a, b)</code> 交换 a 和 b 的值</p>\n<p><code>max(a, b)</code> 返回 a 和 b 中的最大值</p>\n<p><code>min(a, b)</code> 返回 a 和 b 中的最小值</p>\n<p><code>abs(a)</code> 返回 a 的绝对值</p>\n<p><code>pow(a, b)</code> 返回 a 的 b 次方</p>\n<p><code>sqrt(a)</code> 返回 a 的平方根</p>\n<p><code>ceil(a)</code> 返回大于或等于 a 的最小整数(向上取整)</p>\n<p><code>floor(a)</code> 返回小于或等于 a 的最大整数（向下取整）</p>\n<p><code>sort()</code> 排序</p>\n<p><code>gcd(a, b)</code> 最大公约数</p>\n<p><code>lcm(a, b)</code> 最小公倍数</p>\n<h3 id=\"常见头文件\"><a href=\"#常见头文件\" class=\"headerlink\" title=\"常见头文件\"></a>常见头文件</h3><p><code>#include &lt;iostream&gt;</code>  <code>using namespace std;</code><br><code>#include&lt;algorithm&gt;</code> - 排序sort max min…的头文件</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>pair：<code>pair&lt;类型1, 类型2&gt; 变量名(元素1, 元素2)</code>(可以用来储存两个元素，<del>把map塞进去</del> ) pair头文件为<code>#include&lt;utility&gt;</code></p>\n<p>塞入vector中：<code>vector&lt; pair&lt;string,double&gt; &gt; v(maps.begin(),maps.end());</code>(然后可以直接用迭代器了)</p>\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//实现对map的排序</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">cmp</span><span class=\"params\">(pair&lt;string,<span class=\"type\">double</span>&gt; a,pair&lt;string,<span class=\"type\">double</span>&gt; b)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> a.second&gt;b.second; <span class=\"comment\">//&gt;降序 &lt;升序  自定义排序规则</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">vector&lt; pair&lt;string,<span class=\"type\">double</span>&gt; &gt; <span class=\"built_in\">v</span>(map.<span class=\"built_in\">begin</span>(),map.<span class=\"built_in\">end</span>());</span><br><span class=\"line\"><span class=\"built_in\">sort</span>(v.<span class=\"built_in\">begin</span>(),v.<span class=\"built_in\">end</span>(),cmp); </span><br></pre></td></tr></table></figure>\n\n\n\n\n\n"},{"title":"linux指令","date":"2024-03-27T10:10:13.000Z","_content":"防火墙：`firewall-cmd --zone=public --add-port=80/tcp --permanent `\n重启防火墙：`firewall-cmd --reload`","source":"_posts/linux.md","raw":"---\ntitle: linux指令\ndate: 2024-03-27 18:10:13\ntags:\n---\n防火墙：`firewall-cmd --zone=public --add-port=80/tcp --permanent `\n重启防火墙：`firewall-cmd --reload`","slug":"linux","published":1,"updated":"2024-03-27T10:11:26.776Z","comments":1,"layout":"post","photos":[],"_id":"clu9wnkls0000wwck29wo4gnc","content":"<p>防火墙：<code>firewall-cmd --zone=public --add-port=80/tcp --permanent </code><br>重启防火墙：<code>firewall-cmd --reload</code></p>\n","excerpt":"","more":"<p>防火墙：<code>firewall-cmd --zone=public --add-port=80/tcp --permanent </code><br>重启防火墙：<code>firewall-cmd --reload</code></p>\n"},{"title":"sql命令整理","date":"2024-04-02T12:13:24.000Z","_content":"\n### SELECT\n查询\n\n常用语法：\n```\nSELECT [需要查询的内容] FROM <数据库名> WHERE [条件];\nSELECT email FROM login WHERE username='admin'\n\n```\n\n### INSERT\n插入\n\n常用语法：\n```\nINSERT INTO <数据库名> (字段1,字段2,字段3) VALUES (值1,值2,值3);\nINSERT INTO login (username,password,email) VALUES ('admin','123456','admin@admin.com');\n```\n\n### DELETE\n删除数据\n\n常用语法：\n```\nDELETE FROM <数据库名> WHERE [条件];\nDELETE FROM login WHERE username='admin';\n```\n\n### UPDATE\n更新\n\n常用语法：\n```\nUPDATE <数据库名> SET [需要更新的内容] WHERE [条件];\nUPDATE login SET password='123456' WHERE username='admin';\n```\n\n### AND & OR\n逻辑操作符 AND->&& OR->|| 常用于查询WHERE条件\n\n常用语法：\n```\nSELECT * FROM login WHERE username='admin' AND password='123456';\nSELECT * FROM login WHERE username='admin' OR password='123456';\n```\n\n### CREATE\n创建表\n\n常用语法：\n```\nCREATE TABLE <数据库名> (\n    <字段1> <数据类型> <约束>,\n    ...\n);\n```\n\n### DROP\n删除表\n\n常用语法：\n```\nDROP TABLE <数据库名>;\nDROP TABLE login;\n```\n### MySQL 数据类型\n在 MySQL 中，有三种主要的类型：Text（文本）、Number（数字）和 Date/Time（日期/时间）类型。\n\n> text类型\n\n|数据类型|描述|\n|--|--|\n|CHAR(size)|保存固定长度的字符串（可包含字母、数字以及特殊字符）。在括号中指定字符串的长度。最多 255 个字符。|\n|VARCHAR(size)|保存可变长度的字符串（可包含字母、数字以及特殊字符）。在括号中指定字符串的最大长度。最多 255 个字符。注释：如果值的长度大于 255，则被转换为 TEXT 类型。|\n|TINYTEXT|存放最大长度为 255 个字符的字符串。|\n|TEXT|存放最大长度为 65,535 个字符的字符串。|\n|BLOB|用于 BLOBs（Binary Large OBjects）。存放最多 65,535 字节的数据。|\n|MEDIUMTEXT|存放最大长度为 16,777,215 个字符的字符串。|\n|MEDIUMBLOB|用于 BLOBs（Binary Large OBjects）。存放最多 16,777,215 字节的数据。|\n|LONGTEXT|存放最大长度为 4,294,967,295 个字符的字符串。|\n|LONGBLOB|用于 BLOBs (Binary Large OBjects)。存放最多 4,294,967,295 字节的数据。|\n|ENUM(x,y,z,etc.)|允许您输入可能值的列表。可以在 ENUM 列表中列出最大 65535 个值。如果列表中不存在插入的值，则插入空值。**注释**：这些值是按照您输入的顺序排序的。可以按照此格式输入可能的值： ENUM('X','Y','Z')|\n|SET|与 ENUM 类似，不同的是，SET 最多只能包含 64 个列表项且 SET 可存储一个以上的选择。|\n\n> number类型\n\n|数据类型|描述|\n|--|--| \n|TINYINT(size)|带符号-128到127 ，无符号0到255。|\n|SMALLINT(size)|带符号范围-32768到32767，无符号0到65535, size 默认为 6。|\n|MEDIUMINT(size)|带符号范围-8388608到8388607，无符号的范围是0到16777215。 size 默认为9|\n|INT(size)|带符号范围-2147483648到2147483647，无符号的范围是0到4294967295。 size 默认为 11|\n|BIGINT(size)|带符号的范围是-9223372036854775808到9223372036854775807，无符号的范围是0到18446744073709551615。size 默认为 20|\n|FLOAT(size,d)|带有浮动小数点的小数字。在 size 参数中规定显示最大位数。在 d 参数中规定小数点右侧的最大位数。|\n|DOUBLE(size,d)|带有浮动小数点的大数字。在 size 参数中规显示定最大位数。在 d 参数中规定小数点右侧的最大位数。|\n|DECIMAL(size,d)|作为字符串存储的 DOUBLE 类型，允许固定的小数点。在 size 参数中规定显示最大位数。在 d 参数中规定小数点右侧的最大位数。|\n\n注意：以上的 size 代表的并不是存储在数据库中的具体的长度，如 int(4) 并不是只能存储4个长度的数字。\n\n实际上int(size)所占多少存储空间并无任何关系。int(3)、int(4)、int(8) 在磁盘上都是占用 4 btyes 的存储空间。就是在显示给用户的方式有点不同外，int(M) 跟 int 数据类型是相同的。\n\n例如：\n\n1、int的值为10 （指定zerofill）\n```\nint（9）显示结果为000000010\nint（3）显示结果为010\n```\n就是显示的长度不一样而已 都是占用四个字节的空间\n\n> date/time类型\n> \n|数据类型|描述|\n|--|--| \n|DATE()|日期。格式：YYYY-MM-DD **注释**：支持的范围是从 '1000-01-01' 到 '9999-12-31'|\n|DATETIME()\t|*日期和时间的组合。格式：YYYY-MM-DD HH:MM:SS **注释**：支持的范围是从 '1000-01-01 00:00:00' 到 '9999-12-31 23:59:59'|\n|TIMESTAMP()|*时间戳。TIMESTAMP 值使用 Unix 纪元('1970-01-01 00:00:00' UTC) 至今的秒数来存储。格式：YYYY-MM-DD HH:MM:SS **注释**：支持的范围是从 '1970-01-01 00:00:01' UTC 到 '2038-01-09 03:14:07' UTC|\n|TIME()\t|时间。格式：HH:MM:SS **注释**：支持的范围是从 '-838:59:59' 到 '838:59:59'|\n|YEAR()\t|2 位或 4 位格式的年。 **注释**：4 位格式所允许的值：1901 到 2155。2 位格式所允许的值：70 到 69，表示从 1970 到 2069。|\n\n*即便 DATETIME 和 TIMESTAMP 返回相同的格式，它们的工作方式很不同。在 INSERT 或 UPDATE 查询中，TIMESTAMP 自动把自身设置为当前的日期和时间。TIMESTAMP 也接受不同的格式，比如 YYYYMMDDHHMMSS、YYMMDDHHMMSS、YYYYMMDD 或 YYMMDD。\n\n> [数据类型原文](https://www.runoob.com/sql/sql-datatypes.html)","source":"_posts/sql.md","raw":"---\ntitle: sql命令整理\ndate: 2024-04-02 20:13:24\ntags: 笔记\n---\n\n### SELECT\n查询\n\n常用语法：\n```\nSELECT [需要查询的内容] FROM <数据库名> WHERE [条件];\nSELECT email FROM login WHERE username='admin'\n\n```\n\n### INSERT\n插入\n\n常用语法：\n```\nINSERT INTO <数据库名> (字段1,字段2,字段3) VALUES (值1,值2,值3);\nINSERT INTO login (username,password,email) VALUES ('admin','123456','admin@admin.com');\n```\n\n### DELETE\n删除数据\n\n常用语法：\n```\nDELETE FROM <数据库名> WHERE [条件];\nDELETE FROM login WHERE username='admin';\n```\n\n### UPDATE\n更新\n\n常用语法：\n```\nUPDATE <数据库名> SET [需要更新的内容] WHERE [条件];\nUPDATE login SET password='123456' WHERE username='admin';\n```\n\n### AND & OR\n逻辑操作符 AND->&& OR->|| 常用于查询WHERE条件\n\n常用语法：\n```\nSELECT * FROM login WHERE username='admin' AND password='123456';\nSELECT * FROM login WHERE username='admin' OR password='123456';\n```\n\n### CREATE\n创建表\n\n常用语法：\n```\nCREATE TABLE <数据库名> (\n    <字段1> <数据类型> <约束>,\n    ...\n);\n```\n\n### DROP\n删除表\n\n常用语法：\n```\nDROP TABLE <数据库名>;\nDROP TABLE login;\n```\n### MySQL 数据类型\n在 MySQL 中，有三种主要的类型：Text（文本）、Number（数字）和 Date/Time（日期/时间）类型。\n\n> text类型\n\n|数据类型|描述|\n|--|--|\n|CHAR(size)|保存固定长度的字符串（可包含字母、数字以及特殊字符）。在括号中指定字符串的长度。最多 255 个字符。|\n|VARCHAR(size)|保存可变长度的字符串（可包含字母、数字以及特殊字符）。在括号中指定字符串的最大长度。最多 255 个字符。注释：如果值的长度大于 255，则被转换为 TEXT 类型。|\n|TINYTEXT|存放最大长度为 255 个字符的字符串。|\n|TEXT|存放最大长度为 65,535 个字符的字符串。|\n|BLOB|用于 BLOBs（Binary Large OBjects）。存放最多 65,535 字节的数据。|\n|MEDIUMTEXT|存放最大长度为 16,777,215 个字符的字符串。|\n|MEDIUMBLOB|用于 BLOBs（Binary Large OBjects）。存放最多 16,777,215 字节的数据。|\n|LONGTEXT|存放最大长度为 4,294,967,295 个字符的字符串。|\n|LONGBLOB|用于 BLOBs (Binary Large OBjects)。存放最多 4,294,967,295 字节的数据。|\n|ENUM(x,y,z,etc.)|允许您输入可能值的列表。可以在 ENUM 列表中列出最大 65535 个值。如果列表中不存在插入的值，则插入空值。**注释**：这些值是按照您输入的顺序排序的。可以按照此格式输入可能的值： ENUM('X','Y','Z')|\n|SET|与 ENUM 类似，不同的是，SET 最多只能包含 64 个列表项且 SET 可存储一个以上的选择。|\n\n> number类型\n\n|数据类型|描述|\n|--|--| \n|TINYINT(size)|带符号-128到127 ，无符号0到255。|\n|SMALLINT(size)|带符号范围-32768到32767，无符号0到65535, size 默认为 6。|\n|MEDIUMINT(size)|带符号范围-8388608到8388607，无符号的范围是0到16777215。 size 默认为9|\n|INT(size)|带符号范围-2147483648到2147483647，无符号的范围是0到4294967295。 size 默认为 11|\n|BIGINT(size)|带符号的范围是-9223372036854775808到9223372036854775807，无符号的范围是0到18446744073709551615。size 默认为 20|\n|FLOAT(size,d)|带有浮动小数点的小数字。在 size 参数中规定显示最大位数。在 d 参数中规定小数点右侧的最大位数。|\n|DOUBLE(size,d)|带有浮动小数点的大数字。在 size 参数中规显示定最大位数。在 d 参数中规定小数点右侧的最大位数。|\n|DECIMAL(size,d)|作为字符串存储的 DOUBLE 类型，允许固定的小数点。在 size 参数中规定显示最大位数。在 d 参数中规定小数点右侧的最大位数。|\n\n注意：以上的 size 代表的并不是存储在数据库中的具体的长度，如 int(4) 并不是只能存储4个长度的数字。\n\n实际上int(size)所占多少存储空间并无任何关系。int(3)、int(4)、int(8) 在磁盘上都是占用 4 btyes 的存储空间。就是在显示给用户的方式有点不同外，int(M) 跟 int 数据类型是相同的。\n\n例如：\n\n1、int的值为10 （指定zerofill）\n```\nint（9）显示结果为000000010\nint（3）显示结果为010\n```\n就是显示的长度不一样而已 都是占用四个字节的空间\n\n> date/time类型\n> \n|数据类型|描述|\n|--|--| \n|DATE()|日期。格式：YYYY-MM-DD **注释**：支持的范围是从 '1000-01-01' 到 '9999-12-31'|\n|DATETIME()\t|*日期和时间的组合。格式：YYYY-MM-DD HH:MM:SS **注释**：支持的范围是从 '1000-01-01 00:00:00' 到 '9999-12-31 23:59:59'|\n|TIMESTAMP()|*时间戳。TIMESTAMP 值使用 Unix 纪元('1970-01-01 00:00:00' UTC) 至今的秒数来存储。格式：YYYY-MM-DD HH:MM:SS **注释**：支持的范围是从 '1970-01-01 00:00:01' UTC 到 '2038-01-09 03:14:07' UTC|\n|TIME()\t|时间。格式：HH:MM:SS **注释**：支持的范围是从 '-838:59:59' 到 '838:59:59'|\n|YEAR()\t|2 位或 4 位格式的年。 **注释**：4 位格式所允许的值：1901 到 2155。2 位格式所允许的值：70 到 69，表示从 1970 到 2069。|\n\n*即便 DATETIME 和 TIMESTAMP 返回相同的格式，它们的工作方式很不同。在 INSERT 或 UPDATE 查询中，TIMESTAMP 自动把自身设置为当前的日期和时间。TIMESTAMP 也接受不同的格式，比如 YYYYMMDDHHMMSS、YYMMDDHHMMSS、YYYYMMDD 或 YYMMDD。\n\n> [数据类型原文](https://www.runoob.com/sql/sql-datatypes.html)","slug":"sql","published":1,"updated":"2024-04-02T12:52:27.376Z","_id":"cluicved600003gck76efansb","comments":1,"layout":"post","photos":[],"content":"<h3 id=\"SELECT\"><a href=\"#SELECT\" class=\"headerlink\" title=\"SELECT\"></a>SELECT</h3><p>查询</p>\n<p>常用语法：</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> [需要查询的内容] <span class=\"keyword\">FROM</span> &lt;数据库名&gt; <span class=\"keyword\">WHERE</span> [条件];</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> email <span class=\"keyword\">FROM</span> <span class=\"keyword\">login</span> <span class=\"keyword\">WHERE</span> username=<span class=\"string\">&#x27;admin&#x27;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"INSERT\"><a href=\"#INSERT\" class=\"headerlink\" title=\"INSERT\"></a>INSERT</h3><p>插入</p>\n<p>常用语法：</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> &lt;数据库名&gt; (字段<span class=\"number\">1</span>,字段<span class=\"number\">2</span>,字段<span class=\"number\">3</span>) <span class=\"keyword\">VALUES</span> (值<span class=\"number\">1</span>,值<span class=\"number\">2</span>,值<span class=\"number\">3</span>);</span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> <span class=\"keyword\">login</span> (username,<span class=\"keyword\">password</span>,email) <span class=\"keyword\">VALUES</span> (<span class=\"string\">&#x27;admin&#x27;</span>,<span class=\"string\">&#x27;123456&#x27;</span>,<span class=\"string\">&#x27;admin@admin.com&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"DELETE\"><a href=\"#DELETE\" class=\"headerlink\" title=\"DELETE\"></a>DELETE</h3><p>删除数据</p>\n<p>常用语法：</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DELETE</span> <span class=\"keyword\">FROM</span> &lt;数据库名&gt; <span class=\"keyword\">WHERE</span> [条件];</span><br><span class=\"line\"><span class=\"keyword\">DELETE</span> <span class=\"keyword\">FROM</span> <span class=\"keyword\">login</span> <span class=\"keyword\">WHERE</span> username=<span class=\"string\">&#x27;admin&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"UPDATE\"><a href=\"#UPDATE\" class=\"headerlink\" title=\"UPDATE\"></a>UPDATE</h3><p>更新</p>\n<p>常用语法：</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">UPDATE</span> &lt;数据库名&gt; <span class=\"keyword\">SET</span> [需要更新的内容] <span class=\"keyword\">WHERE</span> [条件];</span><br><span class=\"line\"><span class=\"keyword\">UPDATE</span> <span class=\"keyword\">login</span> <span class=\"keyword\">SET</span> <span class=\"keyword\">password</span>=<span class=\"string\">&#x27;123456&#x27;</span> <span class=\"keyword\">WHERE</span> username=<span class=\"string\">&#x27;admin&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"AND-OR\"><a href=\"#AND-OR\" class=\"headerlink\" title=\"AND &amp; OR\"></a>AND &amp; OR</h3><p>逻辑操作符 AND-&gt;&amp;&amp; OR-&gt;|| 常用于查询WHERE条件</p>\n<p>常用语法：</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> <span class=\"keyword\">login</span> <span class=\"keyword\">WHERE</span> username=<span class=\"string\">&#x27;admin&#x27;</span> <span class=\"keyword\">AND</span> <span class=\"keyword\">password</span>=<span class=\"string\">&#x27;123456&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> <span class=\"keyword\">login</span> <span class=\"keyword\">WHERE</span> username=<span class=\"string\">&#x27;admin&#x27;</span> <span class=\"keyword\">OR</span> <span class=\"keyword\">password</span>=<span class=\"string\">&#x27;123456&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"CREATE\"><a href=\"#CREATE\" class=\"headerlink\" title=\"CREATE\"></a>CREATE</h3><p>创建表</p>\n<p>常用语法：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE TABLE <span class=\"tag\">&lt;<span class=\"name\">数据库名</span>&gt;</span> (</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">字段1</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">数据类型</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">约束</span>&gt;</span>,</span><br><span class=\"line\">    ...</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"DROP\"><a href=\"#DROP\" class=\"headerlink\" title=\"DROP\"></a>DROP</h3><p>删除表</p>\n<p>常用语法：</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">TABLE</span> &lt;数据库名&gt;;</span><br><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">TABLE</span> <span class=\"keyword\">login</span>;</span><br></pre></td></tr></table></figure>\n<h3 id=\"MySQL-数据类型\"><a href=\"#MySQL-数据类型\" class=\"headerlink\" title=\"MySQL 数据类型\"></a>MySQL 数据类型</h3><p>在 MySQL 中，有三种主要的类型：Text（文本）、Number（数字）和 Date&#x2F;Time（日期&#x2F;时间）类型。</p>\n<blockquote>\n<p>text类型</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>数据类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>CHAR(size)</td>\n<td>保存固定长度的字符串（可包含字母、数字以及特殊字符）。在括号中指定字符串的长度。最多 255 个字符。</td>\n</tr>\n<tr>\n<td>VARCHAR(size)</td>\n<td>保存可变长度的字符串（可包含字母、数字以及特殊字符）。在括号中指定字符串的最大长度。最多 255 个字符。注释：如果值的长度大于 255，则被转换为 TEXT 类型。</td>\n</tr>\n<tr>\n<td>TINYTEXT</td>\n<td>存放最大长度为 255 个字符的字符串。</td>\n</tr>\n<tr>\n<td>TEXT</td>\n<td>存放最大长度为 65,535 个字符的字符串。</td>\n</tr>\n<tr>\n<td>BLOB</td>\n<td>用于 BLOBs（Binary Large OBjects）。存放最多 65,535 字节的数据。</td>\n</tr>\n<tr>\n<td>MEDIUMTEXT</td>\n<td>存放最大长度为 16,777,215 个字符的字符串。</td>\n</tr>\n<tr>\n<td>MEDIUMBLOB</td>\n<td>用于 BLOBs（Binary Large OBjects）。存放最多 16,777,215 字节的数据。</td>\n</tr>\n<tr>\n<td>LONGTEXT</td>\n<td>存放最大长度为 4,294,967,295 个字符的字符串。</td>\n</tr>\n<tr>\n<td>LONGBLOB</td>\n<td>用于 BLOBs (Binary Large OBjects)。存放最多 4,294,967,295 字节的数据。</td>\n</tr>\n<tr>\n<td>ENUM(x,y,z,etc.)</td>\n<td>允许您输入可能值的列表。可以在 ENUM 列表中列出最大 65535 个值。如果列表中不存在插入的值，则插入空值。<strong>注释</strong>：这些值是按照您输入的顺序排序的。可以按照此格式输入可能的值： ENUM(‘X’,’Y’,’Z’)</td>\n</tr>\n<tr>\n<td>SET</td>\n<td>与 ENUM 类似，不同的是，SET 最多只能包含 64 个列表项且 SET 可存储一个以上的选择。</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>number类型</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>数据类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>TINYINT(size)</td>\n<td>带符号-128到127 ，无符号0到255。</td>\n</tr>\n<tr>\n<td>SMALLINT(size)</td>\n<td>带符号范围-32768到32767，无符号0到65535, size 默认为 6。</td>\n</tr>\n<tr>\n<td>MEDIUMINT(size)</td>\n<td>带符号范围-8388608到8388607，无符号的范围是0到16777215。 size 默认为9</td>\n</tr>\n<tr>\n<td>INT(size)</td>\n<td>带符号范围-2147483648到2147483647，无符号的范围是0到4294967295。 size 默认为 11</td>\n</tr>\n<tr>\n<td>BIGINT(size)</td>\n<td>带符号的范围是-9223372036854775808到9223372036854775807，无符号的范围是0到18446744073709551615。size 默认为 20</td>\n</tr>\n<tr>\n<td>FLOAT(size,d)</td>\n<td>带有浮动小数点的小数字。在 size 参数中规定显示最大位数。在 d 参数中规定小数点右侧的最大位数。</td>\n</tr>\n<tr>\n<td>DOUBLE(size,d)</td>\n<td>带有浮动小数点的大数字。在 size 参数中规显示定最大位数。在 d 参数中规定小数点右侧的最大位数。</td>\n</tr>\n<tr>\n<td>DECIMAL(size,d)</td>\n<td>作为字符串存储的 DOUBLE 类型，允许固定的小数点。在 size 参数中规定显示最大位数。在 d 参数中规定小数点右侧的最大位数。</td>\n</tr>\n</tbody></table>\n<p>注意：以上的 size 代表的并不是存储在数据库中的具体的长度，如 int(4) 并不是只能存储4个长度的数字。</p>\n<p>实际上int(size)所占多少存储空间并无任何关系。int(3)、int(4)、int(8) 在磁盘上都是占用 4 btyes 的存储空间。就是在显示给用户的方式有点不同外，int(M) 跟 int 数据类型是相同的。</p>\n<p>例如：</p>\n<p>1、int的值为10 （指定zerofill）</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">int</span>（<span class=\"number\">9</span>）显示结果为<span class=\"number\">000000010</span></span><br><span class=\"line\"><span class=\"attribute\">int</span>（<span class=\"number\">3</span>）显示结果为<span class=\"number\">010</span></span><br></pre></td></tr></table></figure>\n<p>就是显示的长度不一样而已 都是占用四个字节的空间</p>\n<blockquote>\n<p>date&#x2F;time类型</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>数据类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>DATE()</td>\n<td>日期。格式：YYYY-MM-DD <strong>注释</strong>：支持的范围是从 ‘1000-01-01’ 到 ‘9999-12-31’</td>\n</tr>\n<tr>\n<td>DATETIME()</td>\n<td>*日期和时间的组合。格式：YYYY-MM-DD HH:MM:SS <strong>注释</strong>：支持的范围是从 ‘1000-01-01 00:00:00’ 到 ‘9999-12-31 23:59:59’</td>\n</tr>\n<tr>\n<td>TIMESTAMP()</td>\n<td>*时间戳。TIMESTAMP 值使用 Unix 纪元(‘1970-01-01 00:00:00’ UTC) 至今的秒数来存储。格式：YYYY-MM-DD HH:MM:SS <strong>注释</strong>：支持的范围是从 ‘1970-01-01 00:00:01’ UTC 到 ‘2038-01-09 03:14:07’ UTC</td>\n</tr>\n<tr>\n<td>TIME()</td>\n<td>时间。格式：HH:MM:SS <strong>注释</strong>：支持的范围是从 ‘-838:59:59’ 到 ‘838:59:59’</td>\n</tr>\n<tr>\n<td>YEAR()</td>\n<td>2 位或 4 位格式的年。 <strong>注释</strong>：4 位格式所允许的值：1901 到 2155。2 位格式所允许的值：70 到 69，表示从 1970 到 2069。</td>\n</tr>\n</tbody></table>\n<p>*即便 DATETIME 和 TIMESTAMP 返回相同的格式，它们的工作方式很不同。在 INSERT 或 UPDATE 查询中，TIMESTAMP 自动把自身设置为当前的日期和时间。TIMESTAMP 也接受不同的格式，比如 YYYYMMDDHHMMSS、YYMMDDHHMMSS、YYYYMMDD 或 YYMMDD。</p>\n<blockquote>\n<p><a href=\"https://www.runoob.com/sql/sql-datatypes.html\">数据类型原文</a></p>\n</blockquote>\n","excerpt":"","more":"<h3 id=\"SELECT\"><a href=\"#SELECT\" class=\"headerlink\" title=\"SELECT\"></a>SELECT</h3><p>查询</p>\n<p>常用语法：</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> [需要查询的内容] <span class=\"keyword\">FROM</span> &lt;数据库名&gt; <span class=\"keyword\">WHERE</span> [条件];</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> email <span class=\"keyword\">FROM</span> <span class=\"keyword\">login</span> <span class=\"keyword\">WHERE</span> username=<span class=\"string\">&#x27;admin&#x27;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"INSERT\"><a href=\"#INSERT\" class=\"headerlink\" title=\"INSERT\"></a>INSERT</h3><p>插入</p>\n<p>常用语法：</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> &lt;数据库名&gt; (字段<span class=\"number\">1</span>,字段<span class=\"number\">2</span>,字段<span class=\"number\">3</span>) <span class=\"keyword\">VALUES</span> (值<span class=\"number\">1</span>,值<span class=\"number\">2</span>,值<span class=\"number\">3</span>);</span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> <span class=\"keyword\">login</span> (username,<span class=\"keyword\">password</span>,email) <span class=\"keyword\">VALUES</span> (<span class=\"string\">&#x27;admin&#x27;</span>,<span class=\"string\">&#x27;123456&#x27;</span>,<span class=\"string\">&#x27;admin@admin.com&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"DELETE\"><a href=\"#DELETE\" class=\"headerlink\" title=\"DELETE\"></a>DELETE</h3><p>删除数据</p>\n<p>常用语法：</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DELETE</span> <span class=\"keyword\">FROM</span> &lt;数据库名&gt; <span class=\"keyword\">WHERE</span> [条件];</span><br><span class=\"line\"><span class=\"keyword\">DELETE</span> <span class=\"keyword\">FROM</span> <span class=\"keyword\">login</span> <span class=\"keyword\">WHERE</span> username=<span class=\"string\">&#x27;admin&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"UPDATE\"><a href=\"#UPDATE\" class=\"headerlink\" title=\"UPDATE\"></a>UPDATE</h3><p>更新</p>\n<p>常用语法：</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">UPDATE</span> &lt;数据库名&gt; <span class=\"keyword\">SET</span> [需要更新的内容] <span class=\"keyword\">WHERE</span> [条件];</span><br><span class=\"line\"><span class=\"keyword\">UPDATE</span> <span class=\"keyword\">login</span> <span class=\"keyword\">SET</span> <span class=\"keyword\">password</span>=<span class=\"string\">&#x27;123456&#x27;</span> <span class=\"keyword\">WHERE</span> username=<span class=\"string\">&#x27;admin&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"AND-OR\"><a href=\"#AND-OR\" class=\"headerlink\" title=\"AND &amp; OR\"></a>AND &amp; OR</h3><p>逻辑操作符 AND-&gt;&amp;&amp; OR-&gt;|| 常用于查询WHERE条件</p>\n<p>常用语法：</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> <span class=\"keyword\">login</span> <span class=\"keyword\">WHERE</span> username=<span class=\"string\">&#x27;admin&#x27;</span> <span class=\"keyword\">AND</span> <span class=\"keyword\">password</span>=<span class=\"string\">&#x27;123456&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> <span class=\"keyword\">login</span> <span class=\"keyword\">WHERE</span> username=<span class=\"string\">&#x27;admin&#x27;</span> <span class=\"keyword\">OR</span> <span class=\"keyword\">password</span>=<span class=\"string\">&#x27;123456&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"CREATE\"><a href=\"#CREATE\" class=\"headerlink\" title=\"CREATE\"></a>CREATE</h3><p>创建表</p>\n<p>常用语法：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE TABLE <span class=\"tag\">&lt;<span class=\"name\">数据库名</span>&gt;</span> (</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">字段1</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">数据类型</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">约束</span>&gt;</span>,</span><br><span class=\"line\">    ...</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"DROP\"><a href=\"#DROP\" class=\"headerlink\" title=\"DROP\"></a>DROP</h3><p>删除表</p>\n<p>常用语法：</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">TABLE</span> &lt;数据库名&gt;;</span><br><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">TABLE</span> <span class=\"keyword\">login</span>;</span><br></pre></td></tr></table></figure>\n<h3 id=\"MySQL-数据类型\"><a href=\"#MySQL-数据类型\" class=\"headerlink\" title=\"MySQL 数据类型\"></a>MySQL 数据类型</h3><p>在 MySQL 中，有三种主要的类型：Text（文本）、Number（数字）和 Date&#x2F;Time（日期&#x2F;时间）类型。</p>\n<blockquote>\n<p>text类型</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>数据类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>CHAR(size)</td>\n<td>保存固定长度的字符串（可包含字母、数字以及特殊字符）。在括号中指定字符串的长度。最多 255 个字符。</td>\n</tr>\n<tr>\n<td>VARCHAR(size)</td>\n<td>保存可变长度的字符串（可包含字母、数字以及特殊字符）。在括号中指定字符串的最大长度。最多 255 个字符。注释：如果值的长度大于 255，则被转换为 TEXT 类型。</td>\n</tr>\n<tr>\n<td>TINYTEXT</td>\n<td>存放最大长度为 255 个字符的字符串。</td>\n</tr>\n<tr>\n<td>TEXT</td>\n<td>存放最大长度为 65,535 个字符的字符串。</td>\n</tr>\n<tr>\n<td>BLOB</td>\n<td>用于 BLOBs（Binary Large OBjects）。存放最多 65,535 字节的数据。</td>\n</tr>\n<tr>\n<td>MEDIUMTEXT</td>\n<td>存放最大长度为 16,777,215 个字符的字符串。</td>\n</tr>\n<tr>\n<td>MEDIUMBLOB</td>\n<td>用于 BLOBs（Binary Large OBjects）。存放最多 16,777,215 字节的数据。</td>\n</tr>\n<tr>\n<td>LONGTEXT</td>\n<td>存放最大长度为 4,294,967,295 个字符的字符串。</td>\n</tr>\n<tr>\n<td>LONGBLOB</td>\n<td>用于 BLOBs (Binary Large OBjects)。存放最多 4,294,967,295 字节的数据。</td>\n</tr>\n<tr>\n<td>ENUM(x,y,z,etc.)</td>\n<td>允许您输入可能值的列表。可以在 ENUM 列表中列出最大 65535 个值。如果列表中不存在插入的值，则插入空值。<strong>注释</strong>：这些值是按照您输入的顺序排序的。可以按照此格式输入可能的值： ENUM(‘X’,’Y’,’Z’)</td>\n</tr>\n<tr>\n<td>SET</td>\n<td>与 ENUM 类似，不同的是，SET 最多只能包含 64 个列表项且 SET 可存储一个以上的选择。</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>number类型</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>数据类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>TINYINT(size)</td>\n<td>带符号-128到127 ，无符号0到255。</td>\n</tr>\n<tr>\n<td>SMALLINT(size)</td>\n<td>带符号范围-32768到32767，无符号0到65535, size 默认为 6。</td>\n</tr>\n<tr>\n<td>MEDIUMINT(size)</td>\n<td>带符号范围-8388608到8388607，无符号的范围是0到16777215。 size 默认为9</td>\n</tr>\n<tr>\n<td>INT(size)</td>\n<td>带符号范围-2147483648到2147483647，无符号的范围是0到4294967295。 size 默认为 11</td>\n</tr>\n<tr>\n<td>BIGINT(size)</td>\n<td>带符号的范围是-9223372036854775808到9223372036854775807，无符号的范围是0到18446744073709551615。size 默认为 20</td>\n</tr>\n<tr>\n<td>FLOAT(size,d)</td>\n<td>带有浮动小数点的小数字。在 size 参数中规定显示最大位数。在 d 参数中规定小数点右侧的最大位数。</td>\n</tr>\n<tr>\n<td>DOUBLE(size,d)</td>\n<td>带有浮动小数点的大数字。在 size 参数中规显示定最大位数。在 d 参数中规定小数点右侧的最大位数。</td>\n</tr>\n<tr>\n<td>DECIMAL(size,d)</td>\n<td>作为字符串存储的 DOUBLE 类型，允许固定的小数点。在 size 参数中规定显示最大位数。在 d 参数中规定小数点右侧的最大位数。</td>\n</tr>\n</tbody></table>\n<p>注意：以上的 size 代表的并不是存储在数据库中的具体的长度，如 int(4) 并不是只能存储4个长度的数字。</p>\n<p>实际上int(size)所占多少存储空间并无任何关系。int(3)、int(4)、int(8) 在磁盘上都是占用 4 btyes 的存储空间。就是在显示给用户的方式有点不同外，int(M) 跟 int 数据类型是相同的。</p>\n<p>例如：</p>\n<p>1、int的值为10 （指定zerofill）</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">int</span>（<span class=\"number\">9</span>）显示结果为<span class=\"number\">000000010</span></span><br><span class=\"line\"><span class=\"attribute\">int</span>（<span class=\"number\">3</span>）显示结果为<span class=\"number\">010</span></span><br></pre></td></tr></table></figure>\n<p>就是显示的长度不一样而已 都是占用四个字节的空间</p>\n<blockquote>\n<p>date&#x2F;time类型</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>数据类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>DATE()</td>\n<td>日期。格式：YYYY-MM-DD <strong>注释</strong>：支持的范围是从 ‘1000-01-01’ 到 ‘9999-12-31’</td>\n</tr>\n<tr>\n<td>DATETIME()</td>\n<td>*日期和时间的组合。格式：YYYY-MM-DD HH:MM:SS <strong>注释</strong>：支持的范围是从 ‘1000-01-01 00:00:00’ 到 ‘9999-12-31 23:59:59’</td>\n</tr>\n<tr>\n<td>TIMESTAMP()</td>\n<td>*时间戳。TIMESTAMP 值使用 Unix 纪元(‘1970-01-01 00:00:00’ UTC) 至今的秒数来存储。格式：YYYY-MM-DD HH:MM:SS <strong>注释</strong>：支持的范围是从 ‘1970-01-01 00:00:01’ UTC 到 ‘2038-01-09 03:14:07’ UTC</td>\n</tr>\n<tr>\n<td>TIME()</td>\n<td>时间。格式：HH:MM:SS <strong>注释</strong>：支持的范围是从 ‘-838:59:59’ 到 ‘838:59:59’</td>\n</tr>\n<tr>\n<td>YEAR()</td>\n<td>2 位或 4 位格式的年。 <strong>注释</strong>：4 位格式所允许的值：1901 到 2155。2 位格式所允许的值：70 到 69，表示从 1970 到 2069。</td>\n</tr>\n</tbody></table>\n<p>*即便 DATETIME 和 TIMESTAMP 返回相同的格式，它们的工作方式很不同。在 INSERT 或 UPDATE 查询中，TIMESTAMP 自动把自身设置为当前的日期和时间。TIMESTAMP 也接受不同的格式，比如 YYYYMMDDHHMMSS、YYMMDDHHMMSS、YYYYMMDD 或 YYMMDD。</p>\n<blockquote>\n<p><a href=\"https://www.runoob.com/sql/sql-datatypes.html\">数据类型原文</a></p>\n</blockquote>\n"},{"title":"算法设计的清明作业","date":"2024-04-06T23:56:23.000Z","_content":"## 题目\n![tm](tm.png)\n\n### 1\n```Python\ndef find_max_position(arr):\n    max_value = arr[0]\n    max_position = 0\n\n    for i in range(1, len(arr)):\n        if arr[i] > max_value:\n            max_value = arr[i]\n            max_position = i\n\n    return max_position\n\n# 示例：使用数组 [3, 5, 8, 6, 9, 1, 7]\narr = [3, 5, 8, 6, 9, 1, 7]\n\nmax_position = find_max_position(arr)\nprint(\"最大元素的位置是:\", max_position)\n```\n\n### 3\n```Python\ndef sort_negative_before_positive(arr):\n    # Step 1: Count negative elements\n    num_negatives = sum(1 for num in arr if num < 0)\n\n    # Step 2: Create a new array with the same length\n    result = [None] * len(arr)\n\n    # Step 3: Fill the new array with negative elements first, then positive ones\n    neg_index = 0\n    pos_index = num_negatives\n\n    for num in arr:\n        if num < 0:\n            result[neg_index] = num\n            neg_index += 1\n        else:\n            result[pos_index] = num\n            pos_index += 1\n\n    return result\n\n\n# Example usage:\ninput_arr = [-3, 4, -1, Ⅱ, 6, -2, 0]\nsorted_arr = sort_negative_before_positive(input_arr)\nprint(sorted_arr)\n```\n\n### 4\n```Python\ndef max_crossing_sum(arr, start, mid, end):\n    left_sum = float('-inf')\n    curr_sum = 0\n    for i in range(mid, start - 1, -1):  # Traverse from mid-1 to start\n        curr_sum += arr[i]\n        left_sum = max(left_sum, curr_sum)\n\n    right_sum = float('-inf')\n    curr_sum = 0\n    for i in range(mid + 1, end + 1):  # Traverse from mid+1 to end\n        curr_sum += arr[i]\n        right_sum = max(right_sum, curr_sum)\n\n    return left_sum + right_sum  # Return the maximum crossing sum\n\n\ndef max_subarray_sum(arr, start=0, end=None):\n    if end is None:\n        end = len(arr) - 1\n\n    if start == end:  # Base case: single element\n        return arr[start]\n\n    mid = (start + end) // 2\n    left_max = max_subarray_sum(arr, start, mid)\n    right_max = max_subarray_sum(arr, mid + 1, end)\n    cross_max = max_crossing_sum(arr, start, mid, end)\n\n    return max(left_max, right_max, cross_max)\n\n\n# Example usage:\ninput_arr = [-2, 1, -3, 4, -1, 2, 1, -5, 4]\nmax_sum = max_subarray_sum(input_arr)\nprint(max_sum)\n```\n\n### 5\n```Python\ndef find_median_of_merged_arrays(A, B):\n    # Step 2: Merge sorted arrays A and B into a list C\n    C = []\n    i = j = 0\n    while i < len(A) and j < len(B):\n        if A[i] < B[j]:\n            C.append(A[i])\n            i += 1\n        else:\n            C.append(B[j])\n            j += 1\n\n    # Step 3: Add remaining elements of the non-exhausted array\n    while i < len(A):\n        C.append(A[i])\n        i += 1\n    while j < len(B):\n        C.append(B[j])\n        j += 1\n\n    # Step 4: Compute the median of merged array C\n    length = len(C)\n    if length % 2 == 1:  # Odd length\n        median = C[length // 2]\n    else:  # Even length\n        median = (C[length // 2 - 1] + C[length // 2]) / 2\n\n    return median\n\n\n# Example usage:\nA = [1, 3, 5]\nB = [2, 4, 6]\nmedian = find_median_of_merged_arrays(A, B)\nprint(\"Median of merged arrays:\", median)\n```\n\n### 后注\n在Python中，`//` 和 `/` 这两个运算符都用于执行除法操作，但它们之间存在显著的区别：\n\n**`/` (普通除法)**:\n- `a / b` 表示浮点数除法，无论操作数 `a` 和 `b` 是整数还是浮点数，结果总是以浮点数形式返回。\n- 结果保留除法运算的小数部分，确保精度，即得到的是最精确的商。\n- 示例：`5 / 2` 返回 `2.5`，`7 / 3` 返回 `2.3333333333333335`。\n\n**`//` (地板除法、整数除法)**:\n- `a // b` 表示整数除法，也称为地板除或向下取整除法，返回除法结果的整数部分，即不保留小数，且结果始终小于或等于真实的商。\n- 如果 `a` 和 `b` 都是整数，结果也将是整数。如果其中一个或两个操作数是浮点数，结果将是浮点数，但仍然是向下取整的整数部分。\n- 示例：`5 // 2` 返回 `2`，`7 // 3` 返回 `2`。\n\n总结来说，`/` 用于计算精确的浮点数除法结果，而 `//` 用于计算除法的整数部分，向下取整。在需要得到除法结果的整数值且不需要小数部分时，通常会使用 `//` 运算符。如果需要进行比例计算、得到精确商或进行数学计算需要保留小数部分，则使用 `/` 运算符。","source":"_posts/sf4-1work.md","raw":"---\ntitle: 算法设计的清明作业\ndate: 2024-04-07 07:56:23\ntags: 作业\n---\n## 题目\n![tm](tm.png)\n\n### 1\n```Python\ndef find_max_position(arr):\n    max_value = arr[0]\n    max_position = 0\n\n    for i in range(1, len(arr)):\n        if arr[i] > max_value:\n            max_value = arr[i]\n            max_position = i\n\n    return max_position\n\n# 示例：使用数组 [3, 5, 8, 6, 9, 1, 7]\narr = [3, 5, 8, 6, 9, 1, 7]\n\nmax_position = find_max_position(arr)\nprint(\"最大元素的位置是:\", max_position)\n```\n\n### 3\n```Python\ndef sort_negative_before_positive(arr):\n    # Step 1: Count negative elements\n    num_negatives = sum(1 for num in arr if num < 0)\n\n    # Step 2: Create a new array with the same length\n    result = [None] * len(arr)\n\n    # Step 3: Fill the new array with negative elements first, then positive ones\n    neg_index = 0\n    pos_index = num_negatives\n\n    for num in arr:\n        if num < 0:\n            result[neg_index] = num\n            neg_index += 1\n        else:\n            result[pos_index] = num\n            pos_index += 1\n\n    return result\n\n\n# Example usage:\ninput_arr = [-3, 4, -1, Ⅱ, 6, -2, 0]\nsorted_arr = sort_negative_before_positive(input_arr)\nprint(sorted_arr)\n```\n\n### 4\n```Python\ndef max_crossing_sum(arr, start, mid, end):\n    left_sum = float('-inf')\n    curr_sum = 0\n    for i in range(mid, start - 1, -1):  # Traverse from mid-1 to start\n        curr_sum += arr[i]\n        left_sum = max(left_sum, curr_sum)\n\n    right_sum = float('-inf')\n    curr_sum = 0\n    for i in range(mid + 1, end + 1):  # Traverse from mid+1 to end\n        curr_sum += arr[i]\n        right_sum = max(right_sum, curr_sum)\n\n    return left_sum + right_sum  # Return the maximum crossing sum\n\n\ndef max_subarray_sum(arr, start=0, end=None):\n    if end is None:\n        end = len(arr) - 1\n\n    if start == end:  # Base case: single element\n        return arr[start]\n\n    mid = (start + end) // 2\n    left_max = max_subarray_sum(arr, start, mid)\n    right_max = max_subarray_sum(arr, mid + 1, end)\n    cross_max = max_crossing_sum(arr, start, mid, end)\n\n    return max(left_max, right_max, cross_max)\n\n\n# Example usage:\ninput_arr = [-2, 1, -3, 4, -1, 2, 1, -5, 4]\nmax_sum = max_subarray_sum(input_arr)\nprint(max_sum)\n```\n\n### 5\n```Python\ndef find_median_of_merged_arrays(A, B):\n    # Step 2: Merge sorted arrays A and B into a list C\n    C = []\n    i = j = 0\n    while i < len(A) and j < len(B):\n        if A[i] < B[j]:\n            C.append(A[i])\n            i += 1\n        else:\n            C.append(B[j])\n            j += 1\n\n    # Step 3: Add remaining elements of the non-exhausted array\n    while i < len(A):\n        C.append(A[i])\n        i += 1\n    while j < len(B):\n        C.append(B[j])\n        j += 1\n\n    # Step 4: Compute the median of merged array C\n    length = len(C)\n    if length % 2 == 1:  # Odd length\n        median = C[length // 2]\n    else:  # Even length\n        median = (C[length // 2 - 1] + C[length // 2]) / 2\n\n    return median\n\n\n# Example usage:\nA = [1, 3, 5]\nB = [2, 4, 6]\nmedian = find_median_of_merged_arrays(A, B)\nprint(\"Median of merged arrays:\", median)\n```\n\n### 后注\n在Python中，`//` 和 `/` 这两个运算符都用于执行除法操作，但它们之间存在显著的区别：\n\n**`/` (普通除法)**:\n- `a / b` 表示浮点数除法，无论操作数 `a` 和 `b` 是整数还是浮点数，结果总是以浮点数形式返回。\n- 结果保留除法运算的小数部分，确保精度，即得到的是最精确的商。\n- 示例：`5 / 2` 返回 `2.5`，`7 / 3` 返回 `2.3333333333333335`。\n\n**`//` (地板除法、整数除法)**:\n- `a // b` 表示整数除法，也称为地板除或向下取整除法，返回除法结果的整数部分，即不保留小数，且结果始终小于或等于真实的商。\n- 如果 `a` 和 `b` 都是整数，结果也将是整数。如果其中一个或两个操作数是浮点数，结果将是浮点数，但仍然是向下取整的整数部分。\n- 示例：`5 // 2` 返回 `2`，`7 // 3` 返回 `2`。\n\n总结来说，`/` 用于计算精确的浮点数除法结果，而 `//` 用于计算除法的整数部分，向下取整。在需要得到除法结果的整数值且不需要小数部分时，通常会使用 `//` 运算符。如果需要进行比例计算、得到精确商或进行数学计算需要保留小数部分，则使用 `/` 运算符。","slug":"sf4-1work","published":1,"updated":"2024-04-07T02:30:21.708Z","_id":"cluorolsc0000u8ckbuy25ikx","comments":1,"layout":"post","photos":[],"content":"<h2 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h2><p><img src=\"/2024/04/07/sf4-1work/tm.png\" alt=\"tm\"></p>\n<h3 id=\"1\"><a href=\"#1\" class=\"headerlink\" title=\"1\"></a>1</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">find_max_position</span>(<span class=\"params\">arr</span>):</span><br><span class=\"line\">    max_value = arr[<span class=\"number\">0</span>]</span><br><span class=\"line\">    max_position = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"built_in\">len</span>(arr)):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> arr[i] &gt; max_value:</span><br><span class=\"line\">            max_value = arr[i]</span><br><span class=\"line\">            max_position = i</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> max_position</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 示例：使用数组 [3, 5, 8, 6, 9, 1, 7]</span></span><br><span class=\"line\">arr = [<span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">8</span>, <span class=\"number\">6</span>, <span class=\"number\">9</span>, <span class=\"number\">1</span>, <span class=\"number\">7</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">max_position = find_max_position(arr)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;最大元素的位置是:&quot;</span>, max_position)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3\"><a href=\"#3\" class=\"headerlink\" title=\"3\"></a>3</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">sort_negative_before_positive</span>(<span class=\"params\">arr</span>):</span><br><span class=\"line\">    <span class=\"comment\"># Step 1: Count negative elements</span></span><br><span class=\"line\">    num_negatives = <span class=\"built_in\">sum</span>(<span class=\"number\">1</span> <span class=\"keyword\">for</span> num <span class=\"keyword\">in</span> arr <span class=\"keyword\">if</span> num &lt; <span class=\"number\">0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># Step 2: Create a new array with the same length</span></span><br><span class=\"line\">    result = [<span class=\"literal\">None</span>] * <span class=\"built_in\">len</span>(arr)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># Step 3: Fill the new array with negative elements first, then positive ones</span></span><br><span class=\"line\">    neg_index = <span class=\"number\">0</span></span><br><span class=\"line\">    pos_index = num_negatives</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> num <span class=\"keyword\">in</span> arr:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> num &lt; <span class=\"number\">0</span>:</span><br><span class=\"line\">            result[neg_index] = num</span><br><span class=\"line\">            neg_index += <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            result[pos_index] = num</span><br><span class=\"line\">            pos_index += <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> result</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Example usage:</span></span><br><span class=\"line\">input_arr = [-<span class=\"number\">3</span>, <span class=\"number\">4</span>, -<span class=\"number\">1</span>, Ⅱ, <span class=\"number\">6</span>, -<span class=\"number\">2</span>, <span class=\"number\">0</span>]</span><br><span class=\"line\">sorted_arr = sort_negative_before_positive(input_arr)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(sorted_arr)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4\"><a href=\"#4\" class=\"headerlink\" title=\"4\"></a>4</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">max_crossing_sum</span>(<span class=\"params\">arr, start, mid, end</span>):</span><br><span class=\"line\">    left_sum = <span class=\"built_in\">float</span>(<span class=\"string\">&#x27;-inf&#x27;</span>)</span><br><span class=\"line\">    curr_sum = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(mid, start - <span class=\"number\">1</span>, -<span class=\"number\">1</span>):  <span class=\"comment\"># Traverse from mid-1 to start</span></span><br><span class=\"line\">        curr_sum += arr[i]</span><br><span class=\"line\">        left_sum = <span class=\"built_in\">max</span>(left_sum, curr_sum)</span><br><span class=\"line\"></span><br><span class=\"line\">    right_sum = <span class=\"built_in\">float</span>(<span class=\"string\">&#x27;-inf&#x27;</span>)</span><br><span class=\"line\">    curr_sum = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(mid + <span class=\"number\">1</span>, end + <span class=\"number\">1</span>):  <span class=\"comment\"># Traverse from mid+1 to end</span></span><br><span class=\"line\">        curr_sum += arr[i]</span><br><span class=\"line\">        right_sum = <span class=\"built_in\">max</span>(right_sum, curr_sum)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> left_sum + right_sum  <span class=\"comment\"># Return the maximum crossing sum</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">max_subarray_sum</span>(<span class=\"params\">arr, start=<span class=\"number\">0</span>, end=<span class=\"literal\">None</span></span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> end <span class=\"keyword\">is</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">        end = <span class=\"built_in\">len</span>(arr) - <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> start == end:  <span class=\"comment\"># Base case: single element</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> arr[start]</span><br><span class=\"line\"></span><br><span class=\"line\">    mid = (start + end) // <span class=\"number\">2</span></span><br><span class=\"line\">    left_max = max_subarray_sum(arr, start, mid)</span><br><span class=\"line\">    right_max = max_subarray_sum(arr, mid + <span class=\"number\">1</span>, end)</span><br><span class=\"line\">    cross_max = max_crossing_sum(arr, start, mid, end)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">max</span>(left_max, right_max, cross_max)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Example usage:</span></span><br><span class=\"line\">input_arr = [-<span class=\"number\">2</span>, <span class=\"number\">1</span>, -<span class=\"number\">3</span>, <span class=\"number\">4</span>, -<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>, -<span class=\"number\">5</span>, <span class=\"number\">4</span>]</span><br><span class=\"line\">max_sum = max_subarray_sum(input_arr)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(max_sum)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5\"><a href=\"#5\" class=\"headerlink\" title=\"5\"></a>5</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">find_median_of_merged_arrays</span>(<span class=\"params\">A, B</span>):</span><br><span class=\"line\">    <span class=\"comment\"># Step 2: Merge sorted arrays A and B into a list C</span></span><br><span class=\"line\">    C = []</span><br><span class=\"line\">    i = j = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> i &lt; <span class=\"built_in\">len</span>(A) <span class=\"keyword\">and</span> j &lt; <span class=\"built_in\">len</span>(B):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> A[i] &lt; B[j]:</span><br><span class=\"line\">            C.append(A[i])</span><br><span class=\"line\">            i += <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            C.append(B[j])</span><br><span class=\"line\">            j += <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># Step 3: Add remaining elements of the non-exhausted array</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> i &lt; <span class=\"built_in\">len</span>(A):</span><br><span class=\"line\">        C.append(A[i])</span><br><span class=\"line\">        i += <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> j &lt; <span class=\"built_in\">len</span>(B):</span><br><span class=\"line\">        C.append(B[j])</span><br><span class=\"line\">        j += <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># Step 4: Compute the median of merged array C</span></span><br><span class=\"line\">    length = <span class=\"built_in\">len</span>(C)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> length % <span class=\"number\">2</span> == <span class=\"number\">1</span>:  <span class=\"comment\"># Odd length</span></span><br><span class=\"line\">        median = C[length // <span class=\"number\">2</span>]</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:  <span class=\"comment\"># Even length</span></span><br><span class=\"line\">        median = (C[length // <span class=\"number\">2</span> - <span class=\"number\">1</span>] + C[length // <span class=\"number\">2</span>]) / <span class=\"number\">2</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> median</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Example usage:</span></span><br><span class=\"line\">A = [<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>]</span><br><span class=\"line\">B = [<span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">6</span>]</span><br><span class=\"line\">median = find_median_of_merged_arrays(A, B)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;Median of merged arrays:&quot;</span>, median)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"后注\"><a href=\"#后注\" class=\"headerlink\" title=\"后注\"></a>后注</h3><p>在Python中，<code>//</code> 和 <code>/</code> 这两个运算符都用于执行除法操作，但它们之间存在显著的区别：</p>\n<p><strong><code>/</code> (普通除法)</strong>:</p>\n<ul>\n<li><code>a / b</code> 表示浮点数除法，无论操作数 <code>a</code> 和 <code>b</code> 是整数还是浮点数，结果总是以浮点数形式返回。</li>\n<li>结果保留除法运算的小数部分，确保精度，即得到的是最精确的商。</li>\n<li>示例：<code>5 / 2</code> 返回 <code>2.5</code>，<code>7 / 3</code> 返回 <code>2.3333333333333335</code>。</li>\n</ul>\n<p><strong><code>//</code> (地板除法、整数除法)</strong>:</p>\n<ul>\n<li><code>a // b</code> 表示整数除法，也称为地板除或向下取整除法，返回除法结果的整数部分，即不保留小数，且结果始终小于或等于真实的商。</li>\n<li>如果 <code>a</code> 和 <code>b</code> 都是整数，结果也将是整数。如果其中一个或两个操作数是浮点数，结果将是浮点数，但仍然是向下取整的整数部分。</li>\n<li>示例：<code>5 // 2</code> 返回 <code>2</code>，<code>7 // 3</code> 返回 <code>2</code>。</li>\n</ul>\n<p>总结来说，<code>/</code> 用于计算精确的浮点数除法结果，而 <code>//</code> 用于计算除法的整数部分，向下取整。在需要得到除法结果的整数值且不需要小数部分时，通常会使用 <code>//</code> 运算符。如果需要进行比例计算、得到精确商或进行数学计算需要保留小数部分，则使用 <code>/</code> 运算符。</p>\n","excerpt":"","more":"<h2 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h2><p><img src=\"/2024/04/07/sf4-1work/tm.png\" alt=\"tm\"></p>\n<h3 id=\"1\"><a href=\"#1\" class=\"headerlink\" title=\"1\"></a>1</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">find_max_position</span>(<span class=\"params\">arr</span>):</span><br><span class=\"line\">    max_value = arr[<span class=\"number\">0</span>]</span><br><span class=\"line\">    max_position = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"built_in\">len</span>(arr)):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> arr[i] &gt; max_value:</span><br><span class=\"line\">            max_value = arr[i]</span><br><span class=\"line\">            max_position = i</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> max_position</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 示例：使用数组 [3, 5, 8, 6, 9, 1, 7]</span></span><br><span class=\"line\">arr = [<span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">8</span>, <span class=\"number\">6</span>, <span class=\"number\">9</span>, <span class=\"number\">1</span>, <span class=\"number\">7</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">max_position = find_max_position(arr)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;最大元素的位置是:&quot;</span>, max_position)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3\"><a href=\"#3\" class=\"headerlink\" title=\"3\"></a>3</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">sort_negative_before_positive</span>(<span class=\"params\">arr</span>):</span><br><span class=\"line\">    <span class=\"comment\"># Step 1: Count negative elements</span></span><br><span class=\"line\">    num_negatives = <span class=\"built_in\">sum</span>(<span class=\"number\">1</span> <span class=\"keyword\">for</span> num <span class=\"keyword\">in</span> arr <span class=\"keyword\">if</span> num &lt; <span class=\"number\">0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># Step 2: Create a new array with the same length</span></span><br><span class=\"line\">    result = [<span class=\"literal\">None</span>] * <span class=\"built_in\">len</span>(arr)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># Step 3: Fill the new array with negative elements first, then positive ones</span></span><br><span class=\"line\">    neg_index = <span class=\"number\">0</span></span><br><span class=\"line\">    pos_index = num_negatives</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> num <span class=\"keyword\">in</span> arr:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> num &lt; <span class=\"number\">0</span>:</span><br><span class=\"line\">            result[neg_index] = num</span><br><span class=\"line\">            neg_index += <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            result[pos_index] = num</span><br><span class=\"line\">            pos_index += <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> result</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Example usage:</span></span><br><span class=\"line\">input_arr = [-<span class=\"number\">3</span>, <span class=\"number\">4</span>, -<span class=\"number\">1</span>, Ⅱ, <span class=\"number\">6</span>, -<span class=\"number\">2</span>, <span class=\"number\">0</span>]</span><br><span class=\"line\">sorted_arr = sort_negative_before_positive(input_arr)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(sorted_arr)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4\"><a href=\"#4\" class=\"headerlink\" title=\"4\"></a>4</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">max_crossing_sum</span>(<span class=\"params\">arr, start, mid, end</span>):</span><br><span class=\"line\">    left_sum = <span class=\"built_in\">float</span>(<span class=\"string\">&#x27;-inf&#x27;</span>)</span><br><span class=\"line\">    curr_sum = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(mid, start - <span class=\"number\">1</span>, -<span class=\"number\">1</span>):  <span class=\"comment\"># Traverse from mid-1 to start</span></span><br><span class=\"line\">        curr_sum += arr[i]</span><br><span class=\"line\">        left_sum = <span class=\"built_in\">max</span>(left_sum, curr_sum)</span><br><span class=\"line\"></span><br><span class=\"line\">    right_sum = <span class=\"built_in\">float</span>(<span class=\"string\">&#x27;-inf&#x27;</span>)</span><br><span class=\"line\">    curr_sum = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(mid + <span class=\"number\">1</span>, end + <span class=\"number\">1</span>):  <span class=\"comment\"># Traverse from mid+1 to end</span></span><br><span class=\"line\">        curr_sum += arr[i]</span><br><span class=\"line\">        right_sum = <span class=\"built_in\">max</span>(right_sum, curr_sum)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> left_sum + right_sum  <span class=\"comment\"># Return the maximum crossing sum</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">max_subarray_sum</span>(<span class=\"params\">arr, start=<span class=\"number\">0</span>, end=<span class=\"literal\">None</span></span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> end <span class=\"keyword\">is</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">        end = <span class=\"built_in\">len</span>(arr) - <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> start == end:  <span class=\"comment\"># Base case: single element</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> arr[start]</span><br><span class=\"line\"></span><br><span class=\"line\">    mid = (start + end) // <span class=\"number\">2</span></span><br><span class=\"line\">    left_max = max_subarray_sum(arr, start, mid)</span><br><span class=\"line\">    right_max = max_subarray_sum(arr, mid + <span class=\"number\">1</span>, end)</span><br><span class=\"line\">    cross_max = max_crossing_sum(arr, start, mid, end)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">max</span>(left_max, right_max, cross_max)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Example usage:</span></span><br><span class=\"line\">input_arr = [-<span class=\"number\">2</span>, <span class=\"number\">1</span>, -<span class=\"number\">3</span>, <span class=\"number\">4</span>, -<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>, -<span class=\"number\">5</span>, <span class=\"number\">4</span>]</span><br><span class=\"line\">max_sum = max_subarray_sum(input_arr)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(max_sum)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5\"><a href=\"#5\" class=\"headerlink\" title=\"5\"></a>5</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">find_median_of_merged_arrays</span>(<span class=\"params\">A, B</span>):</span><br><span class=\"line\">    <span class=\"comment\"># Step 2: Merge sorted arrays A and B into a list C</span></span><br><span class=\"line\">    C = []</span><br><span class=\"line\">    i = j = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> i &lt; <span class=\"built_in\">len</span>(A) <span class=\"keyword\">and</span> j &lt; <span class=\"built_in\">len</span>(B):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> A[i] &lt; B[j]:</span><br><span class=\"line\">            C.append(A[i])</span><br><span class=\"line\">            i += <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            C.append(B[j])</span><br><span class=\"line\">            j += <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># Step 3: Add remaining elements of the non-exhausted array</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> i &lt; <span class=\"built_in\">len</span>(A):</span><br><span class=\"line\">        C.append(A[i])</span><br><span class=\"line\">        i += <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> j &lt; <span class=\"built_in\">len</span>(B):</span><br><span class=\"line\">        C.append(B[j])</span><br><span class=\"line\">        j += <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># Step 4: Compute the median of merged array C</span></span><br><span class=\"line\">    length = <span class=\"built_in\">len</span>(C)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> length % <span class=\"number\">2</span> == <span class=\"number\">1</span>:  <span class=\"comment\"># Odd length</span></span><br><span class=\"line\">        median = C[length // <span class=\"number\">2</span>]</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:  <span class=\"comment\"># Even length</span></span><br><span class=\"line\">        median = (C[length // <span class=\"number\">2</span> - <span class=\"number\">1</span>] + C[length // <span class=\"number\">2</span>]) / <span class=\"number\">2</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> median</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Example usage:</span></span><br><span class=\"line\">A = [<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>]</span><br><span class=\"line\">B = [<span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">6</span>]</span><br><span class=\"line\">median = find_median_of_merged_arrays(A, B)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;Median of merged arrays:&quot;</span>, median)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"后注\"><a href=\"#后注\" class=\"headerlink\" title=\"后注\"></a>后注</h3><p>在Python中，<code>//</code> 和 <code>/</code> 这两个运算符都用于执行除法操作，但它们之间存在显著的区别：</p>\n<p><strong><code>/</code> (普通除法)</strong>:</p>\n<ul>\n<li><code>a / b</code> 表示浮点数除法，无论操作数 <code>a</code> 和 <code>b</code> 是整数还是浮点数，结果总是以浮点数形式返回。</li>\n<li>结果保留除法运算的小数部分，确保精度，即得到的是最精确的商。</li>\n<li>示例：<code>5 / 2</code> 返回 <code>2.5</code>，<code>7 / 3</code> 返回 <code>2.3333333333333335</code>。</li>\n</ul>\n<p><strong><code>//</code> (地板除法、整数除法)</strong>:</p>\n<ul>\n<li><code>a // b</code> 表示整数除法，也称为地板除或向下取整除法，返回除法结果的整数部分，即不保留小数，且结果始终小于或等于真实的商。</li>\n<li>如果 <code>a</code> 和 <code>b</code> 都是整数，结果也将是整数。如果其中一个或两个操作数是浮点数，结果将是浮点数，但仍然是向下取整的整数部分。</li>\n<li>示例：<code>5 // 2</code> 返回 <code>2</code>，<code>7 // 3</code> 返回 <code>2</code>。</li>\n</ul>\n<p>总结来说，<code>/</code> 用于计算精确的浮点数除法结果，而 <code>//</code> 用于计算除法的整数部分，向下取整。在需要得到除法结果的整数值且不需要小数部分时，通常会使用 <code>//</code> 运算符。如果需要进行比例计算、得到精确商或进行数学计算需要保留小数部分，则使用 <code>/</code> 运算符。</p>\n"},{"title":"数据库4-11作业","date":"2024-04-11T06:09:45.000Z","_content":"创建数据库\n```SQL\nCREATE DATABASE Students;\n```\n3.创建表\n```SQL\nCREATE TABLE Student (\n    Sno Char(7) PRIMARY KEY,\n\tSname NCHAR(5) NOT NULL,\n\tSsex NCHAR(1) DEFAULT '男',\n\tSage TINYINT CHECK(Sage>=15 AND Sage<=45),\n\tSdept NVARCHAR(20)\n);\n\nCREATE TABLE Course (\n    Cno Char(6) PRIMARY KEY,\n\tCname NVARCHAR(20) NOT NULL,\n\tCredit TINYINT,\n\tSemster TINYINT\n);\n\nCREATE TABLE SC (\n    Sno Char(7) NOT NULL,\n\tCno Char(6) NOT NULL,\n\tGrade TINYINT,\n\tPRIMARY KEY(Sno,Cno),\n\tFOREIGN KEY(Sno)REFERENCES student(Sno),\n\tFOREIGN KEY(Cno)REFERENCES course(Cno)\n);\n```\n4.修改表结构\n```SQl\nALTER TABLE student\nADD COLUMN spec char(8);\n\nALTER TABLE student\nMODIFY COLUMN spec nchar(8);\n\nALTER TABLE student\nADD CHECK(Sdept IN('计算机系','信息管理系','通信工程系'));\n\nALTER TABLE sc\nADD CHECK(Grade>=0 AND Grade <=100);\n\nALTER TABLE student\nDROP COLUMN spec;\n```\n插入数据\n```SQL\nINSERT INTO student (Sno,Sname,Ssex,Sage,Sdept) VALUES\n('0611101','李勇','男',21,'计算机系'),\n('0611102','刘晨','男',20,'计算机系'),\n('0611103','王敏','女',20,'计算机系'),\n('0611104','张小红','女',19,'计算机系'),\n('0621101','张立','男',20,'信息管理系'),\n('0621102','吴宾','女',19,'信息管理系'),\n('0621103','张海','男',20,'信息管理系'),\n('0631101','钱小平','女',21,'通信工程系'),\n('0631102','王大力','男',20,'通信工程系'),\n('0631103','张姗姗','女',19,'通信工程系');\n\nINSERT INTO course (Cno,Cname,Credit,Semster) VALUES\n('C001','高等数学',4,1),\n('C002','大学英语',3,1),\n('C003','大学英语',3,2),\n('C004','计算机文化',2,2),\n('C005','VB',2,3),\n('C006','数据库基础',4,5),\n('C007','数据结构',4,4),\n('C008','计算机网络',4,4);\n\nINSERT INTO sc (Sno,Cno,Grade) VALUES\n('0611101','C001',96),\n('0611101','C002',80),\n('0611101','C003',84),\n('0611101','C005',62),\n('0611102','C001',92),\n('0611102','C002',90),\n('0611102','C004',84),\n('0621102','C001',76),\n('0621102','C004',85),\n('0621102','C005',73),\n('0621102','C007',null),\n('0621103','C001',50),\n('0621103','C004',80),\n('0631101','C001',50),\n('0631101','C004',80),\n('0631102','C007',NULL),\n('0631103','C004',78),\n('0631103','C005',65),\n('0631103','C007',NULL);\n\n```","source":"_posts/sql4-11.md","raw":"---\ntitle: 数据库4-11作业\ndate: 2024-04-11 14:09:45\ntags: 笔记\n---\n创建数据库\n```SQL\nCREATE DATABASE Students;\n```\n3.创建表\n```SQL\nCREATE TABLE Student (\n    Sno Char(7) PRIMARY KEY,\n\tSname NCHAR(5) NOT NULL,\n\tSsex NCHAR(1) DEFAULT '男',\n\tSage TINYINT CHECK(Sage>=15 AND Sage<=45),\n\tSdept NVARCHAR(20)\n);\n\nCREATE TABLE Course (\n    Cno Char(6) PRIMARY KEY,\n\tCname NVARCHAR(20) NOT NULL,\n\tCredit TINYINT,\n\tSemster TINYINT\n);\n\nCREATE TABLE SC (\n    Sno Char(7) NOT NULL,\n\tCno Char(6) NOT NULL,\n\tGrade TINYINT,\n\tPRIMARY KEY(Sno,Cno),\n\tFOREIGN KEY(Sno)REFERENCES student(Sno),\n\tFOREIGN KEY(Cno)REFERENCES course(Cno)\n);\n```\n4.修改表结构\n```SQl\nALTER TABLE student\nADD COLUMN spec char(8);\n\nALTER TABLE student\nMODIFY COLUMN spec nchar(8);\n\nALTER TABLE student\nADD CHECK(Sdept IN('计算机系','信息管理系','通信工程系'));\n\nALTER TABLE sc\nADD CHECK(Grade>=0 AND Grade <=100);\n\nALTER TABLE student\nDROP COLUMN spec;\n```\n插入数据\n```SQL\nINSERT INTO student (Sno,Sname,Ssex,Sage,Sdept) VALUES\n('0611101','李勇','男',21,'计算机系'),\n('0611102','刘晨','男',20,'计算机系'),\n('0611103','王敏','女',20,'计算机系'),\n('0611104','张小红','女',19,'计算机系'),\n('0621101','张立','男',20,'信息管理系'),\n('0621102','吴宾','女',19,'信息管理系'),\n('0621103','张海','男',20,'信息管理系'),\n('0631101','钱小平','女',21,'通信工程系'),\n('0631102','王大力','男',20,'通信工程系'),\n('0631103','张姗姗','女',19,'通信工程系');\n\nINSERT INTO course (Cno,Cname,Credit,Semster) VALUES\n('C001','高等数学',4,1),\n('C002','大学英语',3,1),\n('C003','大学英语',3,2),\n('C004','计算机文化',2,2),\n('C005','VB',2,3),\n('C006','数据库基础',4,5),\n('C007','数据结构',4,4),\n('C008','计算机网络',4,4);\n\nINSERT INTO sc (Sno,Cno,Grade) VALUES\n('0611101','C001',96),\n('0611101','C002',80),\n('0611101','C003',84),\n('0611101','C005',62),\n('0611102','C001',92),\n('0611102','C002',90),\n('0611102','C004',84),\n('0621102','C001',76),\n('0621102','C004',85),\n('0621102','C005',73),\n('0621102','C007',null),\n('0621103','C001',50),\n('0621103','C004',80),\n('0631101','C001',50),\n('0631101','C004',80),\n('0631102','C007',NULL),\n('0631103','C004',78),\n('0631103','C005',65),\n('0631103','C007',NULL);\n\n```","slug":"sql4-11","published":1,"updated":"2024-04-11T09:45:13.710Z","_id":"cluuy2wzc00001sckeqmy144f","comments":1,"layout":"post","photos":[],"content":"<p>创建数据库</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> DATABASE Students;</span><br></pre></td></tr></table></figure>\n<p>3.创建表</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> Student (</span><br><span class=\"line\">    Sno <span class=\"type\">Char</span>(<span class=\"number\">7</span>) <span class=\"keyword\">PRIMARY</span> KEY,</span><br><span class=\"line\">\tSname <span class=\"type\">NCHAR</span>(<span class=\"number\">5</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">\tSsex <span class=\"type\">NCHAR</span>(<span class=\"number\">1</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"string\">&#x27;男&#x27;</span>,</span><br><span class=\"line\">\tSage TINYINT <span class=\"keyword\">CHECK</span>(Sage<span class=\"operator\">&gt;=</span><span class=\"number\">15</span> <span class=\"keyword\">AND</span> Sage<span class=\"operator\">&lt;=</span><span class=\"number\">45</span>),</span><br><span class=\"line\">\tSdept NVARCHAR(<span class=\"number\">20</span>)</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> Course (</span><br><span class=\"line\">    Cno <span class=\"type\">Char</span>(<span class=\"number\">6</span>) <span class=\"keyword\">PRIMARY</span> KEY,</span><br><span class=\"line\">\tCname NVARCHAR(<span class=\"number\">20</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">\tCredit TINYINT,</span><br><span class=\"line\">\tSemster TINYINT</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> SC (</span><br><span class=\"line\">    Sno <span class=\"type\">Char</span>(<span class=\"number\">7</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">\tCno <span class=\"type\">Char</span>(<span class=\"number\">6</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">\tGrade TINYINT,</span><br><span class=\"line\">\t<span class=\"keyword\">PRIMARY</span> KEY(Sno,Cno),</span><br><span class=\"line\">\t<span class=\"keyword\">FOREIGN</span> KEY(Sno)<span class=\"keyword\">REFERENCES</span> student(Sno),</span><br><span class=\"line\">\t<span class=\"keyword\">FOREIGN</span> KEY(Cno)<span class=\"keyword\">REFERENCES</span> course(Cno)</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n<p>4.修改表结构</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> student</span><br><span class=\"line\"><span class=\"keyword\">ADD</span> <span class=\"keyword\">COLUMN</span> spec <span class=\"type\">char</span>(<span class=\"number\">8</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> student</span><br><span class=\"line\">MODIFY <span class=\"keyword\">COLUMN</span> spec <span class=\"type\">nchar</span>(<span class=\"number\">8</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> student</span><br><span class=\"line\"><span class=\"keyword\">ADD</span> <span class=\"keyword\">CHECK</span>(Sdept <span class=\"keyword\">IN</span>(<span class=\"string\">&#x27;计算机系&#x27;</span>,<span class=\"string\">&#x27;信息管理系&#x27;</span>,<span class=\"string\">&#x27;通信工程系&#x27;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> sc</span><br><span class=\"line\"><span class=\"keyword\">ADD</span> <span class=\"keyword\">CHECK</span>(Grade<span class=\"operator\">&gt;=</span><span class=\"number\">0</span> <span class=\"keyword\">AND</span> Grade <span class=\"operator\">&lt;=</span><span class=\"number\">100</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> student</span><br><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">COLUMN</span> spec;</span><br></pre></td></tr></table></figure>\n<p>插入数据</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> student (Sno,Sname,Ssex,Sage,Sdept) <span class=\"keyword\">VALUES</span></span><br><span class=\"line\">(<span class=\"string\">&#x27;0611101&#x27;</span>,<span class=\"string\">&#x27;李勇&#x27;</span>,<span class=\"string\">&#x27;男&#x27;</span>,<span class=\"number\">21</span>,<span class=\"string\">&#x27;计算机系&#x27;</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;0611102&#x27;</span>,<span class=\"string\">&#x27;刘晨&#x27;</span>,<span class=\"string\">&#x27;男&#x27;</span>,<span class=\"number\">20</span>,<span class=\"string\">&#x27;计算机系&#x27;</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;0611103&#x27;</span>,<span class=\"string\">&#x27;王敏&#x27;</span>,<span class=\"string\">&#x27;女&#x27;</span>,<span class=\"number\">20</span>,<span class=\"string\">&#x27;计算机系&#x27;</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;0611104&#x27;</span>,<span class=\"string\">&#x27;张小红&#x27;</span>,<span class=\"string\">&#x27;女&#x27;</span>,<span class=\"number\">19</span>,<span class=\"string\">&#x27;计算机系&#x27;</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;0621101&#x27;</span>,<span class=\"string\">&#x27;张立&#x27;</span>,<span class=\"string\">&#x27;男&#x27;</span>,<span class=\"number\">20</span>,<span class=\"string\">&#x27;信息管理系&#x27;</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;0621102&#x27;</span>,<span class=\"string\">&#x27;吴宾&#x27;</span>,<span class=\"string\">&#x27;女&#x27;</span>,<span class=\"number\">19</span>,<span class=\"string\">&#x27;信息管理系&#x27;</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;0621103&#x27;</span>,<span class=\"string\">&#x27;张海&#x27;</span>,<span class=\"string\">&#x27;男&#x27;</span>,<span class=\"number\">20</span>,<span class=\"string\">&#x27;信息管理系&#x27;</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;0631101&#x27;</span>,<span class=\"string\">&#x27;钱小平&#x27;</span>,<span class=\"string\">&#x27;女&#x27;</span>,<span class=\"number\">21</span>,<span class=\"string\">&#x27;通信工程系&#x27;</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;0631102&#x27;</span>,<span class=\"string\">&#x27;王大力&#x27;</span>,<span class=\"string\">&#x27;男&#x27;</span>,<span class=\"number\">20</span>,<span class=\"string\">&#x27;通信工程系&#x27;</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;0631103&#x27;</span>,<span class=\"string\">&#x27;张姗姗&#x27;</span>,<span class=\"string\">&#x27;女&#x27;</span>,<span class=\"number\">19</span>,<span class=\"string\">&#x27;通信工程系&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> course (Cno,Cname,Credit,Semster) <span class=\"keyword\">VALUES</span></span><br><span class=\"line\">(<span class=\"string\">&#x27;C001&#x27;</span>,<span class=\"string\">&#x27;高等数学&#x27;</span>,<span class=\"number\">4</span>,<span class=\"number\">1</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;C002&#x27;</span>,<span class=\"string\">&#x27;大学英语&#x27;</span>,<span class=\"number\">3</span>,<span class=\"number\">1</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;C003&#x27;</span>,<span class=\"string\">&#x27;大学英语&#x27;</span>,<span class=\"number\">3</span>,<span class=\"number\">2</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;C004&#x27;</span>,<span class=\"string\">&#x27;计算机文化&#x27;</span>,<span class=\"number\">2</span>,<span class=\"number\">2</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;C005&#x27;</span>,<span class=\"string\">&#x27;VB&#x27;</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;C006&#x27;</span>,<span class=\"string\">&#x27;数据库基础&#x27;</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;C007&#x27;</span>,<span class=\"string\">&#x27;数据结构&#x27;</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;C008&#x27;</span>,<span class=\"string\">&#x27;计算机网络&#x27;</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> sc (Sno,Cno,Grade) <span class=\"keyword\">VALUES</span></span><br><span class=\"line\">(<span class=\"string\">&#x27;0611101&#x27;</span>,<span class=\"string\">&#x27;C001&#x27;</span>,<span class=\"number\">96</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;0611101&#x27;</span>,<span class=\"string\">&#x27;C002&#x27;</span>,<span class=\"number\">80</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;0611101&#x27;</span>,<span class=\"string\">&#x27;C003&#x27;</span>,<span class=\"number\">84</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;0611101&#x27;</span>,<span class=\"string\">&#x27;C005&#x27;</span>,<span class=\"number\">62</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;0611102&#x27;</span>,<span class=\"string\">&#x27;C001&#x27;</span>,<span class=\"number\">92</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;0611102&#x27;</span>,<span class=\"string\">&#x27;C002&#x27;</span>,<span class=\"number\">90</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;0611102&#x27;</span>,<span class=\"string\">&#x27;C004&#x27;</span>,<span class=\"number\">84</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;0621102&#x27;</span>,<span class=\"string\">&#x27;C001&#x27;</span>,<span class=\"number\">76</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;0621102&#x27;</span>,<span class=\"string\">&#x27;C004&#x27;</span>,<span class=\"number\">85</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;0621102&#x27;</span>,<span class=\"string\">&#x27;C005&#x27;</span>,<span class=\"number\">73</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;0621102&#x27;</span>,<span class=\"string\">&#x27;C007&#x27;</span>,<span class=\"keyword\">null</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;0621103&#x27;</span>,<span class=\"string\">&#x27;C001&#x27;</span>,<span class=\"number\">50</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;0621103&#x27;</span>,<span class=\"string\">&#x27;C004&#x27;</span>,<span class=\"number\">80</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;0631101&#x27;</span>,<span class=\"string\">&#x27;C001&#x27;</span>,<span class=\"number\">50</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;0631101&#x27;</span>,<span class=\"string\">&#x27;C004&#x27;</span>,<span class=\"number\">80</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;0631102&#x27;</span>,<span class=\"string\">&#x27;C007&#x27;</span>,<span class=\"keyword\">NULL</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;0631103&#x27;</span>,<span class=\"string\">&#x27;C004&#x27;</span>,<span class=\"number\">78</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;0631103&#x27;</span>,<span class=\"string\">&#x27;C005&#x27;</span>,<span class=\"number\">65</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;0631103&#x27;</span>,<span class=\"string\">&#x27;C007&#x27;</span>,<span class=\"keyword\">NULL</span>);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","excerpt":"","more":"<p>创建数据库</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> DATABASE Students;</span><br></pre></td></tr></table></figure>\n<p>3.创建表</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> Student (</span><br><span class=\"line\">    Sno <span class=\"type\">Char</span>(<span class=\"number\">7</span>) <span class=\"keyword\">PRIMARY</span> KEY,</span><br><span class=\"line\">\tSname <span class=\"type\">NCHAR</span>(<span class=\"number\">5</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">\tSsex <span class=\"type\">NCHAR</span>(<span class=\"number\">1</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"string\">&#x27;男&#x27;</span>,</span><br><span class=\"line\">\tSage TINYINT <span class=\"keyword\">CHECK</span>(Sage<span class=\"operator\">&gt;=</span><span class=\"number\">15</span> <span class=\"keyword\">AND</span> Sage<span class=\"operator\">&lt;=</span><span class=\"number\">45</span>),</span><br><span class=\"line\">\tSdept NVARCHAR(<span class=\"number\">20</span>)</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> Course (</span><br><span class=\"line\">    Cno <span class=\"type\">Char</span>(<span class=\"number\">6</span>) <span class=\"keyword\">PRIMARY</span> KEY,</span><br><span class=\"line\">\tCname NVARCHAR(<span class=\"number\">20</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">\tCredit TINYINT,</span><br><span class=\"line\">\tSemster TINYINT</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> SC (</span><br><span class=\"line\">    Sno <span class=\"type\">Char</span>(<span class=\"number\">7</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">\tCno <span class=\"type\">Char</span>(<span class=\"number\">6</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">\tGrade TINYINT,</span><br><span class=\"line\">\t<span class=\"keyword\">PRIMARY</span> KEY(Sno,Cno),</span><br><span class=\"line\">\t<span class=\"keyword\">FOREIGN</span> KEY(Sno)<span class=\"keyword\">REFERENCES</span> student(Sno),</span><br><span class=\"line\">\t<span class=\"keyword\">FOREIGN</span> KEY(Cno)<span class=\"keyword\">REFERENCES</span> course(Cno)</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n<p>4.修改表结构</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> student</span><br><span class=\"line\"><span class=\"keyword\">ADD</span> <span class=\"keyword\">COLUMN</span> spec <span class=\"type\">char</span>(<span class=\"number\">8</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> student</span><br><span class=\"line\">MODIFY <span class=\"keyword\">COLUMN</span> spec <span class=\"type\">nchar</span>(<span class=\"number\">8</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> student</span><br><span class=\"line\"><span class=\"keyword\">ADD</span> <span class=\"keyword\">CHECK</span>(Sdept <span class=\"keyword\">IN</span>(<span class=\"string\">&#x27;计算机系&#x27;</span>,<span class=\"string\">&#x27;信息管理系&#x27;</span>,<span class=\"string\">&#x27;通信工程系&#x27;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> sc</span><br><span class=\"line\"><span class=\"keyword\">ADD</span> <span class=\"keyword\">CHECK</span>(Grade<span class=\"operator\">&gt;=</span><span class=\"number\">0</span> <span class=\"keyword\">AND</span> Grade <span class=\"operator\">&lt;=</span><span class=\"number\">100</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> student</span><br><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">COLUMN</span> spec;</span><br></pre></td></tr></table></figure>\n<p>插入数据</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> student (Sno,Sname,Ssex,Sage,Sdept) <span class=\"keyword\">VALUES</span></span><br><span class=\"line\">(<span class=\"string\">&#x27;0611101&#x27;</span>,<span class=\"string\">&#x27;李勇&#x27;</span>,<span class=\"string\">&#x27;男&#x27;</span>,<span class=\"number\">21</span>,<span class=\"string\">&#x27;计算机系&#x27;</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;0611102&#x27;</span>,<span class=\"string\">&#x27;刘晨&#x27;</span>,<span class=\"string\">&#x27;男&#x27;</span>,<span class=\"number\">20</span>,<span class=\"string\">&#x27;计算机系&#x27;</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;0611103&#x27;</span>,<span class=\"string\">&#x27;王敏&#x27;</span>,<span class=\"string\">&#x27;女&#x27;</span>,<span class=\"number\">20</span>,<span class=\"string\">&#x27;计算机系&#x27;</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;0611104&#x27;</span>,<span class=\"string\">&#x27;张小红&#x27;</span>,<span class=\"string\">&#x27;女&#x27;</span>,<span class=\"number\">19</span>,<span class=\"string\">&#x27;计算机系&#x27;</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;0621101&#x27;</span>,<span class=\"string\">&#x27;张立&#x27;</span>,<span class=\"string\">&#x27;男&#x27;</span>,<span class=\"number\">20</span>,<span class=\"string\">&#x27;信息管理系&#x27;</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;0621102&#x27;</span>,<span class=\"string\">&#x27;吴宾&#x27;</span>,<span class=\"string\">&#x27;女&#x27;</span>,<span class=\"number\">19</span>,<span class=\"string\">&#x27;信息管理系&#x27;</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;0621103&#x27;</span>,<span class=\"string\">&#x27;张海&#x27;</span>,<span class=\"string\">&#x27;男&#x27;</span>,<span class=\"number\">20</span>,<span class=\"string\">&#x27;信息管理系&#x27;</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;0631101&#x27;</span>,<span class=\"string\">&#x27;钱小平&#x27;</span>,<span class=\"string\">&#x27;女&#x27;</span>,<span class=\"number\">21</span>,<span class=\"string\">&#x27;通信工程系&#x27;</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;0631102&#x27;</span>,<span class=\"string\">&#x27;王大力&#x27;</span>,<span class=\"string\">&#x27;男&#x27;</span>,<span class=\"number\">20</span>,<span class=\"string\">&#x27;通信工程系&#x27;</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;0631103&#x27;</span>,<span class=\"string\">&#x27;张姗姗&#x27;</span>,<span class=\"string\">&#x27;女&#x27;</span>,<span class=\"number\">19</span>,<span class=\"string\">&#x27;通信工程系&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> course (Cno,Cname,Credit,Semster) <span class=\"keyword\">VALUES</span></span><br><span class=\"line\">(<span class=\"string\">&#x27;C001&#x27;</span>,<span class=\"string\">&#x27;高等数学&#x27;</span>,<span class=\"number\">4</span>,<span class=\"number\">1</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;C002&#x27;</span>,<span class=\"string\">&#x27;大学英语&#x27;</span>,<span class=\"number\">3</span>,<span class=\"number\">1</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;C003&#x27;</span>,<span class=\"string\">&#x27;大学英语&#x27;</span>,<span class=\"number\">3</span>,<span class=\"number\">2</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;C004&#x27;</span>,<span class=\"string\">&#x27;计算机文化&#x27;</span>,<span class=\"number\">2</span>,<span class=\"number\">2</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;C005&#x27;</span>,<span class=\"string\">&#x27;VB&#x27;</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;C006&#x27;</span>,<span class=\"string\">&#x27;数据库基础&#x27;</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;C007&#x27;</span>,<span class=\"string\">&#x27;数据结构&#x27;</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;C008&#x27;</span>,<span class=\"string\">&#x27;计算机网络&#x27;</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> sc (Sno,Cno,Grade) <span class=\"keyword\">VALUES</span></span><br><span class=\"line\">(<span class=\"string\">&#x27;0611101&#x27;</span>,<span class=\"string\">&#x27;C001&#x27;</span>,<span class=\"number\">96</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;0611101&#x27;</span>,<span class=\"string\">&#x27;C002&#x27;</span>,<span class=\"number\">80</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;0611101&#x27;</span>,<span class=\"string\">&#x27;C003&#x27;</span>,<span class=\"number\">84</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;0611101&#x27;</span>,<span class=\"string\">&#x27;C005&#x27;</span>,<span class=\"number\">62</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;0611102&#x27;</span>,<span class=\"string\">&#x27;C001&#x27;</span>,<span class=\"number\">92</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;0611102&#x27;</span>,<span class=\"string\">&#x27;C002&#x27;</span>,<span class=\"number\">90</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;0611102&#x27;</span>,<span class=\"string\">&#x27;C004&#x27;</span>,<span class=\"number\">84</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;0621102&#x27;</span>,<span class=\"string\">&#x27;C001&#x27;</span>,<span class=\"number\">76</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;0621102&#x27;</span>,<span class=\"string\">&#x27;C004&#x27;</span>,<span class=\"number\">85</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;0621102&#x27;</span>,<span class=\"string\">&#x27;C005&#x27;</span>,<span class=\"number\">73</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;0621102&#x27;</span>,<span class=\"string\">&#x27;C007&#x27;</span>,<span class=\"keyword\">null</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;0621103&#x27;</span>,<span class=\"string\">&#x27;C001&#x27;</span>,<span class=\"number\">50</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;0621103&#x27;</span>,<span class=\"string\">&#x27;C004&#x27;</span>,<span class=\"number\">80</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;0631101&#x27;</span>,<span class=\"string\">&#x27;C001&#x27;</span>,<span class=\"number\">50</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;0631101&#x27;</span>,<span class=\"string\">&#x27;C004&#x27;</span>,<span class=\"number\">80</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;0631102&#x27;</span>,<span class=\"string\">&#x27;C007&#x27;</span>,<span class=\"keyword\">NULL</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;0631103&#x27;</span>,<span class=\"string\">&#x27;C004&#x27;</span>,<span class=\"number\">78</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;0631103&#x27;</span>,<span class=\"string\">&#x27;C005&#x27;</span>,<span class=\"number\">65</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;0631103&#x27;</span>,<span class=\"string\">&#x27;C007&#x27;</span>,<span class=\"keyword\">NULL</span>);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"title":"Openp2p-Launcher-MC帮助文档","date":"2024-04-15T13:55:41.000Z","_content":"## 详细\n* [![github](https://img.shields.io/badge/Github-Openp2p%20Launcher-Green?logo=github)](https://github.com/Guailoudou/openp2p-launcher/tree/mc) \n* [![issues](https://img.shields.io/badge/Github-issues-Green?logo=github)](https://github.com/Guailoudou/openp2p-launcher/issues) \n* [![在b站关注我](https://img.shields.io/badge/bilibili-%E4%B9%96%E6%BC%8F%E6%96%97-pink?logo=bilibili&logoColor=#00A1D6)](https://space.bilibili.com/496960407)\n\n这是一款p2p的mc联机工具，世界直接出现在局域网，无需输入服务器地址，本程序基于[openp2p](https://github.com/openp2p-cn/openp2p)，本质为自动生成openp2p的配置文件，使用公共账户简化其使用，添加针对mc的功能，本程序开源，使用c++编写\n\n直连的连通性依赖于nat类型，具体条件见下面的[nat连通性](#user-content-nat连通性),使用用户**多**的时候不满足条件的也可以连上（中转） 仅直连条件下可以达到**理论最低**延迟\n\n查毒报告(内有行为分析，觉得不安全可以看看，文件已同步至0.5.6.3于2024-2-2上传)：\n[微步沙箱 -x64](https://s.threatbook.com/report/file/c1a5f05f2d383506c0dcae99682b01fcca29f9033bdd92ccbb91e4602465b78d)  \n[微步沙箱 -x86](https://s.threatbook.com/report/file/493ed1b963b870d953c8818b9a565c5837043b81ead8286922a26f3ecc0c3cca)\n* [报毒问题](#报毒问题)\n  \n使用方法根据提示输入即可，记得要**回车**。遇到问题可进群询问`873968900`（QQ）～ \n\n**转发给别人软件请不要连bin文件夹一起转发**\n**转发给别人软件请不要连bin文件夹一起转发**\n\n[视频演示](https://www.bilibili.com/video/BV11P411a7dH/)\n\n## 下载地址\n- mc专用版\nMD5值可以通过cmd在文件目录运行`certutil -hashfile 文件名 MD5`查看\n\n|下载地址|MD5|\n|---|---|\n|[Download-0.5.6.3win-x64](https://gld.lanzoul.com/iMhnx1mzgo1a)|e3696937a3d4b1baff8bf8c65cb58dd8|\n|[Download-0.5.6.3win-x86](https://gld.lanzoul.com/i78cA1mzgo9i)|171a63253a52d0a953c25a4f0e60716e|\n or\n|[releases](https://github.com/Guailoudou/openp2p-launcher/releases)|注意系统位数x64容易报毒，可下x86遇到问题可进群询问`873968900`（QQ）|\n|[Download](https://gld.lanzoul.com/itZPD14z08qf)|nat测试工具|\n|[UI测试版](/2024/04/19/opl_ui/)|基于.net4.7.2全新UI操作页面|\n|[Download签名文件](https://gld.lanzoul.com/iQiQ81mn6k1e)|买不起签名，自己签了一个，这个是安装签名到信任的工具，可以一点程度上降低报毒（效果不明显）|\n---\n- 其他版本（**玩mc不要下这个，这个版本不推荐使用，如果有其他连接需求可直接使用openp2p**）\n  [Download-0.6.2win-x64](https://gld.lanzoul.com/icL0614z09ej)\n## 使用方法（0.5）\n被连接的输入**0**然后**回车**即可,然后把你的**uuid**和**游戏端口**发给要连接的人\n\n连接的，输入**1或2**（tcp1，udp2，mc，泰拉瑞亚用1，幻兽帕鲁类用2）然后输入**对方uuid**和游戏**对外开放的端口**,连接成功后程序会显示连接成功，直接通过局域网进入即可。\n\n出现`系统无法执行指定的程序`为被杀毒软件拦截，请关闭查毒软件后重启程序，或参考下面为程序目录添加白名单\n\n***连接端口默认为原端口-1，连接ip为 `127.0.0.1`***\n\n使用1或2运行一次之后，会在同目录创建一个以tcp udp uuid和端口命名的快捷方式，可以通过运行快捷方式快速启动，可以通过右键快捷方式->目标，修改尾部端口数字来修改端口号，uuid也可以在这里修改，0.5.6.2开始，最后加个1为udp隧道\n\n**请不要把你的uuid随便发给不认识的人**，可能存在计算机被入侵的可能，不小心泄露uuid了可以通过删除bin文件夹重置uuid\n\n![jyw](https://fastly.jsdelivr.net/gh/Guailoudou/urlimg@main/jyw.png)\n![link](https://fastly.jsdelivr.net/gh/Guailoudou/urlimg@main/link.png)\n\n## 常见问题\n1. 程序显示`**** offline, it will auto reconnect when peer node online`说明对方程序未启动，请让他输入0启动，如果已经确保启动了请重新启动，或检查uuid是否输入正确。\n2. 联机mc请使用0.5的版本，**连接成功**后世界会直接出现在局域网，这是mc专用版。\n4. 游戏显示`登入失败，无效的会话`：正版验证问题(房主登录了一般就不会出现)，都使用外置登录或加联机模组关闭验证即可（个人推荐外置登录，还能加载皮肤披风,联机模组在新版本中貌似失效了）\n5. 直连可行性受nat类型影响，为p2p连接，无中间服务器，具体见下面表格\n6. `系统无法执行指定的程序`被杀毒软件拦截了，见下面[杀毒](#user-content-报毒问题)\n6. 程序显示`连接成功`但游戏进来显示`连接超时`：检查端口有没有输入错误，核对端口的准确性\n6. 反复异常断开连接：添加服务器ip地址，重启程序，刷新出服务器信息再进入\n6. 程序显示`ERROR dial tcp 127.0.0.1:*****: connectex:****** No connection could be made because the targ machine actively refused it.`游戏的对外端口不存在或无法访问，检查对方输的端口或重启mc重新获取端口即可\n7. 3大运营商（电信 移动 联通）以外的运营商可以放弃尝试了，其他运营商（广电,长城...）基本都是nat4,流量充足可以考虑用流量,或者靠运气连上\n7. 连不上可以尝试参看这个教程进行nat类型优化 [如何提升NAT类型?](https://zhuanlan.zhihu.com/p/338917185)\n7. 报错：`ERROR listen error:listen tcp :*****: bind: An attempt was made to access a socket in a way forbidden by its access permissions.`打开`bin`文件夹，打开`config.json` -> 修改`SrcPort`参数为任意其他数字，推荐`25565-25665`之间的，然后直接打开`openp2p.exe`，再通过`127.0.0.1:刚才改后端口` 添加服务器后刷新出服务器信息再进入游戏\n7. 更多常见问题等你来[反馈](#user-content-问题反馈)\n网上看到的，觉得说得很对~\n<img src=\"https://fastly.jsdelivr.net/gh/Guailoudou/urlimg@main/tw.png\" width=\"100%\" alt=\"说的很对\">\n\n## nat连通性\n**优化手段**：可以通过在路由器/光猫开启upnp功能，以及设置DMZ主机的方式提高nat环境（光猫需要超级管理员账户密码）\nnat类型可在程序刚刚开始运行时看到，为`NATtype`（不太准）\n连不上可以尝试参看这个教程进行nat类型优化 [如何提升NAT类型?](https://zhuanlan.zhihu.com/p/338917185)\n|nat类型|nat值|\n|---|---|\n|Full cone NAT（全锥形NAT）|nat1|\n|Port Restricted Cone NAT（端口受限锥形NAT）|nat2|\n|Restricted Cone NAT（地址受限锥形NAT）|nat3|\n|Symetric NAT（对称NAT）|nat4|\n\n|nat值|nat1|nat2|nat3|nat4|\n|---|---|---|---|---|\n|nat1|✔️|✔️|✔️|✔️|\n|nat2|✔️|✔️|✔️|✖️|\n|nat3|✔️|✔️|✖️|✖️|\n|nat4|✔️|✖️|✖️|✖️|\n- ✔️代表可以建立直连，✖️不代表一定连不上，仅连接时间可能较长\n## 报毒问题\n- 程序安全无毒，程序完全开源，但因为没有软件代码证书，所以非常容易报毒（就输出个hello world放其他人电脑上都报毒）\n- 系统自带安全程序报毒：\nWindows安全中心->病毒和威胁防护->“病毒和威胁防护”设置->管理设置->排除项->添加或删除排除项->添加排除项->文件夹，然后选择存放程序的上一级文件夹\n或安装火绒顶掉，火绒不报毒\n- 其他报毒：\n我无其他杀毒软件，大体和上面一致，就是把放程序那个文件夹添加到信任或排除，或安装火绒顶掉，火绒不报毒\n- 实在不行下x86（32位），这个报毒率低（我也不理解原理，代码一模一样）\n## 更新日志\n> 之后的写这里，之前的懒得搬过来了\n### 2024-1-29 v0.5.6.3\n- 修复udp模式下连接成功后无中文提示的bug\n### 2024-1-22 v0.5.6.2\n- 添加模式2为udp隧道\n- 在新生成的快捷方式头部添加隧道类型（tcp/udp）与以前的兼容\n- 快捷方式目标最后面添加1为udp隧道\n- 支持了单udp连接，连接的快捷方式与以前的兼容（支持upd的游戏啦~）\n- 修改了本地端口规则为默认-1\n### 2023-11-30 v0.5.6.1\n- 修复部分情况下程序中文显示乱码的问题\n- 修复0模式下无法正确接收openp2p版本更新的问题\n### 2023-11-6 v0.5.6.0\n- 去除了模式2，以快捷方式替代\n- 现在使用模式1连接后会自动生成一个快捷方式在同目录，快捷方式的路径后部可以直接更改端口，使用快捷方式打开，免输入参数\n- 去除了反复的`连接成功`，`连接中`的提示\n- 增加了程序图标，版本信息等\n### 2023-10-5 v0.5.5.3\n- 修复了一个陈年的，几乎没触发过的bug\n- 添加了部分可被推送openp2p更新的功能（未完成）\n- 学Java去~ 计划之后用Java再写一次，终极目标直接写成mod集成在mc（~画大饼~） \n### 2023-9-5 v0.5.5.2\n- 同步了openp2p版本到3.10.9，连接成功率大大提升，升级请删除bin文件夹内的openp2p文件\n- 增加了个小提示\n### 2023-9-3 v0.5.5\n- 今天是我生日嘞，学校网烂github延后上传\n- 修改了多线程运行逻辑，现在连接成功之后才会出现在局域网\n- 优化了显示是文字，将`sever not online`替换为`连接中...`\n### 2023-8-23\n- 现在有了支持x86的版本\n### 0.5版本功能\n- 0.5.3.4同步了openp2p版本到3.10.3(更新版本需要删除以前的bin/openp2p文件)\n- 世界直接出现在局域网，无需输入服务器地址\n- 支持连接的免登录，房主得登录，可使用[外置登录](https://littleskin.cn)\n- 操作简单\n## 问题反馈\n- 遇到问题可入群反馈`873968900`\n- 也可以在这里提出你的建议\n[![issues](https://img.shields.io/badge/Github-issues-Green?logo=github)](https://github.com/Guailoudou/openp2p-launcher/issues)\n\n\n## 其他\n- littleskin皮肤站\n  [![pcl2](https://img.shields.io/badge/link-littleskin-Green?logo=minetest)](https://littleskin.cn)\n- pcl2下载地址\n [![pcl2](https://img.shields.io/badge/link-PCL2-Green?logo=windows)](https://afdian.net/p/0164034c016c11ebafcb52540025c377)\n- HMCL下载地址\n [![HMCL](https://img.shields.io/badge/link-HMCL-Green?logo=windows)](https://hmcl.huangyuhui.net/download/)\n- BakaXL下载地址\n [![BakaXL](https://img.shields.io/badge/link-BakaXL-Green?logo=windows)](https://www.bakaxl.com/)\n\n## 爱门！！\n~~发病ing~~\n\n> 某一日，祂从天坠落&#9834;\n  人们抬头仰望，于是看见了星空&#9834;\n  星月送来神的女儿，她愿成为人的伴侣&#9834;\n  长风化作她的轺车，四海落成她的园圃&#9834;鸟雀衔来善的种子，百花编织爱的颂歌&#9834;\n  她便是这样降生于世，行于大地，与人类一同长大，与世界一起发芽&#9834;\n  而今，终焉之时将至&#9834;\n  而今，归去之时已至&#9834;\n  就此告别吧，美丽的世界&#9834;\n  此后，将有群星闪耀，因为我如今来过&#9834;\n  此后，将有百花绽放，因为我从未离去&#9834;\n  请将我的箭、我的花、与我的爱，织成新生的种子，带向那枯萎的大地&#9834;\n  然后，便让它开出永恒而无瑕的…人性之华吧&#9834;\n  我名为爱莉希雅&#9834;\n  最初的律者，人之律者&#9834;\n  ![爱莉希雅](https://fastly.jsdelivr.net/gh/Guailoudou/urlimg@main/bh3ali.png)\n---\n![hli](https://api.xingzhige.com/API/yshl/)\n©2023 guailoudou","source":"_posts/opl_help.md","raw":"---\ntitle: Openp2p-Launcher-MC帮助文档\ndate: 2024-04-15 21:55:41\ntags:\n- 教程\n- 工具\n---\n## 详细\n* [![github](https://img.shields.io/badge/Github-Openp2p%20Launcher-Green?logo=github)](https://github.com/Guailoudou/openp2p-launcher/tree/mc) \n* [![issues](https://img.shields.io/badge/Github-issues-Green?logo=github)](https://github.com/Guailoudou/openp2p-launcher/issues) \n* [![在b站关注我](https://img.shields.io/badge/bilibili-%E4%B9%96%E6%BC%8F%E6%96%97-pink?logo=bilibili&logoColor=#00A1D6)](https://space.bilibili.com/496960407)\n\n这是一款p2p的mc联机工具，世界直接出现在局域网，无需输入服务器地址，本程序基于[openp2p](https://github.com/openp2p-cn/openp2p)，本质为自动生成openp2p的配置文件，使用公共账户简化其使用，添加针对mc的功能，本程序开源，使用c++编写\n\n直连的连通性依赖于nat类型，具体条件见下面的[nat连通性](#user-content-nat连通性),使用用户**多**的时候不满足条件的也可以连上（中转） 仅直连条件下可以达到**理论最低**延迟\n\n查毒报告(内有行为分析，觉得不安全可以看看，文件已同步至0.5.6.3于2024-2-2上传)：\n[微步沙箱 -x64](https://s.threatbook.com/report/file/c1a5f05f2d383506c0dcae99682b01fcca29f9033bdd92ccbb91e4602465b78d)  \n[微步沙箱 -x86](https://s.threatbook.com/report/file/493ed1b963b870d953c8818b9a565c5837043b81ead8286922a26f3ecc0c3cca)\n* [报毒问题](#报毒问题)\n  \n使用方法根据提示输入即可，记得要**回车**。遇到问题可进群询问`873968900`（QQ）～ \n\n**转发给别人软件请不要连bin文件夹一起转发**\n**转发给别人软件请不要连bin文件夹一起转发**\n\n[视频演示](https://www.bilibili.com/video/BV11P411a7dH/)\n\n## 下载地址\n- mc专用版\nMD5值可以通过cmd在文件目录运行`certutil -hashfile 文件名 MD5`查看\n\n|下载地址|MD5|\n|---|---|\n|[Download-0.5.6.3win-x64](https://gld.lanzoul.com/iMhnx1mzgo1a)|e3696937a3d4b1baff8bf8c65cb58dd8|\n|[Download-0.5.6.3win-x86](https://gld.lanzoul.com/i78cA1mzgo9i)|171a63253a52d0a953c25a4f0e60716e|\n or\n|[releases](https://github.com/Guailoudou/openp2p-launcher/releases)|注意系统位数x64容易报毒，可下x86遇到问题可进群询问`873968900`（QQ）|\n|[Download](https://gld.lanzoul.com/itZPD14z08qf)|nat测试工具|\n|[UI测试版](/2024/04/19/opl_ui/)|基于.net4.7.2全新UI操作页面|\n|[Download签名文件](https://gld.lanzoul.com/iQiQ81mn6k1e)|买不起签名，自己签了一个，这个是安装签名到信任的工具，可以一点程度上降低报毒（效果不明显）|\n---\n- 其他版本（**玩mc不要下这个，这个版本不推荐使用，如果有其他连接需求可直接使用openp2p**）\n  [Download-0.6.2win-x64](https://gld.lanzoul.com/icL0614z09ej)\n## 使用方法（0.5）\n被连接的输入**0**然后**回车**即可,然后把你的**uuid**和**游戏端口**发给要连接的人\n\n连接的，输入**1或2**（tcp1，udp2，mc，泰拉瑞亚用1，幻兽帕鲁类用2）然后输入**对方uuid**和游戏**对外开放的端口**,连接成功后程序会显示连接成功，直接通过局域网进入即可。\n\n出现`系统无法执行指定的程序`为被杀毒软件拦截，请关闭查毒软件后重启程序，或参考下面为程序目录添加白名单\n\n***连接端口默认为原端口-1，连接ip为 `127.0.0.1`***\n\n使用1或2运行一次之后，会在同目录创建一个以tcp udp uuid和端口命名的快捷方式，可以通过运行快捷方式快速启动，可以通过右键快捷方式->目标，修改尾部端口数字来修改端口号，uuid也可以在这里修改，0.5.6.2开始，最后加个1为udp隧道\n\n**请不要把你的uuid随便发给不认识的人**，可能存在计算机被入侵的可能，不小心泄露uuid了可以通过删除bin文件夹重置uuid\n\n![jyw](https://fastly.jsdelivr.net/gh/Guailoudou/urlimg@main/jyw.png)\n![link](https://fastly.jsdelivr.net/gh/Guailoudou/urlimg@main/link.png)\n\n## 常见问题\n1. 程序显示`**** offline, it will auto reconnect when peer node online`说明对方程序未启动，请让他输入0启动，如果已经确保启动了请重新启动，或检查uuid是否输入正确。\n2. 联机mc请使用0.5的版本，**连接成功**后世界会直接出现在局域网，这是mc专用版。\n4. 游戏显示`登入失败，无效的会话`：正版验证问题(房主登录了一般就不会出现)，都使用外置登录或加联机模组关闭验证即可（个人推荐外置登录，还能加载皮肤披风,联机模组在新版本中貌似失效了）\n5. 直连可行性受nat类型影响，为p2p连接，无中间服务器，具体见下面表格\n6. `系统无法执行指定的程序`被杀毒软件拦截了，见下面[杀毒](#user-content-报毒问题)\n6. 程序显示`连接成功`但游戏进来显示`连接超时`：检查端口有没有输入错误，核对端口的准确性\n6. 反复异常断开连接：添加服务器ip地址，重启程序，刷新出服务器信息再进入\n6. 程序显示`ERROR dial tcp 127.0.0.1:*****: connectex:****** No connection could be made because the targ machine actively refused it.`游戏的对外端口不存在或无法访问，检查对方输的端口或重启mc重新获取端口即可\n7. 3大运营商（电信 移动 联通）以外的运营商可以放弃尝试了，其他运营商（广电,长城...）基本都是nat4,流量充足可以考虑用流量,或者靠运气连上\n7. 连不上可以尝试参看这个教程进行nat类型优化 [如何提升NAT类型?](https://zhuanlan.zhihu.com/p/338917185)\n7. 报错：`ERROR listen error:listen tcp :*****: bind: An attempt was made to access a socket in a way forbidden by its access permissions.`打开`bin`文件夹，打开`config.json` -> 修改`SrcPort`参数为任意其他数字，推荐`25565-25665`之间的，然后直接打开`openp2p.exe`，再通过`127.0.0.1:刚才改后端口` 添加服务器后刷新出服务器信息再进入游戏\n7. 更多常见问题等你来[反馈](#user-content-问题反馈)\n网上看到的，觉得说得很对~\n<img src=\"https://fastly.jsdelivr.net/gh/Guailoudou/urlimg@main/tw.png\" width=\"100%\" alt=\"说的很对\">\n\n## nat连通性\n**优化手段**：可以通过在路由器/光猫开启upnp功能，以及设置DMZ主机的方式提高nat环境（光猫需要超级管理员账户密码）\nnat类型可在程序刚刚开始运行时看到，为`NATtype`（不太准）\n连不上可以尝试参看这个教程进行nat类型优化 [如何提升NAT类型?](https://zhuanlan.zhihu.com/p/338917185)\n|nat类型|nat值|\n|---|---|\n|Full cone NAT（全锥形NAT）|nat1|\n|Port Restricted Cone NAT（端口受限锥形NAT）|nat2|\n|Restricted Cone NAT（地址受限锥形NAT）|nat3|\n|Symetric NAT（对称NAT）|nat4|\n\n|nat值|nat1|nat2|nat3|nat4|\n|---|---|---|---|---|\n|nat1|✔️|✔️|✔️|✔️|\n|nat2|✔️|✔️|✔️|✖️|\n|nat3|✔️|✔️|✖️|✖️|\n|nat4|✔️|✖️|✖️|✖️|\n- ✔️代表可以建立直连，✖️不代表一定连不上，仅连接时间可能较长\n## 报毒问题\n- 程序安全无毒，程序完全开源，但因为没有软件代码证书，所以非常容易报毒（就输出个hello world放其他人电脑上都报毒）\n- 系统自带安全程序报毒：\nWindows安全中心->病毒和威胁防护->“病毒和威胁防护”设置->管理设置->排除项->添加或删除排除项->添加排除项->文件夹，然后选择存放程序的上一级文件夹\n或安装火绒顶掉，火绒不报毒\n- 其他报毒：\n我无其他杀毒软件，大体和上面一致，就是把放程序那个文件夹添加到信任或排除，或安装火绒顶掉，火绒不报毒\n- 实在不行下x86（32位），这个报毒率低（我也不理解原理，代码一模一样）\n## 更新日志\n> 之后的写这里，之前的懒得搬过来了\n### 2024-1-29 v0.5.6.3\n- 修复udp模式下连接成功后无中文提示的bug\n### 2024-1-22 v0.5.6.2\n- 添加模式2为udp隧道\n- 在新生成的快捷方式头部添加隧道类型（tcp/udp）与以前的兼容\n- 快捷方式目标最后面添加1为udp隧道\n- 支持了单udp连接，连接的快捷方式与以前的兼容（支持upd的游戏啦~）\n- 修改了本地端口规则为默认-1\n### 2023-11-30 v0.5.6.1\n- 修复部分情况下程序中文显示乱码的问题\n- 修复0模式下无法正确接收openp2p版本更新的问题\n### 2023-11-6 v0.5.6.0\n- 去除了模式2，以快捷方式替代\n- 现在使用模式1连接后会自动生成一个快捷方式在同目录，快捷方式的路径后部可以直接更改端口，使用快捷方式打开，免输入参数\n- 去除了反复的`连接成功`，`连接中`的提示\n- 增加了程序图标，版本信息等\n### 2023-10-5 v0.5.5.3\n- 修复了一个陈年的，几乎没触发过的bug\n- 添加了部分可被推送openp2p更新的功能（未完成）\n- 学Java去~ 计划之后用Java再写一次，终极目标直接写成mod集成在mc（~画大饼~） \n### 2023-9-5 v0.5.5.2\n- 同步了openp2p版本到3.10.9，连接成功率大大提升，升级请删除bin文件夹内的openp2p文件\n- 增加了个小提示\n### 2023-9-3 v0.5.5\n- 今天是我生日嘞，学校网烂github延后上传\n- 修改了多线程运行逻辑，现在连接成功之后才会出现在局域网\n- 优化了显示是文字，将`sever not online`替换为`连接中...`\n### 2023-8-23\n- 现在有了支持x86的版本\n### 0.5版本功能\n- 0.5.3.4同步了openp2p版本到3.10.3(更新版本需要删除以前的bin/openp2p文件)\n- 世界直接出现在局域网，无需输入服务器地址\n- 支持连接的免登录，房主得登录，可使用[外置登录](https://littleskin.cn)\n- 操作简单\n## 问题反馈\n- 遇到问题可入群反馈`873968900`\n- 也可以在这里提出你的建议\n[![issues](https://img.shields.io/badge/Github-issues-Green?logo=github)](https://github.com/Guailoudou/openp2p-launcher/issues)\n\n\n## 其他\n- littleskin皮肤站\n  [![pcl2](https://img.shields.io/badge/link-littleskin-Green?logo=minetest)](https://littleskin.cn)\n- pcl2下载地址\n [![pcl2](https://img.shields.io/badge/link-PCL2-Green?logo=windows)](https://afdian.net/p/0164034c016c11ebafcb52540025c377)\n- HMCL下载地址\n [![HMCL](https://img.shields.io/badge/link-HMCL-Green?logo=windows)](https://hmcl.huangyuhui.net/download/)\n- BakaXL下载地址\n [![BakaXL](https://img.shields.io/badge/link-BakaXL-Green?logo=windows)](https://www.bakaxl.com/)\n\n## 爱门！！\n~~发病ing~~\n\n> 某一日，祂从天坠落&#9834;\n  人们抬头仰望，于是看见了星空&#9834;\n  星月送来神的女儿，她愿成为人的伴侣&#9834;\n  长风化作她的轺车，四海落成她的园圃&#9834;鸟雀衔来善的种子，百花编织爱的颂歌&#9834;\n  她便是这样降生于世，行于大地，与人类一同长大，与世界一起发芽&#9834;\n  而今，终焉之时将至&#9834;\n  而今，归去之时已至&#9834;\n  就此告别吧，美丽的世界&#9834;\n  此后，将有群星闪耀，因为我如今来过&#9834;\n  此后，将有百花绽放，因为我从未离去&#9834;\n  请将我的箭、我的花、与我的爱，织成新生的种子，带向那枯萎的大地&#9834;\n  然后，便让它开出永恒而无瑕的…人性之华吧&#9834;\n  我名为爱莉希雅&#9834;\n  最初的律者，人之律者&#9834;\n  ![爱莉希雅](https://fastly.jsdelivr.net/gh/Guailoudou/urlimg@main/bh3ali.png)\n---\n![hli](https://api.xingzhige.com/API/yshl/)\n©2023 guailoudou","slug":"opl_help","published":1,"updated":"2024-04-20T03:41:20.766Z","_id":"clv10seiv00002wck1lv8hbvf","comments":1,"layout":"post","photos":[],"content":"<h2 id=\"详细\"><a href=\"#详细\" class=\"headerlink\" title=\"详细\"></a>详细</h2><ul>\n<li><a href=\"https://github.com/Guailoudou/openp2p-launcher/tree/mc\"><img src=\"https://img.shields.io/badge/Github-Openp2p%20Launcher-Green?logo=github\" alt=\"github\"></a> </li>\n<li><a href=\"https://github.com/Guailoudou/openp2p-launcher/issues\"><img src=\"https://img.shields.io/badge/Github-issues-Green?logo=github\" alt=\"issues\"></a> </li>\n<li><a href=\"https://space.bilibili.com/496960407\"><img src=\"https://img.shields.io/badge/bilibili-%E4%B9%96%E6%BC%8F%E6%96%97-pink?logo=bilibili&logoColor=#00A1D6\" alt=\"在b站关注我\"></a></li>\n</ul>\n<p>这是一款p2p的mc联机工具，世界直接出现在局域网，无需输入服务器地址，本程序基于<a href=\"https://github.com/openp2p-cn/openp2p\">openp2p</a>，本质为自动生成openp2p的配置文件，使用公共账户简化其使用，添加针对mc的功能，本程序开源，使用c++编写</p>\n<p>直连的连通性依赖于nat类型，具体条件见下面的<a href=\"#user-content-nat%E8%BF%9E%E9%80%9A%E6%80%A7\">nat连通性</a>,使用用户<strong>多</strong>的时候不满足条件的也可以连上（中转） 仅直连条件下可以达到<strong>理论最低</strong>延迟</p>\n<p>查毒报告(内有行为分析，觉得不安全可以看看，文件已同步至0.5.6.3于2024-2-2上传)：<br><a href=\"https://s.threatbook.com/report/file/c1a5f05f2d383506c0dcae99682b01fcca29f9033bdd92ccbb91e4602465b78d\">微步沙箱 -x64</a><br><a href=\"https://s.threatbook.com/report/file/493ed1b963b870d953c8818b9a565c5837043b81ead8286922a26f3ecc0c3cca\">微步沙箱 -x86</a></p>\n<ul>\n<li><a href=\"#%E6%8A%A5%E6%AF%92%E9%97%AE%E9%A2%98\">报毒问题</a></li>\n</ul>\n<p>使用方法根据提示输入即可，记得要<strong>回车</strong>。遇到问题可进群询问<code>873968900</code>（QQ）～ </p>\n<p><strong>转发给别人软件请不要连bin文件夹一起转发</strong><br><strong>转发给别人软件请不要连bin文件夹一起转发</strong></p>\n<p><a href=\"https://www.bilibili.com/video/BV11P411a7dH/\">视频演示</a></p>\n<h2 id=\"下载地址\"><a href=\"#下载地址\" class=\"headerlink\" title=\"下载地址\"></a>下载地址</h2><ul>\n<li>mc专用版<br>MD5值可以通过cmd在文件目录运行<code>certutil -hashfile 文件名 MD5</code>查看</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>下载地址</th>\n<th>MD5</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a href=\"https://gld.lanzoul.com/iMhnx1mzgo1a\">Download-0.5.6.3win-x64</a></td>\n<td>e3696937a3d4b1baff8bf8c65cb58dd8</td>\n</tr>\n<tr>\n<td><a href=\"https://gld.lanzoul.com/i78cA1mzgo9i\">Download-0.5.6.3win-x86</a></td>\n<td>171a63253a52d0a953c25a4f0e60716e</td>\n</tr>\n<tr>\n<td>or</td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/Guailoudou/openp2p-launcher/releases\">releases</a></td>\n<td>注意系统位数x64容易报毒，可下x86遇到问题可进群询问<code>873968900</code>（QQ）</td>\n</tr>\n<tr>\n<td><a href=\"https://gld.lanzoul.com/itZPD14z08qf\">Download</a></td>\n<td>nat测试工具</td>\n</tr>\n<tr>\n<td><a href=\"/2024/04/19/opl_ui/\">UI测试版</a></td>\n<td>基于.net4.7.2全新UI操作页面</td>\n</tr>\n<tr>\n<td><a href=\"https://gld.lanzoul.com/iQiQ81mn6k1e\">Download签名文件</a></td>\n<td>买不起签名，自己签了一个，这个是安装签名到信任的工具，可以一点程度上降低报毒（效果不明显）</td>\n</tr>\n</tbody></table>\n<hr>\n<ul>\n<li>其他版本（<strong>玩mc不要下这个，这个版本不推荐使用，如果有其他连接需求可直接使用openp2p</strong>）<br><a href=\"https://gld.lanzoul.com/icL0614z09ej\">Download-0.6.2win-x64</a></li>\n</ul>\n<h2 id=\"使用方法（0-5）\"><a href=\"#使用方法（0-5）\" class=\"headerlink\" title=\"使用方法（0.5）\"></a>使用方法（0.5）</h2><p>被连接的输入<strong>0</strong>然后<strong>回车</strong>即可,然后把你的<strong>uuid</strong>和<strong>游戏端口</strong>发给要连接的人</p>\n<p>连接的，输入<strong>1或2</strong>（tcp1，udp2，mc，泰拉瑞亚用1，幻兽帕鲁类用2）然后输入<strong>对方uuid</strong>和游戏<strong>对外开放的端口</strong>,连接成功后程序会显示连接成功，直接通过局域网进入即可。</p>\n<p>出现<code>系统无法执行指定的程序</code>为被杀毒软件拦截，请关闭查毒软件后重启程序，或参考下面为程序目录添加白名单</p>\n<p><em><strong>连接端口默认为原端口-1，连接ip为 <code>127.0.0.1</code></strong></em></p>\n<p>使用1或2运行一次之后，会在同目录创建一个以tcp udp uuid和端口命名的快捷方式，可以通过运行快捷方式快速启动，可以通过右键快捷方式-&gt;目标，修改尾部端口数字来修改端口号，uuid也可以在这里修改，0.5.6.2开始，最后加个1为udp隧道</p>\n<p><strong>请不要把你的uuid随便发给不认识的人</strong>，可能存在计算机被入侵的可能，不小心泄露uuid了可以通过删除bin文件夹重置uuid</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/Guailoudou/urlimg@main/jyw.png\" alt=\"jyw\"><br><img src=\"https://fastly.jsdelivr.net/gh/Guailoudou/urlimg@main/link.png\" alt=\"link\"></p>\n<h2 id=\"常见问题\"><a href=\"#常见问题\" class=\"headerlink\" title=\"常见问题\"></a>常见问题</h2><ol>\n<li>程序显示<code>**** offline, it will auto reconnect when peer node online</code>说明对方程序未启动，请让他输入0启动，如果已经确保启动了请重新启动，或检查uuid是否输入正确。</li>\n<li>联机mc请使用0.5的版本，<strong>连接成功</strong>后世界会直接出现在局域网，这是mc专用版。</li>\n<li>游戏显示<code>登入失败，无效的会话</code>：正版验证问题(房主登录了一般就不会出现)，都使用外置登录或加联机模组关闭验证即可（个人推荐外置登录，还能加载皮肤披风,联机模组在新版本中貌似失效了）</li>\n<li>直连可行性受nat类型影响，为p2p连接，无中间服务器，具体见下面表格</li>\n<li><code>系统无法执行指定的程序</code>被杀毒软件拦截了，见下面<a href=\"#user-content-%E6%8A%A5%E6%AF%92%E9%97%AE%E9%A2%98\">杀毒</a></li>\n<li>程序显示<code>连接成功</code>但游戏进来显示<code>连接超时</code>：检查端口有没有输入错误，核对端口的准确性</li>\n<li>反复异常断开连接：添加服务器ip地址，重启程序，刷新出服务器信息再进入</li>\n<li>程序显示<code>ERROR dial tcp 127.0.0.1:*****: connectex:****** No connection could be made because the targ machine actively refused it.</code>游戏的对外端口不存在或无法访问，检查对方输的端口或重启mc重新获取端口即可</li>\n<li>3大运营商（电信 移动 联通）以外的运营商可以放弃尝试了，其他运营商（广电,长城…）基本都是nat4,流量充足可以考虑用流量,或者靠运气连上</li>\n<li>连不上可以尝试参看这个教程进行nat类型优化 <a href=\"https://zhuanlan.zhihu.com/p/338917185\">如何提升NAT类型?</a></li>\n<li>报错：<code>ERROR listen error:listen tcp :*****: bind: An attempt was made to access a socket in a way forbidden by its access permissions.</code>打开<code>bin</code>文件夹，打开<code>config.json</code> -&gt; 修改<code>SrcPort</code>参数为任意其他数字，推荐<code>25565-25665</code>之间的，然后直接打开<code>openp2p.exe</code>，再通过<code>127.0.0.1:刚才改后端口</code> 添加服务器后刷新出服务器信息再进入游戏</li>\n<li>更多常见问题等你来<a href=\"#user-content-%E9%97%AE%E9%A2%98%E5%8F%8D%E9%A6%88\">反馈</a><br>网上看到的，觉得说得很对~<img src=\"https://fastly.jsdelivr.net/gh/Guailoudou/urlimg@main/tw.png\" width=\"100%\" alt=\"说的很对\"></li>\n</ol>\n<h2 id=\"nat连通性\"><a href=\"#nat连通性\" class=\"headerlink\" title=\"nat连通性\"></a>nat连通性</h2><p><strong>优化手段</strong>：可以通过在路由器&#x2F;光猫开启upnp功能，以及设置DMZ主机的方式提高nat环境（光猫需要超级管理员账户密码）<br>nat类型可在程序刚刚开始运行时看到，为<code>NATtype</code>（不太准）<br>连不上可以尝试参看这个教程进行nat类型优化 <a href=\"https://zhuanlan.zhihu.com/p/338917185\">如何提升NAT类型?</a></p>\n<table>\n<thead>\n<tr>\n<th>nat类型</th>\n<th>nat值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Full cone NAT（全锥形NAT）</td>\n<td>nat1</td>\n</tr>\n<tr>\n<td>Port Restricted Cone NAT（端口受限锥形NAT）</td>\n<td>nat2</td>\n</tr>\n<tr>\n<td>Restricted Cone NAT（地址受限锥形NAT）</td>\n<td>nat3</td>\n</tr>\n<tr>\n<td>Symetric NAT（对称NAT）</td>\n<td>nat4</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th>nat值</th>\n<th>nat1</th>\n<th>nat2</th>\n<th>nat3</th>\n<th>nat4</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>nat1</td>\n<td>✔️</td>\n<td>✔️</td>\n<td>✔️</td>\n<td>✔️</td>\n</tr>\n<tr>\n<td>nat2</td>\n<td>✔️</td>\n<td>✔️</td>\n<td>✔️</td>\n<td>✖️</td>\n</tr>\n<tr>\n<td>nat3</td>\n<td>✔️</td>\n<td>✔️</td>\n<td>✖️</td>\n<td>✖️</td>\n</tr>\n<tr>\n<td>nat4</td>\n<td>✔️</td>\n<td>✖️</td>\n<td>✖️</td>\n<td>✖️</td>\n</tr>\n</tbody></table>\n<ul>\n<li>✔️代表可以建立直连，✖️不代表一定连不上，仅连接时间可能较长</li>\n</ul>\n<h2 id=\"报毒问题\"><a href=\"#报毒问题\" class=\"headerlink\" title=\"报毒问题\"></a>报毒问题</h2><ul>\n<li>程序安全无毒，程序完全开源，但因为没有软件代码证书，所以非常容易报毒（就输出个hello world放其他人电脑上都报毒）</li>\n<li>系统自带安全程序报毒：<br>Windows安全中心-&gt;病毒和威胁防护-&gt;“病毒和威胁防护”设置-&gt;管理设置-&gt;排除项-&gt;添加或删除排除项-&gt;添加排除项-&gt;文件夹，然后选择存放程序的上一级文件夹<br>或安装火绒顶掉，火绒不报毒</li>\n<li>其他报毒：<br>我无其他杀毒软件，大体和上面一致，就是把放程序那个文件夹添加到信任或排除，或安装火绒顶掉，火绒不报毒</li>\n<li>实在不行下x86（32位），这个报毒率低（我也不理解原理，代码一模一样）</li>\n</ul>\n<h2 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h2><blockquote>\n<p>之后的写这里，之前的懒得搬过来了</p>\n</blockquote>\n<h3 id=\"2024-1-29-v0-5-6-3\"><a href=\"#2024-1-29-v0-5-6-3\" class=\"headerlink\" title=\"2024-1-29 v0.5.6.3\"></a>2024-1-29 v0.5.6.3</h3><ul>\n<li>修复udp模式下连接成功后无中文提示的bug</li>\n</ul>\n<h3 id=\"2024-1-22-v0-5-6-2\"><a href=\"#2024-1-22-v0-5-6-2\" class=\"headerlink\" title=\"2024-1-22 v0.5.6.2\"></a>2024-1-22 v0.5.6.2</h3><ul>\n<li>添加模式2为udp隧道</li>\n<li>在新生成的快捷方式头部添加隧道类型（tcp&#x2F;udp）与以前的兼容</li>\n<li>快捷方式目标最后面添加1为udp隧道</li>\n<li>支持了单udp连接，连接的快捷方式与以前的兼容（支持upd的游戏啦~）</li>\n<li>修改了本地端口规则为默认-1</li>\n</ul>\n<h3 id=\"2023-11-30-v0-5-6-1\"><a href=\"#2023-11-30-v0-5-6-1\" class=\"headerlink\" title=\"2023-11-30 v0.5.6.1\"></a>2023-11-30 v0.5.6.1</h3><ul>\n<li>修复部分情况下程序中文显示乱码的问题</li>\n<li>修复0模式下无法正确接收openp2p版本更新的问题</li>\n</ul>\n<h3 id=\"2023-11-6-v0-5-6-0\"><a href=\"#2023-11-6-v0-5-6-0\" class=\"headerlink\" title=\"2023-11-6 v0.5.6.0\"></a>2023-11-6 v0.5.6.0</h3><ul>\n<li>去除了模式2，以快捷方式替代</li>\n<li>现在使用模式1连接后会自动生成一个快捷方式在同目录，快捷方式的路径后部可以直接更改端口，使用快捷方式打开，免输入参数</li>\n<li>去除了反复的<code>连接成功</code>，<code>连接中</code>的提示</li>\n<li>增加了程序图标，版本信息等</li>\n</ul>\n<h3 id=\"2023-10-5-v0-5-5-3\"><a href=\"#2023-10-5-v0-5-5-3\" class=\"headerlink\" title=\"2023-10-5 v0.5.5.3\"></a>2023-10-5 v0.5.5.3</h3><ul>\n<li>修复了一个陈年的，几乎没触发过的bug</li>\n<li>添加了部分可被推送openp2p更新的功能（未完成）</li>\n<li>学Java去~ 计划之后用Java再写一次，终极目标直接写成mod集成在mc（<del>画大饼</del>）</li>\n</ul>\n<h3 id=\"2023-9-5-v0-5-5-2\"><a href=\"#2023-9-5-v0-5-5-2\" class=\"headerlink\" title=\"2023-9-5 v0.5.5.2\"></a>2023-9-5 v0.5.5.2</h3><ul>\n<li>同步了openp2p版本到3.10.9，连接成功率大大提升，升级请删除bin文件夹内的openp2p文件</li>\n<li>增加了个小提示</li>\n</ul>\n<h3 id=\"2023-9-3-v0-5-5\"><a href=\"#2023-9-3-v0-5-5\" class=\"headerlink\" title=\"2023-9-3 v0.5.5\"></a>2023-9-3 v0.5.5</h3><ul>\n<li>今天是我生日嘞，学校网烂github延后上传</li>\n<li>修改了多线程运行逻辑，现在连接成功之后才会出现在局域网</li>\n<li>优化了显示是文字，将<code>sever not online</code>替换为<code>连接中...</code></li>\n</ul>\n<h3 id=\"2023-8-23\"><a href=\"#2023-8-23\" class=\"headerlink\" title=\"2023-8-23\"></a>2023-8-23</h3><ul>\n<li>现在有了支持x86的版本</li>\n</ul>\n<h3 id=\"0-5版本功能\"><a href=\"#0-5版本功能\" class=\"headerlink\" title=\"0.5版本功能\"></a>0.5版本功能</h3><ul>\n<li>0.5.3.4同步了openp2p版本到3.10.3(更新版本需要删除以前的bin&#x2F;openp2p文件)</li>\n<li>世界直接出现在局域网，无需输入服务器地址</li>\n<li>支持连接的免登录，房主得登录，可使用<a href=\"https://littleskin.cn/\">外置登录</a></li>\n<li>操作简单</li>\n</ul>\n<h2 id=\"问题反馈\"><a href=\"#问题反馈\" class=\"headerlink\" title=\"问题反馈\"></a>问题反馈</h2><ul>\n<li>遇到问题可入群反馈<code>873968900</code></li>\n<li>也可以在这里提出你的建议<br><a href=\"https://github.com/Guailoudou/openp2p-launcher/issues\"><img src=\"https://img.shields.io/badge/Github-issues-Green?logo=github\" alt=\"issues\"></a></li>\n</ul>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><ul>\n<li>littleskin皮肤站<br><a href=\"https://littleskin.cn/\"><img src=\"https://img.shields.io/badge/link-littleskin-Green?logo=minetest\" alt=\"pcl2\"></a></li>\n<li>pcl2下载地址<br> <a href=\"https://afdian.net/p/0164034c016c11ebafcb52540025c377\"><img src=\"https://img.shields.io/badge/link-PCL2-Green?logo=windows\" alt=\"pcl2\"></a></li>\n<li>HMCL下载地址<br> <a href=\"https://hmcl.huangyuhui.net/download/\"><img src=\"https://img.shields.io/badge/link-HMCL-Green?logo=windows\" alt=\"HMCL\"></a></li>\n<li>BakaXL下载地址<br> <a href=\"https://www.bakaxl.com/\"><img src=\"https://img.shields.io/badge/link-BakaXL-Green?logo=windows\" alt=\"BakaXL\"></a></li>\n</ul>\n<h2 id=\"爱门！！\"><a href=\"#爱门！！\" class=\"headerlink\" title=\"爱门！！\"></a>爱门！！</h2><p><del>发病ing</del></p>\n<blockquote>\n<p>某一日，祂从天坠落&#9834;<br>  人们抬头仰望，于是看见了星空&#9834;<br>  星月送来神的女儿，她愿成为人的伴侣&#9834;<br>  长风化作她的轺车，四海落成她的园圃&#9834;鸟雀衔来善的种子，百花编织爱的颂歌&#9834;<br>  她便是这样降生于世，行于大地，与人类一同长大，与世界一起发芽&#9834;<br>  而今，终焉之时将至&#9834;<br>  而今，归去之时已至&#9834;<br>  就此告别吧，美丽的世界&#9834;<br>  此后，将有群星闪耀，因为我如今来过&#9834;<br>  此后，将有百花绽放，因为我从未离去&#9834;<br>  请将我的箭、我的花、与我的爱，织成新生的种子，带向那枯萎的大地&#9834;<br>  然后，便让它开出永恒而无瑕的…人性之华吧&#9834;<br>  我名为爱莉希雅&#9834;<br>  最初的律者，人之律者&#9834;<br>  <img src=\"https://fastly.jsdelivr.net/gh/Guailoudou/urlimg@main/bh3ali.png\" alt=\"爱莉希雅\"></p>\n</blockquote>\n<hr>\n<p><img src=\"https://api.xingzhige.com/API/yshl/\" alt=\"hli\"><br>©2023 guailoudou</p>\n","excerpt":"","more":"<h2 id=\"详细\"><a href=\"#详细\" class=\"headerlink\" title=\"详细\"></a>详细</h2><ul>\n<li><a href=\"https://github.com/Guailoudou/openp2p-launcher/tree/mc\"><img src=\"https://img.shields.io/badge/Github-Openp2p%20Launcher-Green?logo=github\" alt=\"github\"></a> </li>\n<li><a href=\"https://github.com/Guailoudou/openp2p-launcher/issues\"><img src=\"https://img.shields.io/badge/Github-issues-Green?logo=github\" alt=\"issues\"></a> </li>\n<li><a href=\"https://space.bilibili.com/496960407\"><img src=\"https://img.shields.io/badge/bilibili-%E4%B9%96%E6%BC%8F%E6%96%97-pink?logo=bilibili&logoColor=#00A1D6\" alt=\"在b站关注我\"></a></li>\n</ul>\n<p>这是一款p2p的mc联机工具，世界直接出现在局域网，无需输入服务器地址，本程序基于<a href=\"https://github.com/openp2p-cn/openp2p\">openp2p</a>，本质为自动生成openp2p的配置文件，使用公共账户简化其使用，添加针对mc的功能，本程序开源，使用c++编写</p>\n<p>直连的连通性依赖于nat类型，具体条件见下面的<a href=\"#user-content-nat%E8%BF%9E%E9%80%9A%E6%80%A7\">nat连通性</a>,使用用户<strong>多</strong>的时候不满足条件的也可以连上（中转） 仅直连条件下可以达到<strong>理论最低</strong>延迟</p>\n<p>查毒报告(内有行为分析，觉得不安全可以看看，文件已同步至0.5.6.3于2024-2-2上传)：<br><a href=\"https://s.threatbook.com/report/file/c1a5f05f2d383506c0dcae99682b01fcca29f9033bdd92ccbb91e4602465b78d\">微步沙箱 -x64</a><br><a href=\"https://s.threatbook.com/report/file/493ed1b963b870d953c8818b9a565c5837043b81ead8286922a26f3ecc0c3cca\">微步沙箱 -x86</a></p>\n<ul>\n<li><a href=\"#%E6%8A%A5%E6%AF%92%E9%97%AE%E9%A2%98\">报毒问题</a></li>\n</ul>\n<p>使用方法根据提示输入即可，记得要<strong>回车</strong>。遇到问题可进群询问<code>873968900</code>（QQ）～ </p>\n<p><strong>转发给别人软件请不要连bin文件夹一起转发</strong><br><strong>转发给别人软件请不要连bin文件夹一起转发</strong></p>\n<p><a href=\"https://www.bilibili.com/video/BV11P411a7dH/\">视频演示</a></p>\n<h2 id=\"下载地址\"><a href=\"#下载地址\" class=\"headerlink\" title=\"下载地址\"></a>下载地址</h2><ul>\n<li>mc专用版<br>MD5值可以通过cmd在文件目录运行<code>certutil -hashfile 文件名 MD5</code>查看</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>下载地址</th>\n<th>MD5</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a href=\"https://gld.lanzoul.com/iMhnx1mzgo1a\">Download-0.5.6.3win-x64</a></td>\n<td>e3696937a3d4b1baff8bf8c65cb58dd8</td>\n</tr>\n<tr>\n<td><a href=\"https://gld.lanzoul.com/i78cA1mzgo9i\">Download-0.5.6.3win-x86</a></td>\n<td>171a63253a52d0a953c25a4f0e60716e</td>\n</tr>\n<tr>\n<td>or</td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/Guailoudou/openp2p-launcher/releases\">releases</a></td>\n<td>注意系统位数x64容易报毒，可下x86遇到问题可进群询问<code>873968900</code>（QQ）</td>\n</tr>\n<tr>\n<td><a href=\"https://gld.lanzoul.com/itZPD14z08qf\">Download</a></td>\n<td>nat测试工具</td>\n</tr>\n<tr>\n<td><a href=\"/2024/04/19/opl_ui/\">UI测试版</a></td>\n<td>基于.net4.7.2全新UI操作页面</td>\n</tr>\n<tr>\n<td><a href=\"https://gld.lanzoul.com/iQiQ81mn6k1e\">Download签名文件</a></td>\n<td>买不起签名，自己签了一个，这个是安装签名到信任的工具，可以一点程度上降低报毒（效果不明显）</td>\n</tr>\n</tbody></table>\n<hr>\n<ul>\n<li>其他版本（<strong>玩mc不要下这个，这个版本不推荐使用，如果有其他连接需求可直接使用openp2p</strong>）<br><a href=\"https://gld.lanzoul.com/icL0614z09ej\">Download-0.6.2win-x64</a></li>\n</ul>\n<h2 id=\"使用方法（0-5）\"><a href=\"#使用方法（0-5）\" class=\"headerlink\" title=\"使用方法（0.5）\"></a>使用方法（0.5）</h2><p>被连接的输入<strong>0</strong>然后<strong>回车</strong>即可,然后把你的<strong>uuid</strong>和<strong>游戏端口</strong>发给要连接的人</p>\n<p>连接的，输入<strong>1或2</strong>（tcp1，udp2，mc，泰拉瑞亚用1，幻兽帕鲁类用2）然后输入<strong>对方uuid</strong>和游戏<strong>对外开放的端口</strong>,连接成功后程序会显示连接成功，直接通过局域网进入即可。</p>\n<p>出现<code>系统无法执行指定的程序</code>为被杀毒软件拦截，请关闭查毒软件后重启程序，或参考下面为程序目录添加白名单</p>\n<p><em><strong>连接端口默认为原端口-1，连接ip为 <code>127.0.0.1</code></strong></em></p>\n<p>使用1或2运行一次之后，会在同目录创建一个以tcp udp uuid和端口命名的快捷方式，可以通过运行快捷方式快速启动，可以通过右键快捷方式-&gt;目标，修改尾部端口数字来修改端口号，uuid也可以在这里修改，0.5.6.2开始，最后加个1为udp隧道</p>\n<p><strong>请不要把你的uuid随便发给不认识的人</strong>，可能存在计算机被入侵的可能，不小心泄露uuid了可以通过删除bin文件夹重置uuid</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/Guailoudou/urlimg@main/jyw.png\" alt=\"jyw\"><br><img src=\"https://fastly.jsdelivr.net/gh/Guailoudou/urlimg@main/link.png\" alt=\"link\"></p>\n<h2 id=\"常见问题\"><a href=\"#常见问题\" class=\"headerlink\" title=\"常见问题\"></a>常见问题</h2><ol>\n<li>程序显示<code>**** offline, it will auto reconnect when peer node online</code>说明对方程序未启动，请让他输入0启动，如果已经确保启动了请重新启动，或检查uuid是否输入正确。</li>\n<li>联机mc请使用0.5的版本，<strong>连接成功</strong>后世界会直接出现在局域网，这是mc专用版。</li>\n<li>游戏显示<code>登入失败，无效的会话</code>：正版验证问题(房主登录了一般就不会出现)，都使用外置登录或加联机模组关闭验证即可（个人推荐外置登录，还能加载皮肤披风,联机模组在新版本中貌似失效了）</li>\n<li>直连可行性受nat类型影响，为p2p连接，无中间服务器，具体见下面表格</li>\n<li><code>系统无法执行指定的程序</code>被杀毒软件拦截了，见下面<a href=\"#user-content-%E6%8A%A5%E6%AF%92%E9%97%AE%E9%A2%98\">杀毒</a></li>\n<li>程序显示<code>连接成功</code>但游戏进来显示<code>连接超时</code>：检查端口有没有输入错误，核对端口的准确性</li>\n<li>反复异常断开连接：添加服务器ip地址，重启程序，刷新出服务器信息再进入</li>\n<li>程序显示<code>ERROR dial tcp 127.0.0.1:*****: connectex:****** No connection could be made because the targ machine actively refused it.</code>游戏的对外端口不存在或无法访问，检查对方输的端口或重启mc重新获取端口即可</li>\n<li>3大运营商（电信 移动 联通）以外的运营商可以放弃尝试了，其他运营商（广电,长城…）基本都是nat4,流量充足可以考虑用流量,或者靠运气连上</li>\n<li>连不上可以尝试参看这个教程进行nat类型优化 <a href=\"https://zhuanlan.zhihu.com/p/338917185\">如何提升NAT类型?</a></li>\n<li>报错：<code>ERROR listen error:listen tcp :*****: bind: An attempt was made to access a socket in a way forbidden by its access permissions.</code>打开<code>bin</code>文件夹，打开<code>config.json</code> -&gt; 修改<code>SrcPort</code>参数为任意其他数字，推荐<code>25565-25665</code>之间的，然后直接打开<code>openp2p.exe</code>，再通过<code>127.0.0.1:刚才改后端口</code> 添加服务器后刷新出服务器信息再进入游戏</li>\n<li>更多常见问题等你来<a href=\"#user-content-%E9%97%AE%E9%A2%98%E5%8F%8D%E9%A6%88\">反馈</a><br>网上看到的，觉得说得很对~<img src=\"https://fastly.jsdelivr.net/gh/Guailoudou/urlimg@main/tw.png\" width=\"100%\" alt=\"说的很对\"></li>\n</ol>\n<h2 id=\"nat连通性\"><a href=\"#nat连通性\" class=\"headerlink\" title=\"nat连通性\"></a>nat连通性</h2><p><strong>优化手段</strong>：可以通过在路由器&#x2F;光猫开启upnp功能，以及设置DMZ主机的方式提高nat环境（光猫需要超级管理员账户密码）<br>nat类型可在程序刚刚开始运行时看到，为<code>NATtype</code>（不太准）<br>连不上可以尝试参看这个教程进行nat类型优化 <a href=\"https://zhuanlan.zhihu.com/p/338917185\">如何提升NAT类型?</a></p>\n<table>\n<thead>\n<tr>\n<th>nat类型</th>\n<th>nat值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Full cone NAT（全锥形NAT）</td>\n<td>nat1</td>\n</tr>\n<tr>\n<td>Port Restricted Cone NAT（端口受限锥形NAT）</td>\n<td>nat2</td>\n</tr>\n<tr>\n<td>Restricted Cone NAT（地址受限锥形NAT）</td>\n<td>nat3</td>\n</tr>\n<tr>\n<td>Symetric NAT（对称NAT）</td>\n<td>nat4</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th>nat值</th>\n<th>nat1</th>\n<th>nat2</th>\n<th>nat3</th>\n<th>nat4</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>nat1</td>\n<td>✔️</td>\n<td>✔️</td>\n<td>✔️</td>\n<td>✔️</td>\n</tr>\n<tr>\n<td>nat2</td>\n<td>✔️</td>\n<td>✔️</td>\n<td>✔️</td>\n<td>✖️</td>\n</tr>\n<tr>\n<td>nat3</td>\n<td>✔️</td>\n<td>✔️</td>\n<td>✖️</td>\n<td>✖️</td>\n</tr>\n<tr>\n<td>nat4</td>\n<td>✔️</td>\n<td>✖️</td>\n<td>✖️</td>\n<td>✖️</td>\n</tr>\n</tbody></table>\n<ul>\n<li>✔️代表可以建立直连，✖️不代表一定连不上，仅连接时间可能较长</li>\n</ul>\n<h2 id=\"报毒问题\"><a href=\"#报毒问题\" class=\"headerlink\" title=\"报毒问题\"></a>报毒问题</h2><ul>\n<li>程序安全无毒，程序完全开源，但因为没有软件代码证书，所以非常容易报毒（就输出个hello world放其他人电脑上都报毒）</li>\n<li>系统自带安全程序报毒：<br>Windows安全中心-&gt;病毒和威胁防护-&gt;“病毒和威胁防护”设置-&gt;管理设置-&gt;排除项-&gt;添加或删除排除项-&gt;添加排除项-&gt;文件夹，然后选择存放程序的上一级文件夹<br>或安装火绒顶掉，火绒不报毒</li>\n<li>其他报毒：<br>我无其他杀毒软件，大体和上面一致，就是把放程序那个文件夹添加到信任或排除，或安装火绒顶掉，火绒不报毒</li>\n<li>实在不行下x86（32位），这个报毒率低（我也不理解原理，代码一模一样）</li>\n</ul>\n<h2 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h2><blockquote>\n<p>之后的写这里，之前的懒得搬过来了</p>\n</blockquote>\n<h3 id=\"2024-1-29-v0-5-6-3\"><a href=\"#2024-1-29-v0-5-6-3\" class=\"headerlink\" title=\"2024-1-29 v0.5.6.3\"></a>2024-1-29 v0.5.6.3</h3><ul>\n<li>修复udp模式下连接成功后无中文提示的bug</li>\n</ul>\n<h3 id=\"2024-1-22-v0-5-6-2\"><a href=\"#2024-1-22-v0-5-6-2\" class=\"headerlink\" title=\"2024-1-22 v0.5.6.2\"></a>2024-1-22 v0.5.6.2</h3><ul>\n<li>添加模式2为udp隧道</li>\n<li>在新生成的快捷方式头部添加隧道类型（tcp&#x2F;udp）与以前的兼容</li>\n<li>快捷方式目标最后面添加1为udp隧道</li>\n<li>支持了单udp连接，连接的快捷方式与以前的兼容（支持upd的游戏啦~）</li>\n<li>修改了本地端口规则为默认-1</li>\n</ul>\n<h3 id=\"2023-11-30-v0-5-6-1\"><a href=\"#2023-11-30-v0-5-6-1\" class=\"headerlink\" title=\"2023-11-30 v0.5.6.1\"></a>2023-11-30 v0.5.6.1</h3><ul>\n<li>修复部分情况下程序中文显示乱码的问题</li>\n<li>修复0模式下无法正确接收openp2p版本更新的问题</li>\n</ul>\n<h3 id=\"2023-11-6-v0-5-6-0\"><a href=\"#2023-11-6-v0-5-6-0\" class=\"headerlink\" title=\"2023-11-6 v0.5.6.0\"></a>2023-11-6 v0.5.6.0</h3><ul>\n<li>去除了模式2，以快捷方式替代</li>\n<li>现在使用模式1连接后会自动生成一个快捷方式在同目录，快捷方式的路径后部可以直接更改端口，使用快捷方式打开，免输入参数</li>\n<li>去除了反复的<code>连接成功</code>，<code>连接中</code>的提示</li>\n<li>增加了程序图标，版本信息等</li>\n</ul>\n<h3 id=\"2023-10-5-v0-5-5-3\"><a href=\"#2023-10-5-v0-5-5-3\" class=\"headerlink\" title=\"2023-10-5 v0.5.5.3\"></a>2023-10-5 v0.5.5.3</h3><ul>\n<li>修复了一个陈年的，几乎没触发过的bug</li>\n<li>添加了部分可被推送openp2p更新的功能（未完成）</li>\n<li>学Java去~ 计划之后用Java再写一次，终极目标直接写成mod集成在mc（<del>画大饼</del>）</li>\n</ul>\n<h3 id=\"2023-9-5-v0-5-5-2\"><a href=\"#2023-9-5-v0-5-5-2\" class=\"headerlink\" title=\"2023-9-5 v0.5.5.2\"></a>2023-9-5 v0.5.5.2</h3><ul>\n<li>同步了openp2p版本到3.10.9，连接成功率大大提升，升级请删除bin文件夹内的openp2p文件</li>\n<li>增加了个小提示</li>\n</ul>\n<h3 id=\"2023-9-3-v0-5-5\"><a href=\"#2023-9-3-v0-5-5\" class=\"headerlink\" title=\"2023-9-3 v0.5.5\"></a>2023-9-3 v0.5.5</h3><ul>\n<li>今天是我生日嘞，学校网烂github延后上传</li>\n<li>修改了多线程运行逻辑，现在连接成功之后才会出现在局域网</li>\n<li>优化了显示是文字，将<code>sever not online</code>替换为<code>连接中...</code></li>\n</ul>\n<h3 id=\"2023-8-23\"><a href=\"#2023-8-23\" class=\"headerlink\" title=\"2023-8-23\"></a>2023-8-23</h3><ul>\n<li>现在有了支持x86的版本</li>\n</ul>\n<h3 id=\"0-5版本功能\"><a href=\"#0-5版本功能\" class=\"headerlink\" title=\"0.5版本功能\"></a>0.5版本功能</h3><ul>\n<li>0.5.3.4同步了openp2p版本到3.10.3(更新版本需要删除以前的bin&#x2F;openp2p文件)</li>\n<li>世界直接出现在局域网，无需输入服务器地址</li>\n<li>支持连接的免登录，房主得登录，可使用<a href=\"https://littleskin.cn/\">外置登录</a></li>\n<li>操作简单</li>\n</ul>\n<h2 id=\"问题反馈\"><a href=\"#问题反馈\" class=\"headerlink\" title=\"问题反馈\"></a>问题反馈</h2><ul>\n<li>遇到问题可入群反馈<code>873968900</code></li>\n<li>也可以在这里提出你的建议<br><a href=\"https://github.com/Guailoudou/openp2p-launcher/issues\"><img src=\"https://img.shields.io/badge/Github-issues-Green?logo=github\" alt=\"issues\"></a></li>\n</ul>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><ul>\n<li>littleskin皮肤站<br><a href=\"https://littleskin.cn/\"><img src=\"https://img.shields.io/badge/link-littleskin-Green?logo=minetest\" alt=\"pcl2\"></a></li>\n<li>pcl2下载地址<br> <a href=\"https://afdian.net/p/0164034c016c11ebafcb52540025c377\"><img src=\"https://img.shields.io/badge/link-PCL2-Green?logo=windows\" alt=\"pcl2\"></a></li>\n<li>HMCL下载地址<br> <a href=\"https://hmcl.huangyuhui.net/download/\"><img src=\"https://img.shields.io/badge/link-HMCL-Green?logo=windows\" alt=\"HMCL\"></a></li>\n<li>BakaXL下载地址<br> <a href=\"https://www.bakaxl.com/\"><img src=\"https://img.shields.io/badge/link-BakaXL-Green?logo=windows\" alt=\"BakaXL\"></a></li>\n</ul>\n<h2 id=\"爱门！！\"><a href=\"#爱门！！\" class=\"headerlink\" title=\"爱门！！\"></a>爱门！！</h2><p><del>发病ing</del></p>\n<blockquote>\n<p>某一日，祂从天坠落&#9834;<br>  人们抬头仰望，于是看见了星空&#9834;<br>  星月送来神的女儿，她愿成为人的伴侣&#9834;<br>  长风化作她的轺车，四海落成她的园圃&#9834;鸟雀衔来善的种子，百花编织爱的颂歌&#9834;<br>  她便是这样降生于世，行于大地，与人类一同长大，与世界一起发芽&#9834;<br>  而今，终焉之时将至&#9834;<br>  而今，归去之时已至&#9834;<br>  就此告别吧，美丽的世界&#9834;<br>  此后，将有群星闪耀，因为我如今来过&#9834;<br>  此后，将有百花绽放，因为我从未离去&#9834;<br>  请将我的箭、我的花、与我的爱，织成新生的种子，带向那枯萎的大地&#9834;<br>  然后，便让它开出永恒而无瑕的…人性之华吧&#9834;<br>  我名为爱莉希雅&#9834;<br>  最初的律者，人之律者&#9834;<br>  <img src=\"https://fastly.jsdelivr.net/gh/Guailoudou/urlimg@main/bh3ali.png\" alt=\"爱莉希雅\"></p>\n</blockquote>\n<hr>\n<p><img src=\"https://api.xingzhige.com/API/yshl/\" alt=\"hli\"><br>©2023 guailoudou</p>\n"},{"title":"OPL_WPF帮助文档","date":"2024-04-19T12:17:33.000Z","_content":"### 下载\n最新下载地址：[下载](https://47.115.207.37:82/d/yidonpan/file/opl/OPL%E8%81%94%E6%9C%BA%E5%B7%A5%E5%85%B7%20wpf%20%E6%9E%B6%E6%9E%84%E6%B5%8B%E8%AF%95%200.1.3.zip)\n\n### 使用方法\n1. 下载后解压，双击OPL_WpfApp.exe\n2. 被连接的仅需要在无隧道情况下直接启动即可，然后向需要连接你的人提供你的UUID和端口号即可\n3. 连接的需要新建隧道，新建隧道时需要输入被连接者的UUID和端口号（远程端口）本地端口可根据情况随意（默认相同），协议根据情况选择（MC为TCP），然后点击新建\n4. 根据情况启用隧道，运行过程中会锁定软件，无法操作\n5. 预设功能为一些固定端口的程序，如果你还知道其他固定端口的，可以提交给作者添加（该列表为联网更新）\n\n### 预设功能\n这里预计放一个实时同步的列表\n\n### 开源\n[![Github](https://img.shields.io/badge/Github-OPL_WpfApp-Green?logo=github)](https://img.shields.io/badge/Github-Openp2p%20Launcher-Green?logo=github)\n[![Github](https://img.shields.io/badge/Github-openp2p-Green?logo=github)](https://github.com/openp2p/openp2p)\n\n","source":"_posts/opl_ui.md","raw":"---\ntitle: OPL_WPF帮助文档\ndate: 2024-04-19 20:17:33\ntags:\n- 教程\n- 工具\n---\n### 下载\n最新下载地址：[下载](https://47.115.207.37:82/d/yidonpan/file/opl/OPL%E8%81%94%E6%9C%BA%E5%B7%A5%E5%85%B7%20wpf%20%E6%9E%B6%E6%9E%84%E6%B5%8B%E8%AF%95%200.1.3.zip)\n\n### 使用方法\n1. 下载后解压，双击OPL_WpfApp.exe\n2. 被连接的仅需要在无隧道情况下直接启动即可，然后向需要连接你的人提供你的UUID和端口号即可\n3. 连接的需要新建隧道，新建隧道时需要输入被连接者的UUID和端口号（远程端口）本地端口可根据情况随意（默认相同），协议根据情况选择（MC为TCP），然后点击新建\n4. 根据情况启用隧道，运行过程中会锁定软件，无法操作\n5. 预设功能为一些固定端口的程序，如果你还知道其他固定端口的，可以提交给作者添加（该列表为联网更新）\n\n### 预设功能\n这里预计放一个实时同步的列表\n\n### 开源\n[![Github](https://img.shields.io/badge/Github-OPL_WpfApp-Green?logo=github)](https://img.shields.io/badge/Github-Openp2p%20Launcher-Green?logo=github)\n[![Github](https://img.shields.io/badge/Github-openp2p-Green?logo=github)](https://github.com/openp2p/openp2p)\n\n","slug":"opl_ui","published":1,"updated":"2024-04-20T10:52:18.085Z","_id":"clv7juqk50000x8cka7n66o60","comments":1,"layout":"post","photos":[],"content":"<h3 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h3><p>最新下载地址：<a href=\"https://47.115.207.37:82/d/yidonpan/file/opl/OPL%E8%81%94%E6%9C%BA%E5%B7%A5%E5%85%B7%20wpf%20%E6%9E%B6%E6%9E%84%E6%B5%8B%E8%AF%95%200.1.3.zip\">下载</a></p>\n<h3 id=\"使用方法\"><a href=\"#使用方法\" class=\"headerlink\" title=\"使用方法\"></a>使用方法</h3><ol>\n<li>下载后解压，双击OPL_WpfApp.exe</li>\n<li>被连接的仅需要在无隧道情况下直接启动即可，然后向需要连接你的人提供你的UUID和端口号即可</li>\n<li>连接的需要新建隧道，新建隧道时需要输入被连接者的UUID和端口号（远程端口）本地端口可根据情况随意（默认相同），协议根据情况选择（MC为TCP），然后点击新建</li>\n<li>根据情况启用隧道，运行过程中会锁定软件，无法操作</li>\n<li>预设功能为一些固定端口的程序，如果你还知道其他固定端口的，可以提交给作者添加（该列表为联网更新）</li>\n</ol>\n<h3 id=\"预设功能\"><a href=\"#预设功能\" class=\"headerlink\" title=\"预设功能\"></a>预设功能</h3><p>这里预计放一个实时同步的列表</p>\n<h3 id=\"开源\"><a href=\"#开源\" class=\"headerlink\" title=\"开源\"></a>开源</h3><p><a href=\"https://img.shields.io/badge/Github-Openp2p%20Launcher-Green?logo=github\"><img src=\"https://img.shields.io/badge/Github-OPL_WpfApp-Green?logo=github\" alt=\"Github\"></a><br><a href=\"https://github.com/openp2p/openp2p\"><img src=\"https://img.shields.io/badge/Github-openp2p-Green?logo=github\" alt=\"Github\"></a></p>\n","excerpt":"","more":"<h3 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h3><p>最新下载地址：<a href=\"https://47.115.207.37:82/d/yidonpan/file/opl/OPL%E8%81%94%E6%9C%BA%E5%B7%A5%E5%85%B7%20wpf%20%E6%9E%B6%E6%9E%84%E6%B5%8B%E8%AF%95%200.1.3.zip\">下载</a></p>\n<h3 id=\"使用方法\"><a href=\"#使用方法\" class=\"headerlink\" title=\"使用方法\"></a>使用方法</h3><ol>\n<li>下载后解压，双击OPL_WpfApp.exe</li>\n<li>被连接的仅需要在无隧道情况下直接启动即可，然后向需要连接你的人提供你的UUID和端口号即可</li>\n<li>连接的需要新建隧道，新建隧道时需要输入被连接者的UUID和端口号（远程端口）本地端口可根据情况随意（默认相同），协议根据情况选择（MC为TCP），然后点击新建</li>\n<li>根据情况启用隧道，运行过程中会锁定软件，无法操作</li>\n<li>预设功能为一些固定端口的程序，如果你还知道其他固定端口的，可以提交给作者添加（该列表为联网更新）</li>\n</ol>\n<h3 id=\"预设功能\"><a href=\"#预设功能\" class=\"headerlink\" title=\"预设功能\"></a>预设功能</h3><p>这里预计放一个实时同步的列表</p>\n<h3 id=\"开源\"><a href=\"#开源\" class=\"headerlink\" title=\"开源\"></a>开源</h3><p><a href=\"https://img.shields.io/badge/Github-Openp2p%20Launcher-Green?logo=github\"><img src=\"https://img.shields.io/badge/Github-OPL_WpfApp-Green?logo=github\" alt=\"Github\"></a><br><a href=\"https://github.com/openp2p/openp2p\"><img src=\"https://img.shields.io/badge/Github-openp2p-Green?logo=github\" alt=\"Github\"></a></p>\n"},{"title":"使用新版opl联机mc教程","date":"2024-04-22T11:05:39.000Z","_content":"本教程前提是你和你的朋友已经安装了相同版本，且mod相同的minecraft.\n\n同时建议存在无正版玩家时，都使用外置登录\n\n注意，此教程为面向小白的教程，可能内容写得过于详细，请自行判断是否需要阅读。\n\n粘贴`ctrl` + `v`   复制`ctrl` + `c`\n\n### 作为房主\n1. 打开minecraft，进入游戏，选择单人游戏，根据情况进入世界\n2. 点击`esc`(键盘左上角)，点击`对局域网开放`\n3. 记录左下角出现的端口号\n4. 双击运行软件主程序，从页面左上角获取你的UUID\n5. 将你的`UUID`和`端口号`发个你的朋友，并点击右上角的启动按钮\n\n![tp1](tp1.png)\n\n### 作为连接的玩家\n1. 打开minecraft，点击多人游戏\n2. 打开软件主程序，点击右上角`新建连接`\n3. 依次输入房主为你提供的UUID和端口（填远程端口，本地端口会自动填写）协议选择`TCP`\n\n![tp2](tp2.png)\n\n4. 点击添加，然后点击右上角的启动 \n5. 可以在隧道列表处看到你的连接，`连接：ip:端口 ->`后为你进游戏的ip地址（请完整复制）\n \n![tp3](tp3.png)\n\n6. 点击左上角日志，观察日志出现连接成功的提示\n7. 回到游戏，点击`添加服务器`输入第5点处获取的ip地址(可提前添加)\n8. 刷新服务器列表，出现服务器信息后双击进入世界\n\n\n### 后记\n后续联机仅游戏端口会发生改变，房主发送新的端口即可，连接的玩家只需要点击编辑修改`远程端口`即可\n\n隧道可自行选择是否启用，也可以点击编辑参数\n\nopl联机工具下载：[UI测试版](/2024/04/19/opl_ui/)","source":"_posts/opl_mc.md","raw":"---\ntitle: 使用新版opl联机mc教程\ndate: 2024-04-22 19:05:39\ntags:\n- 教程\n---\n本教程前提是你和你的朋友已经安装了相同版本，且mod相同的minecraft.\n\n同时建议存在无正版玩家时，都使用外置登录\n\n注意，此教程为面向小白的教程，可能内容写得过于详细，请自行判断是否需要阅读。\n\n粘贴`ctrl` + `v`   复制`ctrl` + `c`\n\n### 作为房主\n1. 打开minecraft，进入游戏，选择单人游戏，根据情况进入世界\n2. 点击`esc`(键盘左上角)，点击`对局域网开放`\n3. 记录左下角出现的端口号\n4. 双击运行软件主程序，从页面左上角获取你的UUID\n5. 将你的`UUID`和`端口号`发个你的朋友，并点击右上角的启动按钮\n\n![tp1](tp1.png)\n\n### 作为连接的玩家\n1. 打开minecraft，点击多人游戏\n2. 打开软件主程序，点击右上角`新建连接`\n3. 依次输入房主为你提供的UUID和端口（填远程端口，本地端口会自动填写）协议选择`TCP`\n\n![tp2](tp2.png)\n\n4. 点击添加，然后点击右上角的启动 \n5. 可以在隧道列表处看到你的连接，`连接：ip:端口 ->`后为你进游戏的ip地址（请完整复制）\n \n![tp3](tp3.png)\n\n6. 点击左上角日志，观察日志出现连接成功的提示\n7. 回到游戏，点击`添加服务器`输入第5点处获取的ip地址(可提前添加)\n8. 刷新服务器列表，出现服务器信息后双击进入世界\n\n\n### 后记\n后续联机仅游戏端口会发生改变，房主发送新的端口即可，连接的玩家只需要点击编辑修改`远程端口`即可\n\n隧道可自行选择是否启用，也可以点击编辑参数\n\nopl联机工具下载：[UI测试版](/2024/04/19/opl_ui/)","slug":"opl_mc","published":1,"updated":"2024-04-23T07:59:41.148Z","comments":1,"layout":"post","photos":[],"_id":"clvc3ijto0000g4ckh2ljfg4t","content":"<p>本教程前提是你和你的朋友已经安装了相同版本，且mod相同的minecraft.</p>\n<p>同时建议存在无正版玩家时，都使用外置登录</p>\n<p>注意，此教程为面向小白的教程，可能内容写得过于详细，请自行判断是否需要阅读。</p>\n<p>粘贴<code>ctrl</code> + <code>v</code>   复制<code>ctrl</code> + <code>c</code></p>\n<h3 id=\"作为房主\"><a href=\"#作为房主\" class=\"headerlink\" title=\"作为房主\"></a>作为房主</h3><ol>\n<li>打开minecraft，进入游戏，选择单人游戏，根据情况进入世界</li>\n<li>点击<code>esc</code>(键盘左上角)，点击<code>对局域网开放</code></li>\n<li>记录左下角出现的端口号</li>\n<li>双击运行软件主程序，从页面左上角获取你的UUID</li>\n<li>将你的<code>UUID</code>和<code>端口号</code>发个你的朋友，并点击右上角的启动按钮</li>\n</ol>\n<p><img src=\"/2024/04/22/opl_mc/tp1.png\" alt=\"tp1\"></p>\n<h3 id=\"作为连接的玩家\"><a href=\"#作为连接的玩家\" class=\"headerlink\" title=\"作为连接的玩家\"></a>作为连接的玩家</h3><ol>\n<li>打开minecraft，点击多人游戏</li>\n<li>打开软件主程序，点击右上角<code>新建连接</code></li>\n<li>依次输入房主为你提供的UUID和端口（填远程端口，本地端口会自动填写）协议选择<code>TCP</code></li>\n</ol>\n<p><img src=\"/2024/04/22/opl_mc/tp2.png\" alt=\"tp2\"></p>\n<ol start=\"4\">\n<li>点击添加，然后点击右上角的启动 </li>\n<li>可以在隧道列表处看到你的连接，<code>连接：ip:端口 -&gt;</code>后为你进游戏的ip地址（请完整复制）</li>\n</ol>\n<p><img src=\"/2024/04/22/opl_mc/tp3.png\" alt=\"tp3\"></p>\n<ol start=\"6\">\n<li>点击左上角日志，观察日志出现连接成功的提示</li>\n<li>回到游戏，点击<code>添加服务器</code>输入第5点处获取的ip地址(可提前添加)</li>\n<li>刷新服务器列表，出现服务器信息后双击进入世界</li>\n</ol>\n<h3 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h3><p>后续联机仅游戏端口会发生改变，房主发送新的端口即可，连接的玩家只需要点击编辑修改<code>远程端口</code>即可</p>\n<p>隧道可自行选择是否启用，也可以点击编辑参数</p>\n<p>opl联机工具下载：<a href=\"/2024/04/19/opl_ui/\">UI测试版</a></p>\n","excerpt":"","more":"<p>本教程前提是你和你的朋友已经安装了相同版本，且mod相同的minecraft.</p>\n<p>同时建议存在无正版玩家时，都使用外置登录</p>\n<p>注意，此教程为面向小白的教程，可能内容写得过于详细，请自行判断是否需要阅读。</p>\n<p>粘贴<code>ctrl</code> + <code>v</code>   复制<code>ctrl</code> + <code>c</code></p>\n<h3 id=\"作为房主\"><a href=\"#作为房主\" class=\"headerlink\" title=\"作为房主\"></a>作为房主</h3><ol>\n<li>打开minecraft，进入游戏，选择单人游戏，根据情况进入世界</li>\n<li>点击<code>esc</code>(键盘左上角)，点击<code>对局域网开放</code></li>\n<li>记录左下角出现的端口号</li>\n<li>双击运行软件主程序，从页面左上角获取你的UUID</li>\n<li>将你的<code>UUID</code>和<code>端口号</code>发个你的朋友，并点击右上角的启动按钮</li>\n</ol>\n<p><img src=\"/2024/04/22/opl_mc/tp1.png\" alt=\"tp1\"></p>\n<h3 id=\"作为连接的玩家\"><a href=\"#作为连接的玩家\" class=\"headerlink\" title=\"作为连接的玩家\"></a>作为连接的玩家</h3><ol>\n<li>打开minecraft，点击多人游戏</li>\n<li>打开软件主程序，点击右上角<code>新建连接</code></li>\n<li>依次输入房主为你提供的UUID和端口（填远程端口，本地端口会自动填写）协议选择<code>TCP</code></li>\n</ol>\n<p><img src=\"/2024/04/22/opl_mc/tp2.png\" alt=\"tp2\"></p>\n<ol start=\"4\">\n<li>点击添加，然后点击右上角的启动 </li>\n<li>可以在隧道列表处看到你的连接，<code>连接：ip:端口 -&gt;</code>后为你进游戏的ip地址（请完整复制）</li>\n</ol>\n<p><img src=\"/2024/04/22/opl_mc/tp3.png\" alt=\"tp3\"></p>\n<ol start=\"6\">\n<li>点击左上角日志，观察日志出现连接成功的提示</li>\n<li>回到游戏，点击<code>添加服务器</code>输入第5点处获取的ip地址(可提前添加)</li>\n<li>刷新服务器列表，出现服务器信息后双击进入世界</li>\n</ol>\n<h3 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h3><p>后续联机仅游戏端口会发生改变，房主发送新的端口即可，连接的玩家只需要点击编辑修改<code>远程端口</code>即可</p>\n<p>隧道可自行选择是否启用，也可以点击编辑参数</p>\n<p>opl联机工具下载：<a href=\"/2024/04/19/opl_ui/\">UI测试版</a></p>\n"}],"PostAsset":[{"_id":"source/_posts/UUIDMigrator/40fd3918e4985fcc126a54d3f75abc8f496960407.png","slug":"40fd3918e4985fcc126a54d3f75abc8f496960407.png","post":"clt70ww8n0001tocke81i8qa0","modified":0,"renderable":0},{"_id":"source/_posts/UUIDMigrator/UUIDMigrator.bat","slug":"UUIDMigrator.bat","post":"clt70ww8n0001tocke81i8qa0","modified":0,"renderable":0},{"_id":"source/_posts/mcwiki/24da33d6b7033c8fd97619ebd0047548496960407.gif","slug":"24da33d6b7033c8fd97619ebd0047548496960407.gif","post":"clt70ww8u000dtockc9riczda","modified":0,"renderable":0},{"_id":"source/_posts/mcwiki/e584cbe3b84c2c5613e45a3f049b887f496960407.png","slug":"e584cbe3b84c2c5613e45a3f049b887f496960407.png","post":"clt70ww8u000dtockc9riczda","modified":0,"renderable":0},{"_id":"source/_posts/sf4-1work/tm.png","slug":"tm.png","post":"cluorolsc0000u8ckbuy25ikx","modified":0,"renderable":0},{"_id":"source/_posts/opl_mc/tp1.png","slug":"tp1.png","post":"clvc3ijto0000g4ckh2ljfg4t","modified":0,"renderable":0},{"_id":"source/_posts/opl_mc/tp2.png","slug":"tp2.png","post":"clvc3ijto0000g4ckh2ljfg4t","modified":0,"renderable":0},{"_id":"source/_posts/opl_mc/tp3.png","slug":"tp3.png","post":"clvc3ijto0000g4ckh2ljfg4t","modified":0,"renderable":0}],"PostCategory":[],"PostTag":[{"post_id":"clt70ww8n0001tocke81i8qa0","tag_id":"clt70ww8q0003tockepoigfde","_id":"clt70ww8r0005tockb70m6ib3"},{"post_id":"clt70ww8n0001tocke81i8qa0","tag_id":"clt70ww8r0004tock537k5ggv","_id":"clt70ww8r0006tock6n0x7aeq"},{"post_id":"clt70ww8t000atocke8w46hgc","tag_id":"clt70ww8q0003tockepoigfde","_id":"clt70ww8v000etock8fki7yjw"},{"post_id":"clt70ww8u000dtockc9riczda","tag_id":"clt70ww8q0003tockepoigfde","_id":"clt70ww8v000gtock1j8u4olj"},{"post_id":"clt70ww8t0008tock7zrj11h1","tag_id":"clt70ww8u000btock41at704s","_id":"clt70ww8v000htock1g4hd3ua"},{"post_id":"clt8n39wh0000s0ckf9xr5c0b","tag_id":"clt8n474q00009sck8dry66hx","_id":"clt8n474s00029sck87q355g3"},{"post_id":"clt8n39wh0000s0ckf9xr5c0b","tag_id":"clt8n474s00019sck6nfc8yw5","_id":"clt8n474s00039sck28d1gtki"},{"post_id":"clt8tj55d0000asckbd2m046u","tag_id":"clt70ww8u000btock41at704s","_id":"clt8tj55h0002asck7tpw7a1d"},{"post_id":"clt8tj55d0000asckbd2m046u","tag_id":"clt8tj55f0001asck7gxi1uyr","_id":"clt8tj55h0003asck3hjx06gt"},{"post_id":"cltmz0uou0000g8ckdulicyhz","tag_id":"clt70ww8u000btock41at704s","_id":"cltmz0uoz0001g8ckbw2odkal"},{"post_id":"cluicved600003gck76efansb","tag_id":"cluicvedb00013gck9cth8jpz","_id":"cluicvede00023gckgo4i8uy8"},{"post_id":"cluorolsc0000u8ckbuy25ikx","tag_id":"cluorolsf0001u8ck2r18h1s5","_id":"cluorolsh0002u8ck552400l8"},{"post_id":"cluuy2wzc00001sckeqmy144f","tag_id":"cluicvedb00013gck9cth8jpz","_id":"cluuykgjv000094ck9jhw1jra"},{"post_id":"clv10seiv00002wck1lv8hbvf","tag_id":"clt70ww8q0003tockepoigfde","_id":"clv10seiz00012wcka69w5lcp"},{"post_id":"clv10seiv00002wck1lv8hbvf","tag_id":"clt70ww8r0004tock537k5ggv","_id":"clv10seiz00022wck8asu1oih"},{"post_id":"clv7juqk50000x8cka7n66o60","tag_id":"clt70ww8q0003tockepoigfde","_id":"clv7zcz8c0000jkckgop77zvr"},{"post_id":"clv7juqk50000x8cka7n66o60","tag_id":"clt70ww8r0004tock537k5ggv","_id":"clv7zcz8c0001jkck90ym0k37"},{"post_id":"clvc3ijto0000g4ckh2ljfg4t","tag_id":"clt70ww8q0003tockepoigfde","_id":"clvc3ijtr0001g4ckailk1jli"}],"Tag":[{"name":"教程","_id":"clt70ww8q0003tockepoigfde"},{"name":"工具","_id":"clt70ww8r0004tock537k5ggv"},{"name":"日志","_id":"clt70ww8u000btock41at704s"},{"name":"前瞻","_id":"clt8n474q00009sck8dry66hx"},{"name":"原神","_id":"clt8n474s00019sck6nfc8yw5"},{"name":"学习","_id":"clt8tj55f0001asck7gxi1uyr"},{"name":"笔记","_id":"cluicvedb00013gck9cth8jpz"},{"name":"作业","_id":"cluorolsf0001u8ck2r18h1s5"}]}}